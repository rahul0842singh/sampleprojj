{"version":3,"file":"index.js","sources":["../src/Types.ts","../src/Instance.ts","../src/EventTarget.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Tabster.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TabsterAttributeName = \"data-tabster\";\nexport const TabsterDummyInputAttributeName = \"data-tabster-dummy\";\nexport const DeloserEventName = \"tabster:deloser\";\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\nexport const ModalizerBeforeFocusOutEventName =\n    \"tabster:modalizer:beforefocusout\";\nexport const MoverEventName = \"tabster:mover\";\nexport const FocusInEventName = \"tabster:focusin\";\nexport const FocusOutEventName = \"tabster:focusout\";\n\nexport interface TabsterEventWithDetails<D> extends Event {\n    details: D;\n}\n\nexport interface TabsterDOMAttribute {\n    [TabsterAttributeName]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    details: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetails {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetails>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccesibility;\n}\n\nexport interface ObservedElementAccesibilities {\n    Any: 0;\n    Accessible: 1;\n    Focusable: 2;\n}\nexport type ObservedElementAccesibility =\n    ObservedElementAccesibilities[keyof ObservedElementAccesibilities];\nexport const ObservedElementAccesibilities: ObservedElementAccesibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n};\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetails>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nexport interface RestoreFocusOrders {\n    History: 0;\n    DeloserDefault: 1;\n    RootDefault: 2;\n    DeloserFirst: 3;\n    RootFirst: 4;\n}\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\nexport const RestoreFocusOrders: RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n};\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    lastToIgnore?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    nextUncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreUncontrolled?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    isFindAll?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore uncontrolled areas.\n     */\n    ignoreUncontrolled?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called if an uncontrolled area is met.\n     * @param el uncontrolled element.\n     */\n    onUncontrolled?(el: HTMLElement): void;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n    | \"onUncontrolled\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(options: FindFirstProps): HTMLElement | null | undefined;\n    findLast(options: FindFirstProps): HTMLElement | null | undefined;\n    findNext(options: FindNextProps): HTMLElement | null | undefined;\n    findPrev(options: FindNextProps): HTMLElement | null | undefined;\n    findDefault(options: FindDefaultProps): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(options: FindFocusableProps): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (backwards: boolean) => void;\n}\n\nexport interface Visibilities {\n    Invisible: 0;\n    PartiallyVisible: 1;\n    Visible: 2;\n}\nexport const Visibilities: Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n};\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nexport interface MoverDirections {\n    Both: 0; // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1; // Only up/down arrows move to the next/previous.\n    Horizontal: 2; // Only left/right arrows move to the next/previous.\n    Grid: 3; // Two-dimentional movement depending on the visual placement.\n}\nexport const MoverDirections: MoverDirections = {\n    Both: 0,\n    Vertical: 1,\n    Horizontal: 2,\n    Grid: 3,\n};\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport type NextTabbable = {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement;\n    lastMoverOrGroupper?: Mover | Groupper;\n    outOfDOMOrder?: boolean;\n};\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport type MoverEvent = TabsterEventWithDetails<MoverElementState>;\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(element: HTMLElement, props: MoverProps): Mover;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {}\n\nexport interface GroupperTabbabilities {\n    Unlimited: 0;\n    Limited: 1; // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2; // The focus is limited as above, plus trapped when inside.\n}\nexport const GroupperTabbabilities: GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1,\n    LimitedTrapFocus: 2,\n};\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(element: HTMLElement, props: GroupperProps): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        noGoUp?: boolean\n    ): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport type ModalizerEventName =\n    | typeof ModalizerActiveEventName\n    | typeof ModalizerInactiveEventName\n    | typeof ModalizerBeforeFocusOutEventName\n    | typeof ModalizerFocusInEventName\n    | typeof ModalizerFocusOutEventName;\n\nexport type ModalizerEventDetails = {\n    id: string;\n    element: HTMLElement;\n    eventName: ModalizerEventName;\n};\n\nexport type ModalizerEvent = TabsterEventWithDetails<ModalizerEventDetails>;\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n    triggerFocusEvent(\n        eventName: ModalizerEventName,\n        allElements: boolean\n    ): boolean;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(backwards: boolean): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    isGroupperFirst?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    isRtl?: boolean;\n    /**\n     * The uncontrolled container of this element (if any).\n     */\n    uncontrolled?: HTMLElement;\n    isExcludedFromMover?: boolean;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\nexport interface RootFocusEventDetails {\n    element: HTMLElement;\n    fromAdjacent?: boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(element: HTMLElement, props: RootProps): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {\n    eventTarget: EventTarget;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface UncontrolledAPI {}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakRef<HTMLElement>[];\n    /** @internal */\n    createModalizer(element: HTMLElement, props: ModalizerProps): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: Record<string, never>;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledOnElement[\"uncontrolled\"];\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(Types.TabsterAttributeName);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { GetWindow } from \"./Types\";\n\nexport function createEventTarget(getWindow: GetWindow): EventTarget {\n    const global = getWindow() as unknown as typeof globalThis;\n\n    if (global.EventTarget) {\n        return new global.EventTarget();\n    }\n\n    return global.document.createElement(\"div\");\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport * as Types from \"./Types\";\nimport { GetWindow, Visibilities, Visibility } from \"./Types\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\nexport interface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements Types.WeakHTMLElement<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return doc.createTreeWalker(\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = element.parentElement;\n            el;\n            el = el.parentElement\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!parent.contains(el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return !!doc?.body?.contains(element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements Types.TabsterPart<P>\n{\n    protected _tabster: Types.TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: Types.TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: Types.GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(Types.TabsterDummyInputAttributeName, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        input.parentElement?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget =\n                DummyInputManager.getLastPhantomFrom() ||\n                (e.relatedTarget as HTMLElement | null);\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n};\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n    private static _lastPhantomFrom: HTMLElement | undefined;\n\n    moveOut: DummyInputManagerCore[\"moveOut\"];\n    moveOutWithDefaultAction: DummyInputManagerCore[\"moveOutWithDefaultAction\"];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            outsideByDefault,\n            callForDefaultAction\n        );\n\n        this.moveOut = (backwards: boolean) => {\n            this._instance?.moveOut(backwards);\n        };\n\n        this.moveOutWithDefaultAction = (backwards: boolean) => {\n            this._instance?.moveOutWithDefaultAction(backwards);\n        };\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static getLastPhantomFrom(): HTMLElement | undefined {\n        const ret = DummyInputManager._lastPhantomFrom;\n        delete DummyInputManager._lastPhantomFrom;\n        return ret;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        moveOutside: boolean,\n        isBackward: boolean\n    ): void {\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            const parent = element.parentElement;\n\n            if (parent) {\n                let insertBefore = (\n                    (moveOutside && !isBackward) || (!moveOutside && isBackward)\n                        ? element.nextElementSibling\n                        : element\n                ) as HTMLElementWithDummyContainer | null;\n\n                if (insertBefore) {\n                    if (isBackward) {\n                        const beforeBefore =\n                            insertBefore.previousElementSibling as HTMLElementWithDummyContainer | null;\n\n                        if (\n                            beforeBefore &&\n                            beforeBefore.__tabsterDummyContainer\n                        ) {\n                            insertBefore = beforeBefore;\n                        }\n                    } else if (insertBefore.__tabsterDummyContainer) {\n                        insertBefore =\n                            insertBefore.nextElementSibling as HTMLElementWithDummyContainer | null;\n                    }\n                }\n\n                parent.insertBefore(input, insertBefore);\n\n                DummyInputManager._lastPhantomFrom = element;\n\n                tabster.getWindow().setTimeout(() => {\n                    delete DummyInputManager._lastPhantomFrom;\n                }, 0);\n\n                nativeFocus(input);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        Types.TabsterDummyInputAttributeName,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: Types.TabsterCore;\n    private _unobserve: (() => void) | undefined;\n    private _addTimer: number | undefined;\n    private _getWindow: Types.GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: HTMLElement[] = [];\n    private _scrollTimer: number | undefined;\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const tagName = element.get()?.tagName;\n        this._isOutside =\n            (outsideByDefault ||\n                tagName === \"UL\" ||\n                tagName === \"OL\" ||\n                tagName === \"TABLE\") &&\n            !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\");\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n\n        // older versions of testing frameworks like JSDOM don't support MutationObserver\n        // https://github.com/jsdom/jsdom/issues/639\n        // use this way of getting NODE_ENV because tsdx does not support a test environment\n        // https://github.com/jaredpalmer/tsdx/issues/167\n        if (\n            typeof process === \"undefined\" ||\n            process.env[\"NODE_ENV\"] !== \"test\"\n        ) {\n            this._observeMutations();\n        }\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n            if (this._unobserve) {\n                this._unobserve();\n                delete this._unobserve;\n            }\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements = [];\n\n            const win = this._getWindow();\n\n            if (this._scrollTimer) {\n                win.clearTimeout(this._scrollTimer);\n                delete this._scrollTimer;\n            }\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs() {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            const element = this._element?.get();\n            const dif = this._firstDummy?.input;\n            const dil = this._lastDummy?.input;\n\n            if (!element || !dif || !dil) {\n                return;\n            }\n\n            if (this._isOutside) {\n                const elementParent = element.parentElement;\n\n                if (elementParent) {\n                    const nextSibling = element.nextElementSibling;\n\n                    if (nextSibling !== dil) {\n                        elementParent.insertBefore(dil, nextSibling);\n                    }\n\n                    if (element.previousElementSibling !== dif) {\n                        elementParent.insertBefore(dif, element);\n                    }\n                }\n            } else {\n                if (element.lastElementChild !== dil) {\n                    element.appendChild(dil);\n                }\n\n                const firstElementChild = element.firstElementChild;\n\n                if (firstElementChild && firstElementChild !== dif) {\n                    element.insertBefore(dif, firstElementChild);\n                }\n            }\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    }\n\n    /**\n     * Creates a mutation observer to ensure that on DOM changes, the dummy inputs\n     * stay as the first and last child elements\n     */\n    private _observeMutations(): void {\n        if (this._unobserve) {\n            return;\n        }\n\n        const observer = new MutationObserver(() => {\n            if (this._unobserve) {\n                this._addDummyInputs();\n            }\n        });\n\n        const element = this._element?.get();\n        const actualElement = this._isOutside\n            ? element?.parentElement\n            : element;\n\n        if (actualElement) {\n            observer.observe(actualElement, { childList: true });\n\n            this._unobserve = () => {\n                observer.disconnect();\n            };\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        const win = this._getWindow();\n\n        if (this._scrollTimer) {\n            win.clearTimeout(this._scrollTimer);\n        }\n\n        // Making sure we're not updating the dummy inputs while scrolling to avoid excessive reflows.\n        this._scrollTimer = win.setTimeout(() => {\n            delete this._scrollTimer;\n            this._reallyAddTransformOffsets();\n        }, 100);\n    };\n\n    private _reallyAddTransformOffsets(): void {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: HTMLElement[] = [];\n        const transformElementsMap = new WeakMap<HTMLElement, HTMLElement>();\n        const newTransformElementsMap = new WeakMap<HTMLElement, HTMLElement>();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        for (const el of transformElements) {\n            transformElementsMap.set(el, el);\n        }\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element;\n            element = element.parentElement\n        ) {\n            const transform = win.getComputedStyle(element).transform;\n            if (transform && transform !== \"none\") {\n                let el = transformElementsMap.get(element);\n\n                if (!el) {\n                    el = element;\n                    el.addEventListener(\"scroll\", this._addTransformOffsets);\n                }\n\n                newTransformElements.push(el);\n                newTransformElementsMap.set(el, el);\n\n                scrollTop += el.scrollTop;\n                scrollLeft += el.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElementsMap.get(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n        this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n    }\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (let i = container.lastElementChild; i; i = i.lastElementChild) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev ? cur.previousElementSibling : cur.nextElementSibling\n        ) as HTMLElement | null;\n        cur = cur.parentElement;\n    }\n\n    return adjacent || undefined;\n}\n\nexport function triggerEvent<D>(\n    target: HTMLElement | EventTarget,\n    name: string,\n    details: D\n): boolean {\n    const event = document.createEvent(\n        \"HTMLEvents\"\n    ) as Types.TabsterEventWithDetails<D>;\n\n    event.initEvent(name, true, true);\n\n    event.details = details;\n\n    target.dispatchEvent(event);\n\n    return !event.defaultPrevented;\n}\n\nexport function augmentAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [Types.TabsterAttributeName]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(Types.TabsterAttributeName);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            Types.TabsterAttributeName,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(Types.TabsterAttributeName);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { createEventTarget } from \"./EventTarget\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean, fromAdjacent?: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean, fromAdjacent?: boolean) => void\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false, true);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true, true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _setTabbableTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        tabster.focusedElement.subscribe(this._onFocus);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._setTabbableTimer) {\n            win.clearTimeout(this._setTabbableTimer);\n            delete this._setTabbableTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward\n                );\n            }\n        }\n    }\n\n    private _setFocused = (\n        hasFocused: boolean,\n        fromAdjacent?: boolean\n    ): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                triggerEvent<Types.RootFocusEventDetails>(\n                    this._tabster.root.eventTarget,\n                    \"focus\",\n                    { element, fromAdjacent }\n                );\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n                        this._isFocused = false;\n                        triggerEvent<Types.RootFocusEventDetails>(\n                            this._tabster.root.eventTarget,\n                            \"blur\",\n                            { element, fromAdjacent }\n                        );\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined) => {\n        const win = this._tabster.getWindow();\n\n        if (this._setTabbableTimer) {\n            win.clearTimeout(this._setTabbableTimer);\n            delete this._setTabbableTimer;\n        }\n\n        if (e) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, e);\n\n            if (ctx) {\n                this._setFocused(ctx.root.getElement() === this._element.get());\n            }\n\n            if (!ctx || ctx.uncontrolled || this._tabster.rootDummyInputs) {\n                this._dummyManager?.setTabbable(false);\n                return;\n            }\n        } else {\n            this._setFocused(false);\n        }\n\n        this._setTabbableTimer = win.setTimeout(() => {\n            delete this._setTabbableTimer;\n            this._dummyManager?.setTabbable(true);\n        }, 0);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n    eventTarget: EventTarget;\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n        this._autoRoot = autoRoot;\n        this.eventTarget = createEventTarget(this._win);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        if (this._autoRoot) {\n            this._autoRootCreate();\n        }\n    };\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        if (this._initTimer) {\n            return;\n        }\n\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        win.clearTimeout(this._initTimer);\n        this._initTimer = undefined;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(element: HTMLElement, props: Types.RootProps): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const checkRtl = options.checkRtl;\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let isExcludedFromMover = false;\n        let isGroupperFirst: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let isRtl: boolean | undefined;\n        let uncontrolled: HTMLElement | undefined;\n        let curElement: Node | null = element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && isRtl === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    isRtl = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = curElement.parentElement;\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                tabsterOnElement.uncontrolled ||\n                tagName === \"IFRAME\" ||\n                tagName === \"WEBVIEW\"\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                isExcludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (!mover && curMover && (!modalizer || curModalizer)) {\n                mover = curMover;\n                isGroupperFirst = !!groupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = curElement.parentElement;\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            isGroupperFirst = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[event.key as \"Tab\"];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  isGroupperFirst,\n                  modalizerInGroupper,\n                  isRtl: checkRtl ? !!isRtl : undefined,\n                  uncontrolled,\n                  isExcludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = el.parentElement\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const available = this._deloser.findAvailable();\n        return available\n            ? this._tabster.focusedElement.focus(available)\n            : false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await i.focusAvailable())) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.focusAvailable(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    if (element.id) {\n        selector.push(\n            \"#\" + element.id.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let el = element.parentElement;\n\n    while (el) {\n        const isBody = el.tagName === \"BODY\";\n        selector.unshift(buildElementSelector(el, false, !isBody));\n\n        if (isBody) {\n            break;\n        }\n\n        el = el.parentElement;\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === Types.RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (\n            !available &&\n            restoreFocusOrder === Types.RestoreFocusOrders.RootFirst\n        ) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === Types.RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? element.contains(e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return triggerEvent(element, Types.DeloserEventName, this.getActions());\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && element.contains(e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: NodeListOf<Element>;\n\n                    try {\n                        els = element.ownerDocument.querySelectorAll(selector);\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                ignoreUncontrolled: true,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n        this._initTimer = this._win().setTimeout(this._init, 0);\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    !!lastFocused?.offsetParent)\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                const el = curDeloser.findAvailable();\n\n                if (el && this._tabster.focusedElement.focus(el)) {\n                    return;\n                }\n            }\n\n            this._deactivate();\n\n            this._isRestoringFocus = true;\n\n            if (!(await this._history.focusAvailable(null))) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, details: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, details);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, details: B): void {\n        this._callCallbacks(val, details);\n    }\n\n    private _callCallbacks(val: A, details: B): void {\n        this._callbacks.forEach((callback) => callback(val, details));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccesibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = getOwner().document.getElementById(data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetails\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, details);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._initTimer = this._win().setTimeout(this._init, 0);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        if (this._initTimer) {\n            this._win().clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getLastChild,\n    matchesSelector,\n    shouldIgnoreFocus,\n    HTMLElementWithDummyContainer,\n} from \"./Utils\";\n\nconst _focusableSelector = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n].join(\", \");\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, _focusableSelector) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument) {\n            return false;\n        }\n\n        if (el.offsetParent === null && el.ownerDocument.body !== el) {\n            return false;\n        }\n\n        const win = el.ownerDocument.defaultView;\n\n        if (!win) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        const computedStyle = win.getComputedStyle(el);\n\n        if (computedStyle.visibility === \"hidden\") {\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(options: Types.FindFirstProps): HTMLElement | null | undefined {\n        return this.findElement({\n            ...options,\n        });\n    }\n\n    findLast(options: Types.FindFirstProps): HTMLElement | null | undefined {\n        return this.findElement({\n            isBackward: true,\n            ...options,\n        });\n    }\n\n    findNext(options: Types.FindNextProps): HTMLElement | null | undefined {\n        return this.findElement({\n            ...options,\n        });\n    }\n\n    findPrev(options: Types.FindNextProps): HTMLElement | null | undefined {\n        return this.findElement({\n            isBackward: true,\n            ...options,\n        });\n    }\n\n    findDefault(options: Types.FindDefaultProps): HTMLElement | null {\n        return (\n            this.findElement({\n                ...options,\n                acceptCondition: (el) =>\n                    this._tabster.focusable.isFocusable(\n                        el,\n                        options.includeProgrammaticallyFocusable\n                    ) && !!this.getProps(el).isDefault,\n            }) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        findAll: boolean,\n        options: Types.FindFocusableProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreUncontrolled,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onUncontrolled,\n            onElement,\n        } = options;\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this._tabster.focusable.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            acceptCondition,\n            includeProgrammaticallyFocusable,\n            ignoreUncontrolled,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement = acceptElementState.foundElement;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (findAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (currentElement) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        let foundElement: HTMLElement | null | undefined;\n        do {\n            foundElement =\n                ((isBackward\n                    ? walker.previousNode()\n                    : walker.nextNode()) as HTMLElement | null) || undefined;\n        } while (prepareForNextElement());\n\n        if (!findAll) {\n            const nextUncontrolled = acceptElementState.nextUncontrolled;\n\n            if (nextUncontrolled) {\n                if (onUncontrolled) {\n                    onUncontrolled(nextUncontrolled);\n                }\n\n                if (foundElement) {\n                    // We have an uncontrolled area and there is a controlled element after it.\n                    // Return undefined for the default Tab action.\n                    return undefined;\n                } else {\n                    // Otherwise, return null to moveOutWithDefaultAction().\n                    return null;\n                }\n            }\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!container.contains(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (\n            (element as HTMLElementWithDummyContainer).__tabsterDummyContainer\n        ) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let lastToIgnore = state.lastToIgnore;\n\n        if (lastToIgnore) {\n            if (lastToIgnore.contains(element)) {\n                return NodeFilter.FILTER_REJECT;\n            } else {\n                lastToIgnore = state.lastToIgnore = undefined;\n            }\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (state.ignoreUncontrolled) {\n            if (shouldIgnoreFocus(element)) {\n                return NodeFilter.FILTER_SKIP;\n            }\n        } else if (\n            ctx.uncontrolled &&\n            !state.nextUncontrolled &&\n            this._tabster.focusable.isFocusable(element, undefined, true, true)\n        ) {\n            if (!ctx.groupper && !ctx.mover) {\n                if (\n                    ctx.modalizer?.userId === this._tabster.modalizer?.activeId\n                ) {\n                    if (this.isVisible(ctx.uncontrolled)) {\n                        state.nextUncontrolled = ctx.uncontrolled;\n                    }\n                    return NodeFilter.FILTER_REJECT;\n                }\n            }\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside\n        if (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\") {\n            if (ctx.modalizer?.userId === this._tabster.modalizer?.activeId) {\n                state.found = true;\n                state.lastToIgnore = state.foundElement = element;\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                fromMoverElement &&\n                container.contains(fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    fromMoverElement.contains(groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !container.contains(groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !container.contains(moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !groupperElement.contains(moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            state.found = true;\n            state.foundElement = element;\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: 9;\n    Enter: 13;\n    Esc: 27;\n    Space: 32;\n    PageUp: 33;\n    PageDown: 34;\n    End: 35;\n    Home: 36;\n    Left: 37;\n    Up: 38;\n    Right: 39;\n    Down: 40;\n} = {\n    Tab: 9,\n    Enter: 13,\n    Esc: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    Left: 37,\n    Up: 38,\n    Right: 39,\n    Down: 40,\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KeyborgFocusInEvent, KEYBORG_FOCUSIN, nativeFocus } from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    getAdjacentElement,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n    triggerEvent,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetails>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              details: Types.FocusedElementDetails;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n    // private _modalAction: ((current: HTMLElement) => boolean) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._initTimer = getWindow().setTimeout(this._init, 0);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const win = this._win();\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        win.document.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        win.document.addEventListener(\"focusout\", this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        win.document.removeEventListener(\n            KEYBORG_FOCUSIN,\n            this._onFocusIn,\n            true\n        );\n        win.document.removeEventListener(\"focusout\", this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus();\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const tabsterFocusable = this._tabster.focusable;\n        const { container, ignoreAccessibility } = props;\n        let uncontrolled: HTMLElement | undefined;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                let next = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    !isFirst,\n                    undefined,\n                    ignoreAccessibility\n                );\n\n                if (next) {\n                    toFocus = next.element;\n                    uncontrolled = next.uncontrolled;\n\n                    while (!toFocus && uncontrolled) {\n                        if (\n                            tabsterFocusable.isFocusable(\n                                uncontrolled,\n                                false,\n                                true,\n                                true\n                            )\n                        ) {\n                            toFocus = uncontrolled;\n                        } else {\n                            toFocus = tabsterFocusable[\n                                isFirst ? \"findFirst\" : \"findLast\"\n                            ]({\n                                container: uncontrolled,\n                                ignoreUncontrolled: true,\n                                ignoreAccessibility,\n                                useActiveModalizer: true,\n                            });\n                        }\n\n                        if (!toFocus) {\n                            next = FocusedElementState.findNextTabbable(\n                                this._tabster,\n                                ctx,\n                                uncontrolled,\n                                undefined,\n                                !isFirst,\n                                undefined,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                toFocus = next.element;\n                                uncontrolled = next.uncontrolled;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (toFocus && !container?.contains(toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const details: Types.FocusedElementDetails = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            details.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                details.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            details,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, details);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        super.setVal(val, details);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        this._setFocusedElement(\n            e.target as HTMLElement,\n            e.details.relatedTarget as HTMLElement | undefined,\n            e.details.isFocusedProgrammatically\n        );\n    };\n\n    private _onFocusOut = (e: FocusEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer,\n            cur?: HTMLElement\n        ) => {\n            next = what.findNextTabbable(\n                cur || currentElement,\n                isBackward,\n                ignoreUncontrolled,\n                ignoreAccessibility\n            );\n\n            const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n\n            if (lastMoverOrGroupper && !next?.element && !next?.uncontrolled) {\n                // Handling nested Movers and Grouppers. If not found in the current one,\n                // try the parent one.\n                const lastMoverOrGroupperElement =\n                    lastMoverOrGroupper.getElement();\n                const parentElement = lastMoverOrGroupperElement?.parentElement;\n                const parentCtx =\n                    parentElement &&\n                    RootAPI.getTabsterContext(tabster, parentElement);\n\n                if (parentCtx) {\n                    const isGroupperFirst = parentCtx.isGroupperFirst;\n                    const parentMoverOrGroupper = isGroupperFirst\n                        ? parentCtx.groupper\n                        : parentCtx.mover;\n\n                    if (parentMoverOrGroupper) {\n                        const newCurrent = isBackward\n                            ? lastMoverOrGroupperElement\n                            : getLastChild(lastMoverOrGroupperElement);\n\n                        callFindNext(parentMoverOrGroupper, newCurrent);\n\n                        if (next) {\n                            next.outOfDOMOrder = true;\n                        }\n                    }\n                }\n            }\n        };\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        if (groupper && mover) {\n            callFindNext(ctx.isGroupperFirst ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            let uncontrolled: HTMLElement | undefined;\n            const onUncontrolled = (el: HTMLElement) => {\n                uncontrolled = el;\n            };\n            const nextElement = isBackward\n                ? tabster.focusable.findPrev({\n                      container: actualContainer,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  })\n                : tabster.focusable.findNext({\n                      container: actualContainer,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  });\n\n            next = {\n                element: uncontrolled ? undefined : nextElement,\n                uncontrolled,\n            };\n        }\n\n        const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n        const lastMoverOrGroupperElement = lastMoverOrGroupper?.getElement();\n\n        if (lastMoverOrGroupperElement) {\n            next = null;\n\n            const adjacentElement = getAdjacentElement(\n                lastMoverOrGroupperElement,\n                isBackward\n            );\n\n            if (adjacentElement) {\n                const adjacentCtx = RootAPI.getTabsterContext(\n                    tabster,\n                    adjacentElement,\n                    {\n                        checkRtl: true,\n                    }\n                );\n\n                if (adjacentCtx) {\n                    let adjacentFrom = getAdjacentElement(\n                        adjacentElement,\n                        !isBackward\n                    );\n\n                    if (adjacentFrom) {\n                        if (!isBackward) {\n                            adjacentFrom =\n                                getLastChild(adjacentFrom) || adjacentFrom;\n                        }\n\n                        next = FocusedElementState.findNextTabbable(\n                            tabster,\n                            adjacentCtx,\n                            actualContainer,\n                            adjacentFrom,\n                            isBackward,\n                            ignoreUncontrolled,\n                            ignoreAccessibility\n                        );\n\n                        if (next && !next.lastMoverOrGroupper) {\n                            next.lastMoverOrGroupper = lastMoverOrGroupper;\n                        }\n                    }\n                }\n            }\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (e: KeyboardEvent): void => {\n        if (e.keyCode !== Keys.Tab || e.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(e)) {\n            return;\n        }\n\n        const isBackward = e.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            isBackward,\n            undefined,\n            true\n        );\n\n        let nextElement: HTMLElement | null | undefined;\n\n        if (next) {\n            let uncontrolled = next.uncontrolled;\n\n            if (uncontrolled) {\n                const isGroupperFirst = ctx.isGroupperFirst;\n                let moveOutside = false;\n\n                if (isGroupperFirst !== undefined) {\n                    const groupper = ctx.groupper?.getElement();\n                    const mover = ctx.mover?.getElement();\n                    let moveFrom: HTMLElement | undefined;\n\n                    if (\n                        isGroupperFirst &&\n                        groupper &&\n                        uncontrolled.contains(groupper)\n                    ) {\n                        moveFrom = groupper;\n                    } else if (\n                        !isGroupperFirst &&\n                        mover &&\n                        uncontrolled.contains(mover)\n                    ) {\n                        moveFrom = mover;\n                    }\n\n                    if (moveFrom) {\n                        uncontrolled = moveFrom;\n                        moveOutside = true;\n                    }\n                }\n\n                if (uncontrolled && ctx.uncontrolled !== uncontrolled) {\n                    // We have met an uncontrolled area, just allow default action.\n                    DummyInputManager.moveWithPhantomDummy(\n                        this._tabster,\n                        uncontrolled,\n                        moveOutside,\n                        isBackward\n                    );\n                }\n\n                return;\n            }\n\n            nextElement = next.element;\n        }\n\n        if (nextElement) {\n            const preventDefault = () => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            };\n\n            // For iframes just allow normal Tab behaviour\n            if (!controlTab) {\n                const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n                let outOfDOMOrder = next?.outOfDOMOrder;\n\n                if (\n                    !outOfDOMOrder &&\n                    currentElement.compareDocumentPosition(nextElement) &\n                        (isBackward\n                            ? document.DOCUMENT_POSITION_FOLLOWING\n                            : document.DOCUMENT_POSITION_PRECEDING)\n                ) {\n                    outOfDOMOrder = true;\n                }\n\n                if (outOfDOMOrder) {\n                    // The next element is out of DOM order (for example because of a trapped groupper),\n                    // do not let the browser to move focus.\n                    preventDefault();\n\n                    nativeFocus(nextElement);\n                } else if (lastMoverOrGroupper) {\n                    lastMoverOrGroupper.dummyManager?.moveOutWithDefaultAction(\n                        isBackward\n                    );\n                } else if (ctx.modalizer) {\n                    const nextElementCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        nextElement\n                    );\n\n                    if (\n                        (!nextElementCtx ||\n                            ctx.root.uid !== nextElementCtx.root.uid ||\n                            !nextElementCtx.modalizer?.isActive()) &&\n                        ctx.modalizer.triggerFocusEvent(\n                            Types.ModalizerBeforeFocusOutEventName,\n                            true\n                        )\n                    ) {\n                        preventDefault();\n                    } else if (\n                        !ctx.modalizer.getElement()?.contains(nextElement)\n                    ) {\n                        preventDefault();\n                        ctx.modalizer.dummyManager?.moveOut(isBackward);\n                    }\n                }\n            } else if (nextElement.tagName !== \"IFRAME\") {\n                preventDefault();\n\n                nativeFocus(nextElement);\n            }\n        } else {\n            ctx.root.moveOutWithDefaultAction(isBackward);\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        if (element) {\n            triggerEvent(element, Types.FocusInEventName, details);\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...details };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                triggerEvent(last, Types.FocusOutEventName, d);\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    getAdjacentElement,\n} from \"./Utils\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Groupper, true);\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            isBackward,\n                            true,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                isBackward,\n                                true,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            groupperElement.contains(currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, lastMoverOrGroupper: this };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !groupperElement.contains(currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                lastMoverOrGroupper: groupperFirstFocusable ? undefined : this,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            next = isBackward\n                ? tabster.focusable.findPrev({\n                      container: groupperElement,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  })\n                : tabster.focusable.findNext({\n                      container: groupperElement,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  });\n\n            if (\n                !uncontrolled &&\n                !next &&\n                this._props.tabbability ===\n                    Types.GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = isBackward\n                    ? tabster.focusable.findLast({\n                          container: groupperElement,\n                          ignoreUncontrolled: true,\n                          ignoreAccessibility,\n                          useActiveModalizer: true,\n                      })\n                    : tabster.focusable.findFirst({\n                          container: groupperElement,\n                          ignoreUncontrolled: true,\n                          ignoreAccessibility,\n                          useActiveModalizer: true,\n                      });\n            }\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            lastMoverOrGroupper: next || uncontrolled ? undefined : this,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (let e = element?.parentElement; e; e = e.parentElement) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        ignoreUncontrolled: true,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = this.getElement()?.parentElement;\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.isGroupperFirst\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                state.container.contains(parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        state.container.contains(parentGroupperElement) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    groupperElement.contains(element)\n                ) {\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.lastToIgnore = groupperElement;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._initTimer = getWindow().setTimeout(this._init, 0);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        win.document.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._current = {};\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(element: HTMLElement, props: Types.GroupperProps) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = el.parentElement\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Enter && event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        noGoUp?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const modalizerInGroupper = ctx?.modalizerInGroupper;\n        let groupper = ctx?.groupper || modalizerInGroupper;\n\n        if (ctx && groupper) {\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            let next: HTMLElement | null | undefined;\n\n            const groupperElement = groupper.getElement();\n\n            if (event.keyCode === Keys.Enter) {\n                if (\n                    groupperElement &&\n                    (element === groupperElement ||\n                        (groupper.getProps().delegated &&\n                            element === groupper.getFirst(false)))\n                ) {\n                    next = tabster.focusable.findNext({\n                        container: groupperElement,\n                        currentElement: element,\n                        useActiveModalizer: true,\n                    });\n                }\n            } else if (event.keyCode === Keys.Esc) {\n                if (groupperElement && groupperElement.contains(element)) {\n                    if (element !== groupperElement || noGoUp) {\n                        next = groupper.getFirst(true);\n                    } else {\n                        const parentElement = groupperElement.parentElement;\n                        const parentCtx = parentElement\n                            ? RootAPI.getTabsterContext(tabster, parentElement)\n                            : undefined;\n\n                        groupper = parentCtx?.groupper;\n                        next = groupper?.getFirst(true);\n                    }\n                }\n\n                if (groupper) {\n                    groupper.makeTabbable(false);\n\n                    if (modalizerInGroupper) {\n                        tabster.modalizer?.setActive(undefined);\n                    }\n                }\n            }\n\n            if (next) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n\n                next.focus();\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    triggerEvent,\n    augmentAttribute,\n} from \"./Utils\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(element: WeakHTMLElement, tabster: Types.TabsterCore) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = (\n                    input as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get();\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        isBackward,\n                        true,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakRef<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        activeElements: WeakRef<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.deref())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(new WeakRef(element));\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this.triggerFocusEvent(\n                isActive\n                    ? Types.ModalizerActiveEventName\n                    : Types.ModalizerInactiveEventName\n            );\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return !!this.getElement()?.contains(element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"]({\n                container,\n                currentElement,\n                onUncontrolled,\n                ignoreUncontrolled,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            });\n\n            if (\n                !uncontrolled &&\n                !next &&\n                this._props.isTrapped &&\n                tabster.modalizer?.activeId\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreUncontrolled: true,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    }\n                );\n            }\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n        };\n    }\n\n    triggerFocusEvent(\n        eventName: Types.ModalizerEventName,\n        allElements?: boolean\n    ): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.deref())\n                : [element];\n\n            for (const el of elements) {\n                if (\n                    el &&\n                    !triggerEvent<Types.ModalizerEventDetails>(el, eventName, {\n                        id: this.userId,\n                        element,\n                        eventName,\n                    })\n                ) {\n                    defaultPrevented = true;\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakRef<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakRef<HTMLElement>[];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                if (this.activeId === userId) {\n                    this.setActive(undefined);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        this._tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.deref();\n\n                if (el && (element.contains(el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        return modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n            ? undefined\n            : NodeFilter.FILTER_SKIP;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const mParts = parts[userId];\n\n            for (const id of Object.keys(mParts)) {\n                const m = mParts[id];\n                const el = m.getElement();\n                const props = m.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakRef<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(new WeakRef(element));\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n\n                if (allVisibleElements) {\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (el.contains(c)) {\n                            containsModalizer = true;\n                            break;\n                        }\n                    }\n\n                    if (containsModalizer) {\n                        walk(el as HTMLElement);\n                    } else if (!skip) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.deref())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param e - Element that is focused\n     * @param details - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = e.parentElement\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(this._tabster, e, _ariaHidden);\n            }\n        }\n\n        const modalizer = ctx.modalizer;\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        (\n            modalizer ||\n            getTabsterOnElement(this._tabster, focusedElement)?.modalizer\n        )?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            details.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = this._tabster.focusable.findFirst({\n                container,\n                ignoreUncontrolled: true,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = this._tabster.focusable.findLast({\n                        container,\n                        ignoreUncontrolled: true,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                this._tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    HTMLElementWithDummyContainer,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n            if (memorized) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                triggerEvent(el, Types.MoverEventName, state);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container &&\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === container;\n\n        if (!container) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        const focusable = tabster.focusable;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !container.contains(currentElement))\n        ) {\n            next = isBackward\n                ? focusable.findPrev({\n                      currentElement,\n                      container,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  })\n                : focusable.findNext({\n                      currentElement,\n                      container,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  });\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            lastMoverOrGroupper: next || uncontrolled ? undefined : this,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.isExcludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const { memorizeCurrent, visibilityAware, hasDefault } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!moverElement.contains(state.from) ||\n                (\n                    state.from as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get() === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Types.Visibilities.Visible ||\n                                (visibility ===\n                                    Types.Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Types.Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.lastToIgnore = moverElement;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility | undefined;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Types.Visibilities.Visible\n                        : Types.Visibilities.PartiallyVisible;\n\n                if (newVisibility === Types.Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    triggerEvent(el, Types.MoverEventName, state);\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = new MutationObserver((mutations: MutationRecord[]) => {\n            for (const mutation of mutations) {\n                const target = mutation.target;\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                if (mutation.type === \"attributes\") {\n                    if (mutation.attributeName === \"tabindex\") {\n                        updateQueue.push({\n                            element: target as HTMLElement,\n                            type: _moverUpdateAttr,\n                        });\n                    }\n                } else {\n                    for (let i = 0; i < removed.length; i++) {\n                        updateQueue.push({\n                            element: removed[i] as HTMLElement as HTMLElement,\n                            type: _moverUpdateRemove,\n                        });\n                    }\n\n                    for (let i = 0; i < added.length; i++) {\n                        updateQueue.push({\n                            element: added[i] as HTMLElement,\n                            type: _moverUpdateAdd,\n                        });\n                    }\n                }\n            }\n\n            requestUpdate();\n        });\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = el.parentElement\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility =\n                this._visible[id] || Types.Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._initTimer = getWindow().setTimeout(this._init, 0);\n        this._movers = {};\n\n        tabster.focusedElement.subscribe(this._onFocus);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            delete this._initTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(element: HTMLElement, props: Types.MoverProps): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        for (\n            let el: HTMLElement | null | undefined = e;\n            el;\n            el = el.parentElement\n        ) {\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(e);\n                break;\n            }\n        }\n    };\n\n    private _onKeyDown = async (e: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        let keyCode = e.keyCode;\n        // Mover does not use ctrl key currently\n        if (e.ctrlKey) {\n            return;\n        }\n\n        switch (keyCode) {\n            case Keys.Down:\n            case Keys.Right:\n            case Keys.Up:\n            case Keys.Left:\n            case Keys.PageDown:\n            case Keys.PageUp:\n            case Keys.Home:\n            case Keys.End:\n                break;\n            default:\n                return;\n        }\n\n        const tabster = this._tabster;\n        const focused = tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, keyCode))) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(tabster, focused, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.isExcludedFromMover ||\n            ctx.ignoreKeydown(e)\n        ) {\n            return;\n        }\n\n        if (ctx.isGroupperFirst && ctx.groupper?.isActive(true)) {\n            return;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (!container) {\n            return;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || Types.MoverDirections.Both;\n        const isBoth = direction === Types.MoverDirections.Both;\n        const isVertical =\n            isBoth || direction === Types.MoverDirections.Vertical;\n        const isHorizontal =\n            isBoth || direction === Types.MoverDirections.Horizontal;\n        const isGrid = direction === Types.MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = focused.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.isRtl) {\n            if (keyCode === Keys.Right) {\n                keyCode = Keys.Left;\n            } else if (keyCode === Keys.Left) {\n                keyCode = Keys.Right;\n            }\n        }\n\n        if (\n            (keyCode === Keys.Down && isVertical) ||\n            (keyCode === Keys.Right && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (keyCode === Keys.Up && isVertical) ||\n            (keyCode === Keys.Left && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: focused,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== focused &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: focused,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== focused &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.PageUp) {\n            focusable.findElement({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            if (next) {\n                scrollIntoView(this._win, next, false);\n            }\n        } else if (keyCode === Keys.PageDown) {\n            focusable.findElement({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            if (next) {\n                scrollIntoView(this._win, next, true);\n            }\n        } else if (isGrid) {\n            const isBackward = keyCode === Keys.Up;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: focused,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (next) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            nativeFocus(next);\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        keyCode: number\n    ): Promise<boolean> {\n        if (element.getAttribute(\"aria-expanded\") === \"true\") {\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection =\n                            element.ownerDocument.defaultView?.getSelection();\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                keyCode === Keys.Left || keyCode === Keys.Up;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = win.getSelection() || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = win.getSelection() || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                element.contains(anchorNode) &&\n                                element.contains(focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (nodeText && !node.firstChild) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = node.firstChild;\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (keyCode === Keys.Left ||\n                    keyCode === Keys.Up ||\n                    keyCode === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (keyCode === Keys.Right ||\n                    keyCode === Keys.Down ||\n                    keyCode === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nexport function observeMutations(\n    doc: HTMLDocument,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === Types.TabsterAttributeName) {\n                    updateTabsterByAttribute(tabster, target as HTMLElement);\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    updateTabsterElements(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                }\n            }\n        }\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(Types.TabsterAttributeName)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = new MutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [Types.TabsterAttributeName],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _initTimer: number | undefined;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === Types.ObservedElementAccesibilities.Accessible) {\n            prefix = \"a\";\n        } else if (\n            accessibility === Types.ObservedElementAccesibilities.Focusable\n        ) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(element, true)\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccesibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    Types.ObservedElementAccesibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        Types.ObservedElementAccesibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        Types.ObservedElementAccesibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _initTimer: number | undefined;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._initTimer = this._win().setTimeout(this._init, 0);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._initTimer = undefined;\n\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._initTimer) {\n            win.clearTimeout(this._initTimer);\n            this._initTimer = undefined;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    constructor() {\n        /**/\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n} from \"./Utils\";\n\nexport { Types };\nexport * from \"./AttributeHelpers\";\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI();\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        this.internal.resumeObserver(false);\n\n        startFakeWeakRefsCleanup(getWindow);\n    }\n\n    createTabster(noRefCount?: boolean): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster();\n    }\n\n    tabster = new TabsterCore(win, props);\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getModalizer(tabster: Types.Tabster): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(tabsterCore);\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(Types.TabsterAttributeName)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n"],"names":["TabsterAttributeName","TabsterDummyInputAttributeName","DeloserEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","ModalizerBeforeFocusOutEventName","MoverEventName","FocusInEventName","FocusOutEventName","ObservedElementAccesibilities","Any","Accessible","Focusable","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","Visibilities","Invisible","PartiallyVisible","Visible","MoverDirections","Both","Vertical","Horizontal","Grid","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","getTabsterOnElement","tabster","element","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","Types","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","createEventTarget","getWindow","global","EventTarget","document","createElement","_isBrokenIE11","_DOMRect","DOMRect","constructor","x","y","width","height","left","top","right","bottom","_uidCounter","createTreeWalker","NodeFilter","SHOW_ELEMENT","getInstanceContext","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","ownerDocument","WeakHTMLElement","data","context","ref","push","_ref","_data","get","getData","cleanupFakeWeakRefs","filter","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","doc","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","parentElement","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","join","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","parent","wel","contains","body","matchesSelector","selector","matches","msMatchesSelector","webkitMatchesSelector","call","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","id","getElement","getProps","DummyInput","isOutside","input","onFocusIn","relatedTarget","DummyInputManager","getLastPhantomFrom","_isBackward","useDefaultAction","onFocusOut","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","_focusIn","_focusOut","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","moveOut","backwards","moveOutWithDefaultAction","_setHandlers","_onFocusIn","_onFocusOut","getHandler","setTabbable","tabbable","ret","_lastPhantomFrom","moveWithPhantomDummy","moveOutside","isBackward","dummy","insertBefore","nextElementSibling","beforeBefore","previousElementSibling","nativeFocus","setDummyInputDebugValue","wrappers","what","map","w","manager","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","firstInput","lastInput","toFocus","isFocusable","_wrappers","wrapper","_getCurrent","_getWindow","_scrollTimer","_reallyAddTransformOffsets","_callForDefaultAction","instance","__tabsterDummy","tagName","_isOutside","_addDummyInputs","process","env","_observeMutations","force","_unobserve","_transformElements","_addTransformOffsets","_addTimer","sort","a","b","dif","dil","elementParent","nextSibling","lastElementChild","appendChild","firstElementChild","observer","MutationObserver","actualElement","observe","childList","disconnect","from","transformElements","newTransformElements","transformElementsMap","newTransformElementsMap","scrollLeft","set","transform","getComputedStyle","getLastChild","lastChild","getAdjacentElement","prev","cur","adjacent","triggerEvent","name","details","event","createEvent","initEvent","dispatchEvent","defaultPrevented","augmentAttribute","value","aug","origVal","removeAttribute","origValue","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","remove","removeProperty","RootDummyManager","setFocused","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","_onDummyInputFocus","onDispose","hasFocused","fromAdjacent","_setFocusedTimer","_isFocused","eventTarget","_setTabbableTimer","RootAPI","getTabsterContext","rootDummyInputs","_dummyManager","_onDispose","controlTab","addDummyInputs","subscribe","_add","_remove","dummyManager","autoRoot","_initTimer","_autoRoot","_autoRootCreate","_win","_autoRootUnwait","_autoRootWaiting","_roots","_init","forEach","rootId","rootById","newRoot","_onRootDispose","_forceDummy","roots","getRootByUId","__tabsterInstance","options","checkRtl","isExcludedFromMover","isGroupperFirst","modalizerInGroupper","isRtl","curElement","ignoreKeydown","dir","toLowerCase","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","getLength","_history","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","resetQueue","DeloserHistory","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","replace","className","split","cls","trim","index","buildSelector","isBody","Deloser","_isActive","_snapshotIndex","focusFirst","focusDefault","preserveExisting","we","setActive","active","getActions","clearHistory","setSnapshot","pop","isVisible","restoreFocusOrder","rootElement","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","slice","noSelectorCheck","els","querySelectorAll","isNavigatingWithKeyboard","findFirst","ignoreUncontrolled","useActiveModalizer","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","_onDeloserDispose","getFocusedElement","pause","_isPaused","resume","restore","curDeloser","_inDeloser","_isRestoringFocus","restoreFocus","lastFocused","getLastFocusedElement","offsetParent","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callback","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","owner","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","type","isResponse","timestamp","sentto","_isSelfResponding","endData","_sentCount","end","_send","_inProgress","_isDone","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","getElementById","getElementData","getDeloserUID","dataOut","accessibility","isWaitElementResolved","isForwardResolved","isResolved","waitElement","result","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_dead","source","postMessage","_onMessage","setup","isSetUp","setSendUp","_onPageHide","_ping","_isDefaultSendUp","_onBrowserMessage","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","elementId","focusByObservedName","elementData","requestFocus","requestId","_lastRequestFocusId","CrossOriginAPI","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","deloserElement","_focusableSelector","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","defaultView","computedStyle","visibility","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","currentElement","modalizerId","onUncontrolled","onElement","elements","acceptElementState","modalizerUserId","cachedGrouppers","walker","node","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","fromCtx","currentNode","FILTER_ACCEPT","previousNode","nextNode","nextUncontrolled","FILTER_SKIP","FILTER_REJECT","lastToIgnore","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","Keys","Tab","Enter","Esc","Space","PageUp","PageDown","End","Home","Left","Up","Right","Down","FocusedElementState","KEYBORG_FOCUSIN","_onKeyDown","_onChanged","_setFocusedElement","keyCode","ctrlKey","contentEditable","shiftKey","next","findNextTabbable","nextElement","moveFrom","preventDefault","stopImmediatePropagation","lastMoverOrGroupper","outOfDOMOrder","DOCUMENT_POSITION_PRECEDING","nextElementCtx","triggerFocusEvent","_lastVal","lastCtx","_lastResetElement","_nextVal","forgetMemorized","tabsterFocusable","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","lastResetElement","nextVal","_validateFocusedElement","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","lastMoverOrGroupperElement","parentCtx","parentMoverOrGroupper","newCurrent","adjacentElement","adjacentCtx","adjacentFrom","GroupperDummyManager","makeTabbable","_first","currentIsDummy","_shouldTabInside","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_onMouseDown","_grouppers","_updateCurrent","handleKeyPress","_current","groupperId","newGroupper","_onGroupperDispose","forgetCurrentGrouppers","includeTarget","checkTarget","newIds","isTarget","delegated","noGoUp","KeyboardNavigationState","_keyborg","createKeyborg","_onChange","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_activeElements","_wasFocused","makeActive","noIncrement","modalizerElement","isTrapped","eventName","allElements","ModalizerAPI","_parts","_modalizers","focusedSince","m","f","augmentedMap","_augMap","has","delete","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_hiddenUpdateTimer","_onModalizerDispose","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","mParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","outsideElement","_inputSelector","MoverDummyManager","getMemorized","memorized","_getMemorized","_onFocusDummyInput","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","_visible","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","_onIntersection","threshold","_observeState","memorizeCurrent","_allElements","_updateQueue","_setCurrentTimer","_updateTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","updateQueue","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_movers","_ignoredInputTimer","_ignoredInputResolve","_isIgnoredInput","moverProps","direction","isBoth","isVertical","isHorizontal","isGrid","isCyclic","cyclic","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","targetElement","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","moverId","newMover","_onMoverDispose","selectionStart","selectionEnd","textLength","asyncRet","selection","getSelection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","firstChild","len","stop","observeMutations","syncState","onMutation","updateTabsterElements","processNode","_conditionCheckTimeout","ObservedElementAPI","_currentRequest","delta","_currentRequestTimestamp","settleTime","cancel","info","_observedById","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_observedByName","_waitConditional","_waiting","_rejectWaiting","shouldResolve","conditionTimer","o","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_isVisible","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","add","_allOutlineElements","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","parentNode","child","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","Tabster","core","TabsterCore","Set","__VERSION__","_storage","internal","stopObserver","resumeObserver","createTabster","noRefCount","disposeTabster","allInstances","clear","size","_forgetMemorizedElements","_forgetMemorizedTimer","addremove","storage","forceCleanup","shift","tabsterCore","getCurrentTabster","getTabster","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","makeNoOp","noop","isNoOp"],"mappings":"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"}
{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SACEC,uBAAuB,EACvBC,wBAAwB,EACxBC,kBAAkB,EAClBC,sBAAsB,EACtBC,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,EAClBC,sBAAsB,EACtBC,kBAAkB,EAClBC,sBAAsB,QACjB,iBAAiB;AACxB,SAASC,iBAAiB,QAAQ,gBAAgB;AAGlD,MAAMC,OAAO,GAAG,CAACC,MAAoC,EAAEC,WAAoB,EAAEC,IAAgC,KAAI;EAC/G,QAAQF,MAAM;IACZ,KAAK,WAAW;MACd,OAAOC,WAAW,GAAGZ,wBAAwB,CAACa,IAAI,CAAC,GAAGd,uBAAuB,CAACc,IAAI,CAAC;IACrF,KAAK,MAAM;MACT,OAAOD,WAAW,GAAGL,kBAAkB,CAACM,IAAI,CAAC,GAAGZ,kBAAkB,CAACY,IAAI,CAAC;IAC1E,KAAK,SAAS;MACZ,OAAOX,sBAAsB,CAACW,IAAI,CAAC;IACrC,KAAK,MAAM;MACT,OAAOD,WAAW,GAAGJ,sBAAsB,CAACK,IAAI,CAAC,GAAGV,kBAAkB,CAACU,IAAI,CAAC;IAC9E,KAAK,gBAAgB;MACnB,OAAOD,WAAW,GAAGP,kBAAkB,CAACQ,IAAI,CAAC,GAAGT,iBAAiB,CAACS,IAAI,CAAC;IACzE,KAAK,SAAS;MACZ,OAAOP,sBAAsB,CAACO,IAAI,CAAC;IACrC,KAAK,eAAe;MAClB,OAAON,kBAAkB,CAACM,IAAI,CAAC;IACjC,KAAK,SAAS;MACZ,OAAOL,sBAAsB,CAACK,IAAI,CAAC;EAAC;AAE1C,CAAC;AAED,MAAMC,eAAe,GAAG;EACtBC,IAAI,EAAE,MAAM;EACZ,eAAe,EAAE,eAAe;EAChCC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,WAAW;EACtBC,OAAO,EAAE,SAAS;EAClB,gBAAgB,EAAE,gBAAgB;EAClCC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;CACV;AAED;;;AAGA,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,KAAyB,EACzBC,GAA2B,KACL;EACtB,MAAM;IAAEV,IAAI,GAAG,QAAQ;IAAEF,MAAM,GAAG,WAAW;IAAEC,WAAW,GAAG;EAAK,CAAE,GAAGU,KAAK;EAE5E,MAAME,UAAU,GAAGV,eAAe,CAACH,MAAM,CAAC;EAC1C,MAAMc,OAAO,GAAGH,KAAK,CAACV,WAAW,IAAIU,KAAK,CAACX,MAAM,KAAK,eAAe,GAAG,IAAIG,eAAe,CAAC,eAAe,CAAC,EAAE,GAAG,EAAE;EAEnH,MAAMY,WAAW,GAAGhB,OAAO,CAACC,MAAM,EAAEC,WAAW,EAAEC,IAAI,CAAC;EAEtD,MAAMc,KAAK,GAAuB;IAChC,GAAGlB,iBAAiB,CAClB;MACE,YAAY,EAAEe,UAAU,GAAGC,OAAO;MAClCG,IAAI,EAAE,KAAK;MACX,GAAGN,KAAK;MACRT,IAAI;MACJgB,IAAI,EAAE/B,gBAAgB,CAACwB,KAAK,CAACO,IAAI,EAAE;QACjCC,YAAY,EAAE;UACZC,QAAQ,EAAEL,WAAW,gBAAG7B,oBAAC6B,WAAW,OAAG,GAAG;SAC3C;QACDM,QAAQ,EAAE;OACX;KACF,EACDT,GAAG,CACJ;IACDZ,MAAM;IACNC;GACD;EAED,OAAOe,KAAK;AACd,CAAC","names":["React","resolveShorthand","presenceAvailableFilled","presenceAvailableRegular","presenceAwayFilled","presenceBlockedRegular","presenceBusyFilled","presenceDndFilled","presenceDndRegular","presenceOfflineRegular","presenceOofRegular","presenceUnknownRegular","useBadge_unstable","iconMap","status","outOfOffice","size","DEFAULT_STRINGS","busy","away","available","offline","unknown","blocked","usePresenceBadge_unstable","props","ref","statusText","oofText","IconElement","state","role","icon","defaultProps","children","required"],"sourceRoot":"../src/","sources":["packages/react-components/react-badge/src/components/PresenceBadge/usePresenceBadge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport {\n  presenceAvailableFilled,\n  presenceAvailableRegular,\n  presenceAwayFilled,\n  presenceBlockedRegular,\n  presenceBusyFilled,\n  presenceDndFilled,\n  presenceDndRegular,\n  presenceOfflineRegular,\n  presenceOofRegular,\n  presenceUnknownRegular,\n} from './presenceIcons';\nimport { useBadge_unstable } from '../Badge/index';\nimport type { PresenceBadgeProps, PresenceBadgeState } from './PresenceBadge.types';\n\nconst iconMap = (status: PresenceBadgeState['status'], outOfOffice: boolean, size: PresenceBadgeState['size']) => {\n  switch (status) {\n    case 'available':\n      return outOfOffice ? presenceAvailableRegular[size] : presenceAvailableFilled[size];\n    case 'away':\n      return outOfOffice ? presenceOofRegular[size] : presenceAwayFilled[size];\n    case 'blocked':\n      return presenceBlockedRegular[size];\n    case 'busy':\n      return outOfOffice ? presenceUnknownRegular[size] : presenceBusyFilled[size];\n    case 'do-not-disturb':\n      return outOfOffice ? presenceDndRegular[size] : presenceDndFilled[size];\n    case 'offline':\n      return presenceOfflineRegular[size];\n    case 'out-of-office':\n      return presenceOofRegular[size];\n    case 'unknown':\n      return presenceUnknownRegular[size];\n  }\n};\n\nconst DEFAULT_STRINGS = {\n  busy: 'busy',\n  'out-of-office': 'out of office',\n  away: 'away',\n  available: 'available',\n  offline: 'offline',\n  'do-not-disturb': 'do not disturb',\n  unknown: 'unknown',\n  blocked: 'blocked',\n};\n\n/**\n * Returns the props and state required to render the component\n */\nexport const usePresenceBadge_unstable = (\n  props: PresenceBadgeProps,\n  ref: React.Ref<HTMLElement>,\n): PresenceBadgeState => {\n  const { size = 'medium', status = 'available', outOfOffice = false } = props;\n\n  const statusText = DEFAULT_STRINGS[status];\n  const oofText = props.outOfOffice && props.status !== 'out-of-office' ? ` ${DEFAULT_STRINGS['out-of-office']}` : '';\n\n  const IconElement = iconMap(status, outOfOffice, size);\n\n  const state: PresenceBadgeState = {\n    ...useBadge_unstable(\n      {\n        'aria-label': statusText + oofText,\n        role: 'img',\n        ...props,\n        size,\n        icon: resolveShorthand(props.icon, {\n          defaultProps: {\n            children: IconElement ? <IconElement /> : null,\n          },\n          required: true,\n        }),\n      },\n      ref,\n    ),\n    status,\n    outOfOffice,\n  };\n\n  return state;\n};\n"]}
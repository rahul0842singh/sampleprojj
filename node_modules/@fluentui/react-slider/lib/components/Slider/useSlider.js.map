{"version":3,"mappings":"AACA,SAASA,yBAAyB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,aAAa,QAAQ,2BAA2B;AAC7G,SAASC,uBAAuB,QAAQ,kBAAkB;AAE1D,SAASC,cAAc,QAAQ,yBAAyB;AAExD,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAkB,EAAEC,GAAgC,KAAiB;EACtG,MAAMC,WAAW,GAAGT,yBAAyB,CAAC;IAC5CO,KAAK;IACLG,kBAAkB,EAAE,OAAO;IAC3BC,iBAAiB,EAAE,CAAC,UAAU,EAAE,MAAM;GACvC,CAAC;EAEF,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,IAAI,GAAG,QAAQ;IACf;IACAC,IAAI;IACJC,KAAK;IACLC,IAAI;IACJC;EAAK,CACN,GAAGX,KAAK;EAET,MAAMY,KAAK,GAAgB;IACzBP,QAAQ;IACRE,IAAI;IACJD,QAAQ;IACRO,UAAU,EAAE;MACVJ,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,KAAK;MACXF,IAAI,EAAE,KAAK;MACXG,KAAK,EAAE;KACR;IACDH,IAAI,EAAEd,gBAAgB,CAACc,IAAI,EAAE;MAC3BM,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAEb,WAAW,CAACM;KAC3B,CAAC;IACFC,KAAK,EAAEf,gBAAgB,CAACe,KAAK,EAAE;MAC7BK,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACZC,EAAE,EAAErB,KAAK,CAAC,SAAS,EAAEK,KAAK,CAACgB,EAAE,CAAC;QAC9Bf,GAAG;QACH,GAAGC,WAAW,CAACe,OAAO;QACtBC,IAAI,EAAE,OAAO;QACbC,MAAM,EAAEb,QAAQ,GAAG,UAAU,GAAGc;;KAEnC,CAAC;IACFV,IAAI,EAAEhB,gBAAgB,CAACgB,IAAI,EAAE;MAAEI,QAAQ,EAAE;IAAI,CAAE,CAAC;IAChDH,KAAK,EAAEjB,gBAAgB,CAACiB,KAAK,EAAE;MAAEG,QAAQ,EAAE;IAAI,CAAE;GAClD;EAEDF,KAAK,CAACJ,IAAI,CAACP,GAAG,GAAGL,aAAa,CAACgB,KAAK,CAACJ,IAAI,CAACP,GAAG,EAAEH,cAAc,EAAkB,CAAC;EAEhFD,uBAAuB,CAACe,KAAK,EAAEZ,KAAK,CAAC;EAErC,OAAOY,KAAK;AACd,CAAC","names":["getPartitionedNativeProps","resolveShorthand","useId","useMergedRefs","useSliderState_unstable","useFocusWithin","useSlider_unstable","props","ref","nativeProps","primarySlotTagName","excludedPropNames","disabled","vertical","size","root","input","rail","thumb","state","components","required","defaultProps","id","primary","type","orient","undefined"],"sourceRoot":"../src/","sources":["packages/react-components/react-slider/src/components/Slider/useSlider.ts"],"sourcesContent":["import * as React from 'react';\nimport { getPartitionedNativeProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { SliderProps, SliderState } from './Slider.types';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n\nexport const useSlider_unstable = (props: SliderProps, ref: React.Ref<HTMLInputElement>): SliderState => {\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['onChange', 'size'],\n  });\n\n  const {\n    disabled,\n    vertical,\n    size = 'medium',\n    // Slots\n    root,\n    input,\n    rail,\n    thumb,\n  } = props;\n\n  const state: SliderState = {\n    disabled,\n    size,\n    vertical,\n    components: {\n      input: 'input',\n      rail: 'div',\n      root: 'div',\n      thumb: 'div',\n    },\n    root: resolveShorthand(root, {\n      required: true,\n      defaultProps: nativeProps.root,\n    }),\n    input: resolveShorthand(input, {\n      required: true,\n      defaultProps: {\n        id: useId('slider-', props.id),\n        ref,\n        ...nativeProps.primary,\n        type: 'range',\n        orient: vertical ? 'vertical' : undefined,\n      },\n    }),\n    rail: resolveShorthand(rail, { required: true }),\n    thumb: resolveShorthand(thumb, { required: true }),\n  };\n\n  state.root.ref = useMergedRefs(state.root.ref, useFocusWithin<HTMLDivElement>());\n\n  useSliderState_unstable(state, props);\n\n  return state;\n};\n"]}
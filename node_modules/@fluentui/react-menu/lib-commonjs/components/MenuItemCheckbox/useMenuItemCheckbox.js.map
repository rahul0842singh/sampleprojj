{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AACO,MAAMA,4BAA4B,GAAG,CAC1CC,KAA4B,EAC5BC,GAAwC,KACf;EACzB,MAAMC,cAAc,GAAGC,6CAA2B,CAACC,OAAO,IAAIA,OAAO,CAACF,cAAc,CAAC;EACrF,MAAM;IAAEG,IAAI;IAAEC;EAAK,CAAE,GAAGN,KAAK;EAE7B,MAAMO,OAAO,GAAGJ,6CAA2B,CAACC,OAAO,IAAG;;IACpD,MAAMI,YAAY,GAAG,cAAO,CAACC,aAAa,0CAAGJ,IAAI,CAAC,KAAI,EAAE;IACxD,OAAOG,YAAY,CAACE,OAAO,CAACJ,KAAK,CAAC,KAAK,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEF,MAAMK,KAAK,GAA0B;IACnC,GAAGC,kCAAoB,CACrB;MACEC,IAAI,EAAE,kBAAkB;MACxBC,cAAc,EAAE,IAAI;MACpB,GAAGd,KAAK;MACR,cAAc,EAAEO,OAAO;MACvBQ,SAAS,EAAEC,kCAAgB,CAAChB,KAAK,CAACe,SAAS,EAAE;QAC3CE,YAAY,EAAE;UAAEC,QAAQ,EAAEC,oBAACC,+BAAiB;QAAG,CAAE;QACjDC,QAAQ,EAAE;OACX,CAAC;MACFC,OAAO,EAAGC,CAAyD,IAAI;;QACrErB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAGqB,CAAC,EAAElB,IAAI,EAAEC,KAAK,EAAEC,OAAO,CAAC;QACzC,WAAK,CAACe,OAAO,+CAAbtB,KAAK,EAAWuB,CAAC,CAAC;MACpB;KACD,EACDtB,GAAG,CACJ;IACDI,IAAI;IACJC,KAAK;IACLC;GACD;EAED,OAAOI,KAAK;AACd,CAAC;AApCYa,oCAA4B","names":["useMenuItemCheckbox_unstable","props","ref","toggleCheckbox","menuListContext_1","context","name","value","checked","checkedItems","checkedValues","indexOf","state","useMenuItem_1","role","persistOnClick","checkmark","react_utilities_1","defaultProps","children","React","react_icons_1","required","onClick","e","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-menu/src/components/MenuItemCheckbox/useMenuItemCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { Checkmark16Filled } from '@fluentui/react-icons';\nimport { useMenuListContext_unstable } from '../../contexts/menuListContext';\nimport { useMenuItem_unstable } from '../MenuItem/useMenuItem';\nimport type { MenuItemCheckboxProps, MenuItemCheckboxState } from './MenuItemCheckbox.types';\nimport type { ARIAButtonElement, ARIAButtonElementIntersection } from '@fluentui/react-aria';\n\n/** Returns the props and state required to render the component */\nexport const useMenuItemCheckbox_unstable = (\n  props: MenuItemCheckboxProps,\n  ref: React.Ref<ARIAButtonElement<'div'>>,\n): MenuItemCheckboxState => {\n  const toggleCheckbox = useMenuListContext_unstable(context => context.toggleCheckbox);\n  const { name, value } = props;\n\n  const checked = useMenuListContext_unstable(context => {\n    const checkedItems = context.checkedValues?.[name] || [];\n    return checkedItems.indexOf(value) !== -1;\n  });\n\n  const state: MenuItemCheckboxState = {\n    ...useMenuItem_unstable(\n      {\n        role: 'menuitemcheckbox',\n        persistOnClick: true,\n        ...props,\n        'aria-checked': checked,\n        checkmark: resolveShorthand(props.checkmark, {\n          defaultProps: { children: <Checkmark16Filled /> },\n          required: true,\n        }),\n        onClick: (e: React.MouseEvent<ARIAButtonElementIntersection<'div'>>) => {\n          toggleCheckbox?.(e, name, value, checked);\n          props.onClick?.(e);\n        },\n      },\n      ref,\n    ),\n    name,\n    value,\n    checked,\n  };\n\n  return state;\n};\n"]}
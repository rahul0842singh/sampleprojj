{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA;AAGA;;;AAGO,MAAMA,wBAAwB,GAAG,CAACC,KAAqB,EAAEC,aAAqC,KAAI;EACvG,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAE,GAAGC,0BAAQ,CAAiBJ,KAAK,CAAC;EAE5D,OACEK,oBAACH,KAAK,CAACI,IAAI;IAAA,GAAKH,SAAS,CAACG;EAAI,GAC5BD,oBAACE,mCAAgB,CAACC,QAAQ;IAACC,KAAK,EAAER,aAAa,CAACS;EAAS,GAAGP,SAAS,CAACG,IAAI,CAACK,QAAQ,CAA6B,CACrG;AAEjB,CAAC;AARYC,gCAAwB","names":["renderAccordion_unstable","state","contextValues","slots","slotProps","react_utilities_1","React","root","AccordionContext_1","Provider","value","accordion","children","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/Accordion/renderAccordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\n\nimport { AccordionContext } from './AccordionContext';\nimport type { AccordionState, AccordionSlots, AccordionContextValues } from './Accordion.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordion_unstable = (state: AccordionState, contextValues: AccordionContextValues) => {\n  const { slots, slotProps } = getSlots<AccordionSlots>(state);\n\n  return (\n    <slots.root {...slotProps.root}>\n      <AccordionContext.Provider value={contextValues.accordion}>{slotProps.root.children}</AccordionContext.Provider>\n    </slots.root>\n  );\n};\n"]}
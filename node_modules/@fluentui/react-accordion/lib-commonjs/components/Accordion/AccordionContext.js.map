{"version":3,"mappings":";;;;;;AAAA;AAIaA,wBAAgB,gBAAmCC,sCAAa,CAC3EC,SAAS,CACwB;AAEnC,MAAMC,4BAA4B,GAA0B;EAC1DC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,KAAK;EAClBC,aAAa;IACX;EAAA;CAEH;AAEYN,yBAAiB,GAAGA,wBAAgB,CAACO,QAAQ;AACnD,MAAMC,4BAA4B,GAAOC,QAAmD,IACjGR,2CAAkB,CAACD,wBAAgB,EAAE,CAACU,GAAG,GAAGP,4BAA4B,KAAKM,QAAQ,CAACC,GAAG,CAAC,CAAC;AADhFV,oCAA4B","names":["exports","react_context_selector_1","undefined","accordionContextDefaultValue","openItems","collapsible","requestToggle","Provider","useAccordionContext_unstable","selector","ctx"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/Accordion/AccordionContext.ts"],"sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"]}
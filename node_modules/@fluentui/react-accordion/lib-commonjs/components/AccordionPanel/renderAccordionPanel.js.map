{"version":3,"mappings":";;;;;;AAAA;AACA;AAGA;;;AAGO,MAAMA,6BAA6B,GAAIC,KAA0B,IAAI;EAC1E,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAE,GAAGC,0BAAQ,CAAsBH,KAAK,CAAC;EACjE,OAAOA,KAAK,CAACI,IAAI,GAAGC,oBAACJ,KAAK,CAACK,IAAI;IAAA,GAAKJ,SAAS,CAACI;EAAI,GAAGJ,SAAS,CAACI,IAAI,CAACC,QAAQ,CAAc,GAAG,IAAI;AACnG,CAAC;AAHYC,qCAA6B","names":["renderAccordionPanel_unstable","state","slots","slotProps","react_utilities_1","open","React","root","children","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionPanel/renderAccordionPanel.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { AccordionPanelState, AccordionPanelSlots } from './AccordionPanel.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordionPanel_unstable = (state: AccordionPanelState) => {\n  const { slots, slotProps } = getSlots<AccordionPanelSlots>(state);\n  return state.open ? <slots.root {...slotProps.root}>{slotProps.root.children}</slots.root> : null;\n};\n"]}
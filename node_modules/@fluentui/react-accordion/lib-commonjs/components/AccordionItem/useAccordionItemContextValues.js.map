{"version":3,"mappings":";;;;;;AAAA;AAGA,SAAgBA,sCAAsC,CAACC,KAAyB;EAC9E,MAAM;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAI,CAAE,GAAGH,KAAK;EAC/C,MAAMI,aAAa,GAAGC,KAAK,CAACC,OAAO,CAA4B,OAAO;IAAEL,QAAQ;IAAEC,aAAa;IAAEC;EAAI,CAAE,CAAC,EAAE,CACxGF,QAAQ,EACRC,aAAa,EACbC,IAAI,CACL,CAAC;EAEF,OAAO;IAAEC;EAAa,CAAE;AAC1B;AATAG","names":["useAccordionItemContextValues_unstable","state","disabled","onHeaderClick","open","accordionItem","React","useMemo","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionItem/useAccordionItemContextValues.ts"],"sourcesContent":["import * as React from 'react';\nimport type { AccordionItemContextValue, AccordionItemContextValues, AccordionItemState } from './AccordionItem.types';\n\nexport function useAccordionItemContextValues_unstable(state: AccordionItemState): AccordionItemContextValues {\n  const { disabled, onHeaderClick, open } = state;\n  const accordionItem = React.useMemo<AccordionItemContextValue>(() => ({ disabled, onHeaderClick, open }), [\n    disabled,\n    onHeaderClick,\n    open,\n  ]);\n\n  return { accordionItem };\n}\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAIA;;;;;AAKO,MAAMA,yBAAyB,GAAG,CACvCC,KAAyB,EACzBC,GAA2B,KACL;EACtB,MAAM;IAAEC,KAAK;IAAEC,QAAQ,GAAG;EAAK,CAAE,GAAGH,KAAK;EAEzC,MAAMI,aAAa,GAAGC,+CAA4B,CAACC,GAAG,IAAIA,GAAG,CAACF,aAAa,CAAC;EAC5E,MAAMG,IAAI,GAAGF,+CAA4B,CAACC,GAAG,IAAIA,GAAG,CAACE,SAAS,CAACC,QAAQ,CAACP,KAAK,CAAC,CAAC;EAC/E,MAAMQ,sBAAsB,GAAGC,KAAK,CAACC,WAAW,CAAEC,EAAwB,IAAKT,aAAa,CAACS,EAAE,EAAE;IAAEX;EAAK,CAAE,CAAC,EAAE,CAC3GE,aAAa,EACbF,KAAK,CACN,CAAC;EAEF,OAAO;IACLK,IAAI;IACJJ,QAAQ;IACRW,aAAa,EAAEJ,sBAAsB;IACrCK,UAAU,EAAE;MACVC,IAAI,EAAE;KACP;IACDA,IAAI,EAAEC,uCAAqB,CAAC,KAAK,EAAE;MACjChB,GAAG,EAAEA,GAAG;MACR,GAAGD;KACJ;GACF;AACH,CAAC;AAzBYkB,iCAAyB","names":["useAccordionItem_unstable","props","ref","value","disabled","requestToggle","AccordionContext_1","ctx","open","openItems","includes","onAccordionHeaderClick","React","useCallback","ev","onHeaderClick","components","root","react_utilities_1","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionItem/useAccordionItem.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport type { AccordionItemProps, AccordionItemState } from './AccordionItem.types';\nimport type { AccordionToggleEvent } from '../Accordion/Accordion.types';\n\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionItem properties\n * @param ref - reference to root HTMLElement of AccordionItem\n */\nexport const useAccordionItem_unstable = (\n  props: AccordionItemProps,\n  ref: React.Ref<HTMLElement>,\n): AccordionItemState => {\n  const { value, disabled = false } = props;\n\n  const requestToggle = useAccordionContext_unstable(ctx => ctx.requestToggle);\n  const open = useAccordionContext_unstable(ctx => ctx.openItems.includes(value));\n  const onAccordionHeaderClick = React.useCallback((ev: AccordionToggleEvent) => requestToggle(ev, { value }), [\n    requestToggle,\n    value,\n  ]);\n\n  return {\n    open,\n    disabled,\n    onHeaderClick: onAccordionHeaderClick,\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ref: ref,\n      ...props,\n    }),\n  };\n};\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAIaA,iCAAyB,GAAyC;EAC7EC,IAAI,EAAE,qBAAqB;EAC3BC,MAAM,EAAE,6BAA6B;EACrCC,UAAU,EAAE,iCAAiC;EAC7CC,IAAI,EAAE;CACP;AAED,MAAMC,SAAS,gBAAGC,guF1B;AAEF;AACO,MAAMC,iCAAiC,GAAIC,KAA2B,IAAI;EAC/E,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1BG,KAAK,CAACP,IAAI,CAACS,SAAS,GAAGJ,oBAAY,CACjCN,iCAAyB,CAACC,IAAI,EAC9BQ,MAAM,CAACR,IAAI,EACXO,KAAK,CAACG,MAAM,IAAIF,MAAM,CAACG,UAAU,EACjCJ,KAAK,CAACK,QAAQ,IAAIJ,MAAM,CAACK,YAAY,EACrCN,KAAK,CAACP,IAAI,CAACS,SAAS,CACrB;EAEDF,KAAK,CAACN,MAAM,CAACQ,SAAS,GAAGJ,oBAAY,CACnCN,iCAAyB,CAACE,MAAM,EAChCO,MAAM,CAACM,WAAW,EAClBN,MAAM,CAACP,MAAM,EACbO,MAAM,CAACO,cAAc,EACrBR,KAAK,CAACS,kBAAkB,KAAK,KAAK,IAAI,CAACT,KAAK,CAACJ,IAAI,IAAIK,MAAM,CAACS,yBAAyB,EACrFV,KAAK,CAACS,kBAAkB,KAAK,KAAK,IAAIR,MAAM,CAACU,mBAAmB,EAChEX,KAAK,CAACG,MAAM,IAAIF,MAAM,CAACW,YAAY,EACnCZ,KAAK,CAACa,IAAI,KAAK,OAAO,IAAIZ,MAAM,CAACa,WAAW,EAC5Cd,KAAK,CAACa,IAAI,KAAK,OAAO,IAAIZ,MAAM,CAACc,WAAW,EAC5Cf,KAAK,CAACa,IAAI,KAAK,aAAa,IAAIZ,MAAM,CAACe,gBAAgB,EACvDhB,KAAK,CAACN,MAAM,CAACQ,SAAS,CACvB;EAED,IAAIF,KAAK,CAACL,UAAU,EAAE;IACpBK,KAAK,CAACL,UAAU,CAACO,SAAS,GAAGJ,oBAAY,CACvCN,iCAAyB,CAACG,UAAU,EACpCM,MAAM,CAACN,UAAU,EACjBK,KAAK,CAACS,kBAAkB,KAAK,OAAO,IAAIR,MAAM,CAACgB,eAAe,EAC9DjB,KAAK,CAACS,kBAAkB,KAAK,KAAK,IAAIR,MAAM,CAACiB,aAAa,EAC1DlB,KAAK,CAACL,UAAU,CAACO,SAAS,CAC3B;;EAEH,IAAIF,KAAK,CAACJ,IAAI,EAAE;IACdI,KAAK,CAACJ,IAAI,CAACM,SAAS,GAAGJ,oBAAY,CAACN,iCAAyB,CAACI,IAAI,EAAEK,MAAM,CAACL,IAAI,EAAEI,KAAK,CAACJ,IAAI,CAACM,SAAS,CAAC;;EAExG,OAAOF,KAAK;AACd,CAAC;AArCYR,yCAAiC","names":["exports","root","button","expandIcon","icon","useStyles","react_1","useAccordionHeaderStyles_unstable","state","styles","className","inline","rootInline","disabled","rootDisabled","resetButton","focusIndicator","expandIconPosition","buttonExpandIconEndNoIcon","buttonExpandIconEnd","buttonInline","size","buttonSmall","buttonLarge","buttonExtraLarge","expandIconStart","expandIconEnd"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionHeader/useAccordionHeaderStyles.ts"],"sourcesContent":["import { shorthands, makeStyles, mergeClasses } from '@griffel/react';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport type { AccordionHeaderSlots, AccordionHeaderState } from './AccordionHeader.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const accordionHeaderClassNames: SlotClassNames<AccordionHeaderSlots> = {\n  root: 'fui-AccordionHeader',\n  button: 'fui-AccordionHeader__button',\n  expandIcon: 'fui-AccordionHeader__expandIcon',\n  icon: 'fui-AccordionHeader__icon',\n};\n\nconst useStyles = makeStyles({\n  // TODO: this should be extracted to another package\n  resetButton: {\n    boxSizing: 'content-box',\n    backgroundColor: 'inherit',\n    color: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    lineHeight: 'normal',\n    ...shorthands.overflow('visible'),\n    ...shorthands.padding(0),\n    WebkitAppearance: 'button',\n    textAlign: 'unset',\n  },\n  focusIndicator: createFocusOutlineStyle(),\n  root: {\n    color: tokens.colorNeutralForeground1,\n    backgroundColor: tokens.colorTransparentBackground,\n    ...shorthands.margin(0),\n    ...shorthands.borderRadius(tokens.borderRadiusMedium),\n  },\n  rootDisabled: {\n    backgroundImage: 'none',\n    color: tokens.colorNeutralForegroundDisabled,\n  },\n  rootInline: {\n    display: 'inline-block',\n  },\n  button: {\n    position: 'relative',\n    width: '100%',\n    ...shorthands.border('1px', 'solid', 'transparent'),\n    ...shorthands.padding(0, tokens.spacingHorizontalM, 0, tokens.spacingHorizontalMNudge),\n    minHeight: '44px',\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    ...typographyStyles.body1,\n    boxSizing: 'border-box',\n  },\n  buttonSmall: {\n    minHeight: '32px',\n    fontSize: tokens.fontSizeBase200,\n  },\n  buttonLarge: {\n    lineHeight: tokens.lineHeightBase400,\n    fontSize: tokens.fontSizeBase400,\n  },\n  buttonExtraLarge: {\n    lineHeight: tokens.lineHeightBase500,\n    fontSize: tokens.fontSizeBase500,\n  },\n  buttonInline: {\n    display: 'inline-flex',\n  },\n  buttonExpandIconEndNoIcon: {\n    paddingLeft: tokens.spacingHorizontalM,\n  },\n  buttonExpandIconEnd: {\n    paddingRight: tokens.spacingHorizontalMNudge,\n  },\n  expandIcon: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: tokens.lineHeightBase500,\n    fontSize: tokens.fontSizeBase500,\n  },\n  expandIconStart: {\n    paddingRight: tokens.spacingHorizontalS,\n  },\n  expandIconEnd: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: '0%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingLeft: tokens.spacingHorizontalS,\n  },\n  icon: {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    paddingRight: tokens.spacingHorizontalS,\n    lineHeight: tokens.lineHeightBase500,\n    fontSize: tokens.fontSizeBase500,\n  },\n});\n\n/** Applies style classnames to slots */\nexport const useAccordionHeaderStyles_unstable = (state: AccordionHeaderState) => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(\n    accordionHeaderClassNames.root,\n    styles.root,\n    state.inline && styles.rootInline,\n    state.disabled && styles.rootDisabled,\n    state.root.className,\n  );\n\n  state.button.className = mergeClasses(\n    accordionHeaderClassNames.button,\n    styles.resetButton,\n    styles.button,\n    styles.focusIndicator,\n    state.expandIconPosition === 'end' && !state.icon && styles.buttonExpandIconEndNoIcon,\n    state.expandIconPosition === 'end' && styles.buttonExpandIconEnd,\n    state.inline && styles.buttonInline,\n    state.size === 'small' && styles.buttonSmall,\n    state.size === 'large' && styles.buttonLarge,\n    state.size === 'extra-large' && styles.buttonExtraLarge,\n    state.button.className,\n  );\n\n  if (state.expandIcon) {\n    state.expandIcon.className = mergeClasses(\n      accordionHeaderClassNames.expandIcon,\n      styles.expandIcon,\n      state.expandIconPosition === 'start' && styles.expandIconStart,\n      state.expandIconPosition === 'end' && styles.expandIconEnd,\n      state.expandIcon.className,\n    );\n  }\n  if (state.icon) {\n    state.icon.className = mergeClasses(accordionHeaderClassNames.icon, styles.icon, state.icon.className);\n  }\n  return state;\n};\n"]}
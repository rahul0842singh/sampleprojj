{"version":3,"mappings":";;;;;;AAAA;AAOA,SAAgBA,wCAAwC,CAACC,KAA2B;EAClF,MAAM;IAAEC,QAAQ;IAAEC,kBAAkB;IAAEC,IAAI;IAAEC;EAAI,CAAE,GAAGJ,KAAK;EAE1D,MAAMK,eAAe,GAAGC,KAAK,CAACC,OAAO,CACnC,OAAO;IACLN,QAAQ;IACRC,kBAAkB;IAClBC,IAAI;IACJC;GACD,CAAC,EACF,CAACH,QAAQ,EAAEC,kBAAkB,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAC3C;EAED,OAAO;IAAEC;EAAe,CAAE;AAC5B;AAdAG","names":["useAccordionHeaderContextValues_unstable","state","disabled","expandIconPosition","open","size","accordionHeader","React","useMemo","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionHeader/useAccordionHeaderContextValues.ts"],"sourcesContent":["import * as React from 'react';\nimport type {\n  AccordionHeaderContextValue,\n  AccordionHeaderState,\n  AccordionHeaderContextValues,\n} from './AccordionHeader.types';\n\nexport function useAccordionHeaderContextValues_unstable(state: AccordionHeaderState): AccordionHeaderContextValues {\n  const { disabled, expandIconPosition, open, size } = state;\n\n  const accordionHeader = React.useMemo<AccordionHeaderContextValue>(\n    () => ({\n      disabled,\n      expandIconPosition,\n      open,\n      size,\n    }),\n    [disabled, expandIconPosition, open, size],\n  );\n\n  return { accordionHeader };\n}\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAGA;;;AAGO,MAAMA,8BAA8B,GAAG,CAC5CC,KAA2B,EAC3BC,aAA2C,KACzC;EACF,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAE,GAAGC,0BAAQ,CAAuBJ,KAAK,CAAC;EAElE,OACEK,oBAACC,+CAAsB,CAACC,QAAQ;IAACC,KAAK,EAAEP,aAAa,CAACQ;EAAe,GACnEJ,oBAACH,KAAK,CAACQ,IAAI;IAAA,GAAKP,SAAS,CAACO;EAAI,GAC5BL,oBAACH,KAAK,CAACS,MAAM;IAAA,GAAKR,SAAS,CAACQ;EAAM,GAC/BX,KAAK,CAACY,kBAAkB,KAAK,OAAO,IAAIP,oBAACH,KAAK,CAACW,UAAU;IAAA,GAAKV,SAAS,CAACU;EAAU,EAAI,EACtFX,KAAK,CAACY,IAAI,IAAIT,oBAACH,KAAK,CAACY,IAAI;IAAA,GAAKX,SAAS,CAACW;EAAI,EAAI,EAChDX,SAAS,CAACO,IAAI,CAACK,QAAQ,EACvBf,KAAK,CAACY,kBAAkB,KAAK,KAAK,IAAIP,oBAACH,KAAK,CAACW,UAAU;IAAA,GAAKV,SAAS,CAACU;EAAU,EAAI,CACxE,CACJ,CACmB;AAEtC,CAAC;AAlBYG,sCAA8B","names":["renderAccordionHeader_unstable","state","contextValues","slots","slotProps","react_utilities_1","React","AccordionHeaderContext_1","Provider","value","accordionHeader","root","button","expandIconPosition","expandIcon","icon","children","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionHeader/renderAccordionHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport { AccordionHeaderContext } from './AccordionHeaderContext';\nimport type { AccordionHeaderState, AccordionHeaderSlots, AccordionHeaderContextValues } from './AccordionHeader.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordionHeader_unstable = (\n  state: AccordionHeaderState,\n  contextValues: AccordionHeaderContextValues,\n) => {\n  const { slots, slotProps } = getSlots<AccordionHeaderSlots>(state);\n\n  return (\n    <AccordionHeaderContext.Provider value={contextValues.accordionHeader}>\n      <slots.root {...slotProps.root}>\n        <slots.button {...slotProps.button}>\n          {state.expandIconPosition === 'start' && <slots.expandIcon {...slotProps.expandIcon} />}\n          {slots.icon && <slots.icon {...slotProps.icon} />}\n          {slotProps.root.children}\n          {state.expandIconPosition === 'end' && <slots.expandIcon {...slotProps.expandIcon} />}\n        </slots.button>\n      </slots.root>\n    </AccordionHeaderContext.Provider>\n  );\n};\n"]}
{"version":3,"mappings":"AACA,SAASA,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,gCAAgC,QAAQ,wBAAwB;AACzE,SAASC,4BAA4B,QAAQ,+BAA+B;AAG5E;;;;;AAKA,OAAO,MAAMC,0BAA0B,GAAG,CACxCC,KAA0B,EAC1BC,GAA2B,KACJ;EACvB,MAAM;IAAEC;EAAI,CAAE,GAAGL,gCAAgC,EAAE;EACnD,MAAMM,cAAc,GAAGP,oBAAoB,CAAC;IAAEQ,SAAS,EAAE;MAAEC,gBAAgB,EAAE;IAAI;EAAE,CAAE,CAAC;EACtF,MAAMC,UAAU,GAAGR,4BAA4B,CAACS,GAAG,IAAIA,GAAG,CAACD,UAAU,CAAC;EAEtE,OAAO;IACLJ,IAAI;IACJM,UAAU,EAAE;MACVC,IAAI,EAAE;KACP;IACDA,IAAI,EAAEd,qBAAqB,CAAC,KAAK,EAAE;MACjCM,GAAG;MACH,GAAGD,KAAK;MACR,IAAIM,UAAU,IAAIH,cAAc;KACjC;GACF;AACH,CAAC","names":["getNativeElementProps","useTabsterAttributes","useAccordionItemContext_unstable","useAccordionContext_unstable","useAccordionPanel_unstable","props","ref","open","focusableProps","focusable","excludeFromMover","navigation","ctx","components","root"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionPanel/useAccordionPanel.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useTabsterAttributes } from '@fluentui/react-tabster';\nimport { useAccordionItemContext_unstable } from '../AccordionItem/index';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport type { AccordionPanelProps, AccordionPanelState } from './AccordionPanel.types';\n\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionPanel properties\n * @param ref - reference to root HTMLElement of AccordionPanel\n */\nexport const useAccordionPanel_unstable = (\n  props: AccordionPanelProps,\n  ref: React.Ref<HTMLElement>,\n): AccordionPanelState => {\n  const { open } = useAccordionItemContext_unstable();\n  const focusableProps = useTabsterAttributes({ focusable: { excludeFromMover: true } });\n  const navigation = useAccordionContext_unstable(ctx => ctx.navigation);\n\n  return {\n    open,\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ref,\n      ...props,\n      ...(navigation && focusableProps),\n    }),\n  };\n};\n"]}
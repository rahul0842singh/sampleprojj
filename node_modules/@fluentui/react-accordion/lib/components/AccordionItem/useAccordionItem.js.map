{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,4BAA4B,QAAQ,+BAA+B;AAI5E;;;;;AAKA,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,KAAyB,EACzBC,GAA2B,KACL;EACtB,MAAM;IAAEC,KAAK;IAAEC,QAAQ,GAAG;EAAK,CAAE,GAAGH,KAAK;EAEzC,MAAMI,aAAa,GAAGN,4BAA4B,CAACO,GAAG,IAAIA,GAAG,CAACD,aAAa,CAAC;EAC5E,MAAME,IAAI,GAAGR,4BAA4B,CAACO,GAAG,IAAIA,GAAG,CAACE,SAAS,CAACC,QAAQ,CAACN,KAAK,CAAC,CAAC;EAC/E,MAAMO,sBAAsB,GAAGb,KAAK,CAACc,WAAW,CAAEC,EAAwB,IAAKP,aAAa,CAACO,EAAE,EAAE;IAAET;EAAK,CAAE,CAAC,EAAE,CAC3GE,aAAa,EACbF,KAAK,CACN,CAAC;EAEF,OAAO;IACLI,IAAI;IACJH,QAAQ;IACRS,aAAa,EAAEH,sBAAsB;IACrCI,UAAU,EAAE;MACVC,IAAI,EAAE;KACP;IACDA,IAAI,EAAEjB,qBAAqB,CAAC,KAAK,EAAE;MACjCI,GAAG,EAAEA,GAAG;MACR,GAAGD;KACJ;GACF;AACH,CAAC","names":["React","getNativeElementProps","useAccordionContext_unstable","useAccordionItem_unstable","props","ref","value","disabled","requestToggle","ctx","open","openItems","includes","onAccordionHeaderClick","useCallback","ev","onHeaderClick","components","root"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionItem/useAccordionItem.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport { useAccordionContext_unstable } from '../Accordion/AccordionContext';\nimport type { AccordionItemProps, AccordionItemState } from './AccordionItem.types';\nimport type { AccordionToggleEvent } from '../Accordion/Accordion.types';\n\n/**\n * Returns the props and state required to render the component\n * @param props - AccordionItem properties\n * @param ref - reference to root HTMLElement of AccordionItem\n */\nexport const useAccordionItem_unstable = (\n  props: AccordionItemProps,\n  ref: React.Ref<HTMLElement>,\n): AccordionItemState => {\n  const { value, disabled = false } = props;\n\n  const requestToggle = useAccordionContext_unstable(ctx => ctx.requestToggle);\n  const open = useAccordionContext_unstable(ctx => ctx.openItems.includes(value));\n  const onAccordionHeaderClick = React.useCallback((ev: AccordionToggleEvent) => requestToggle(ev, { value }), [\n    requestToggle,\n    value,\n  ]);\n\n  return {\n    open,\n    disabled,\n    onHeaderClick: onAccordionHeaderClick,\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ref: ref,\n      ...props,\n    }),\n  };\n};\n"]}
{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,2BAA2B;AAEpD,SAASC,gBAAgB,QAAQ,oBAAoB;AAGrD;;;AAGA,OAAO,MAAMC,wBAAwB,GAAG,CAACC,KAAqB,EAAEC,aAAqC,KAAI;EACvG,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAE,GAAGN,QAAQ,CAAiBG,KAAK,CAAC;EAE5D,oBACEJ,oBAACM,KAAK,CAACE,IAAI;IAAA,GAAKD,SAAS,CAACC;EAAI,gBAC5BR,oBAACE,gBAAgB,CAACO,QAAQ;IAACC,KAAK,EAAEL,aAAa,CAACM;EAAS,GAAGJ,SAAS,CAACC,IAAI,CAACI,QAAQ,CAA6B,CACrG;AAEjB,CAAC","names":["React","getSlots","AccordionContext","renderAccordion_unstable","state","contextValues","slots","slotProps","root","Provider","value","accordion","children"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/Accordion/renderAccordion.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\n\nimport { AccordionContext } from './AccordionContext';\nimport type { AccordionState, AccordionSlots, AccordionContextValues } from './Accordion.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordion_unstable = (state: AccordionState, contextValues: AccordionContextValues) => {\n  const { slots, slotProps } = getSlots<AccordionSlots>(state);\n\n  return (\n    <slots.root {...slotProps.root}>\n      <AccordionContext.Provider value={contextValues.accordion}>{slotProps.root.children}</AccordionContext.Provider>\n    </slots.root>\n  );\n};\n"]}
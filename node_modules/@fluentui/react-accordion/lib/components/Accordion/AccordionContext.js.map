{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAmBC,kBAAkB,QAAQ,kCAAkC;AAIrG,OAAO,MAAMC,gBAAgB,gBAAmCF,aAAa,CAC3EG,SAAS,CACwB;AAEnC,MAAMC,4BAA4B,GAA0B;EAC1DC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,KAAK;EAClBC,aAAa;IACX;EAAA;CAEH;AAED,OAAO,MAAMC,iBAAiB,GAAGN,gBAAgB,CAACO,QAAQ;AAC1D,OAAO,MAAMC,4BAA4B,GAAOC,QAAmD,IACjGV,kBAAkB,CAACC,gBAAgB,EAAE,CAACU,GAAG,GAAGR,4BAA4B,KAAKO,QAAQ,CAACC,GAAG,CAAC,CAAC","names":["createContext","useContextSelector","AccordionContext","undefined","accordionContextDefaultValue","openItems","collapsible","requestToggle","AccordionProvider","Provider","useAccordionContext_unstable","selector","ctx"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/Accordion/AccordionContext.ts"],"sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"]}
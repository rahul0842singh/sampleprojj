{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,sBAAsB,QAAQ,0BAA0B;AAGjE;;;AAGA,OAAO,MAAMC,8BAA8B,GAAG,CAC5CC,KAA2B,EAC3BC,aAA2C,KACzC;EACF,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAE,GAAGN,QAAQ,CAAuBG,KAAK,CAAC;EAElE,oBACEJ,oBAACE,sBAAsB,CAACM,QAAQ;IAACC,KAAK,EAAEJ,aAAa,CAACK;EAAe,gBACnEV,oBAACM,KAAK,CAACK,IAAI;IAAA,GAAKJ,SAAS,CAACI;EAAI,gBAC5BX,oBAACM,KAAK,CAACM,MAAM;IAAA,GAAKL,SAAS,CAACK;EAAM,GAC/BR,KAAK,CAACS,kBAAkB,KAAK,OAAO,iBAAIb,oBAACM,KAAK,CAACQ,UAAU;IAAA,GAAKP,SAAS,CAACO;EAAU,EAAI,EACtFR,KAAK,CAACS,IAAI,iBAAIf,oBAACM,KAAK,CAACS,IAAI;IAAA,GAAKR,SAAS,CAACQ;EAAI,EAAI,EAChDR,SAAS,CAACI,IAAI,CAACK,QAAQ,EACvBZ,KAAK,CAACS,kBAAkB,KAAK,KAAK,iBAAIb,oBAACM,KAAK,CAACQ,UAAU;IAAA,GAAKP,SAAS,CAACO;EAAU,EAAI,CACxE,CACJ,CACmB;AAEtC,CAAC","names":["React","getSlots","AccordionHeaderContext","renderAccordionHeader_unstable","state","contextValues","slots","slotProps","Provider","value","accordionHeader","root","button","expandIconPosition","expandIcon","icon","children"],"sourceRoot":"../src/","sources":["packages/react-components/react-accordion/src/components/AccordionHeader/renderAccordionHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport { AccordionHeaderContext } from './AccordionHeaderContext';\nimport type { AccordionHeaderState, AccordionHeaderSlots, AccordionHeaderContextValues } from './AccordionHeader.types';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordionHeader_unstable = (\n  state: AccordionHeaderState,\n  contextValues: AccordionHeaderContextValues,\n) => {\n  const { slots, slotProps } = getSlots<AccordionHeaderSlots>(state);\n\n  return (\n    <AccordionHeaderContext.Provider value={contextValues.accordionHeader}>\n      <slots.root {...slotProps.root}>\n        <slots.button {...slotProps.button}>\n          {state.expandIconPosition === 'start' && <slots.expandIcon {...slotProps.expandIcon} />}\n          {slots.icon && <slots.icon {...slotProps.icon} />}\n          {slotProps.root.children}\n          {state.expandIconPosition === 'end' && <slots.expandIcon {...slotProps.expandIcon} />}\n        </slots.button>\n      </slots.root>\n    </AccordionHeaderContext.Provider>\n  );\n};\n"]}
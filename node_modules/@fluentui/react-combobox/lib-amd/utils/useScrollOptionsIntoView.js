define(["require", "exports", "react", "@fluentui/react-utilities"], function (require, exports, React, react_utilities_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useScrollOptionsIntoView = void 0;
    function useScrollOptionsIntoView(state) {
        var activeOption = state.activeOption;
        var scrollContainerRef = React.useRef(null);
        React.useEffect(function () {
            if (scrollContainerRef.current && activeOption && react_utilities_1.canUseDOM()) {
                var activeOptionElement = scrollContainerRef.current.querySelector("#" + activeOption.id);
                if (!activeOptionElement) {
                    return;
                }
                var offsetHeight = activeOptionElement.offsetHeight, offsetTop = activeOptionElement.offsetTop;
                var _a = scrollContainerRef.current, parentOffsetHeight = _a.offsetHeight, scrollTop = _a.scrollTop;
                var isAbove = offsetTop < scrollTop;
                var isBelow = offsetTop + offsetHeight > scrollTop + parentOffsetHeight;
                // add a small buffer for general visual nicety
                // it looks slightly better if the option has some space from the top/bottom while arrowing
                var buffer = 2;
                if (isAbove) {
                    scrollContainerRef.current.scrollTo(0, offsetTop - buffer);
                }
                else if (isBelow) {
                    scrollContainerRef.current.scrollTo(0, offsetTop - parentOffsetHeight + offsetHeight + buffer);
                }
            }
        }, [activeOption]);
        return scrollContainerRef;
    }
    exports.useScrollOptionsIntoView = useScrollOptionsIntoView;
});
//# sourceMappingURL=useScrollOptionsIntoView.js.map
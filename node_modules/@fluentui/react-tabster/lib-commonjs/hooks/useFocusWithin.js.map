{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA;;;;;AAKA,SAAgBA,cAAc;EAC5B,MAAM;IAAEC;EAAc,CAAE,GAAGC,0CAAS,EAAE;EACtC,MAAMC,UAAU,GAAGC,KAAK,CAACC,MAAM,CAAW,IAAI,CAAC;EAE/CD,KAAK,CAACE,SAAS,CAAC,MAAK;IACnB,IAAI,eAAc,aAAdL,cAAc,uBAAdA,cAAc,CAAEM,WAAW,KAAIJ,UAAU,CAACK,OAAO,EAAE;MACrD,OAAOC,8CAAwB,CAACN,UAAU,CAACK,OAAO,EAAEP,cAAc,CAACM,WAAW,CAAC;;EAEnF,CAAC,EAAE,CAACJ,UAAU,EAAEF,cAAc,CAAC,CAAC;EAEhC,OAAOE,UAAU;AACnB;AAXAO","names":["useFocusWithin","targetDocument","react_shared_contexts_1","elementRef","React","useRef","useEffect","defaultView","current","focusWithinPolyfill_1","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-tabster/src/hooks/useFocusWithin.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { applyFocusWithinPolyfill } from '../focus/focusWithinPolyfill';\n\n/**\n * A ponyfill that allows `:focus-within` to support visibility based on keyboard/mouse navigation\n * like `:focus-visible` https://github.com/WICG/focus-visible/issues/151\n * @returns ref to the element that uses `:focus-within` styles\n */\nexport function useFocusWithin<TElement extends HTMLElement = HTMLElement>() {\n  const { targetDocument } = useFluent();\n  const elementRef = React.useRef<TElement>(null);\n\n  React.useEffect(() => {\n    if (targetDocument?.defaultView && elementRef.current) {\n      return applyFocusWithinPolyfill(elementRef.current, targetDocument.defaultView);\n    }\n  }, [elementRef, targetDocument]);\n\n  return elementRef;\n}\n"]}
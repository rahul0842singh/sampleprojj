{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA,SAAgBA,eAAe;EAC7B,MAAM;IAAEC;EAAc,CAAE,GAAGC,0CAAS,EAAE;EACtC,MAAMC,QAAQ,GAAGC,KAAK,CAACC,MAAM,CAAW,IAAI,CAAC;EAE7CD,KAAK,CAACE,SAAS,CAAC,MAAK;IACnB,IAAI,eAAc,aAAdL,cAAc,uBAAdA,cAAc,CAAEM,WAAW,KAAIJ,QAAQ,CAACK,OAAO,EAAE;MACnD,OAAOC,gDAAyB,CAACN,QAAQ,CAACK,OAAO,EAAEP,cAAc,CAACM,WAAW,CAAC;;EAElF,CAAC,EAAE,CAACJ,QAAQ,EAAEF,cAAc,CAAC,CAAC;EAE9B,OAAOE,QAAQ;AACjB;AAXAO","names":["useFocusVisible","targetDocument","react_shared_contexts_1","scopeRef","React","useRef","useEffect","defaultView","current","focusVisiblePolyfill_1","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-tabster/src/hooks/useFocusVisible.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { applyFocusVisiblePolyfill } from '../focus/focusVisiblePolyfill';\n\nexport function useFocusVisible<TElement extends HTMLElement = HTMLElement>() {\n  const { targetDocument } = useFluent();\n  const scopeRef = React.useRef<TElement>(null);\n\n  React.useEffect(() => {\n    if (targetDocument?.defaultView && scopeRef.current) {\n      return applyFocusVisiblePolyfill(scopeRef.current, targetDocument.defaultView);\n    }\n  }, [scopeRef, targetDocument]);\n\n  return scopeRef;\n}\n"]}
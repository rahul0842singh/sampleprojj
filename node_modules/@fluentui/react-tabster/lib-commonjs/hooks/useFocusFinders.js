"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFocusFinders = void 0;
const React = /*#__PURE__*/require("react");
const react_shared_contexts_1 = /*#__PURE__*/require("@fluentui/react-shared-contexts");
const useTabster_1 = /*#__PURE__*/require("./useTabster");
/**
 * Returns a set of helper functions that will traverse focusable elements in the context of a root DOM element
 */
const useFocusFinders = () => {
  const tabster = useTabster_1.useTabster();
  const {
    targetDocument
  } = react_shared_contexts_1.useFluent_unstable();
  // Narrow props for now and let need dictate additional props in the future
  const findAllFocusable = React.useCallback((container, acceptCondition) => (tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findAll({
    container,
    acceptCondition
  })) || [], [tabster]);
  const findFirstFocusable = React.useCallback(container => tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findFirst({
    container
  }), [tabster]);
  const findLastFocusable = React.useCallback(container => tabster === null || tabster === void 0 ? void 0 : tabster.focusable.findLast({
    container
  }), [tabster]);
  const findNextFocusable = React.useCallback((currentElement, options = {}) => {
    if (!tabster || !targetDocument) {
      return null;
    }
    const {
      container = targetDocument.body
    } = options;
    return tabster.focusable.findNext({
      currentElement,
      container
    });
  }, [tabster, targetDocument]);
  const findPrevFocusable = React.useCallback((currentElement, options = {}) => {
    if (!tabster || !targetDocument) {
      return null;
    }
    const {
      container = targetDocument.body
    } = options;
    return tabster.focusable.findPrev({
      currentElement,
      container
    });
  }, [tabster, targetDocument]);
  return {
    findAllFocusable,
    findFirstFocusable,
    findLastFocusable,
    findNextFocusable,
    findPrevFocusable
  };
};
exports.useFocusFinders = useFocusFinders;
//# sourceMappingURL=useFocusFinders.js.map
{"version":3,"mappings":";;;;;;AAAA;AAGA;AAOaA,+BAAuB,GAAuC;EACzEC,IAAI,EAAE;CACP;AAED,MAAMC,SAAS,gBAAGC,gBAAU;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAA;EAAA;EAAA;IAAA;EAAA;IAAA;EAAA;AAAA,EAmB1B;AAEF;;;AAGO,MAAMC,+BAA+B,GAAIC,KAAyB,IAAwB;EAC/F,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1BG,KAAK,CAACJ,IAAI,CAACM,SAAS,GAAGJ,oBAAY,CACjCH,+BAAuB,CAACC,IAAI,EAC5BK,MAAM,CAACL,IAAI,EACXI,KAAK,CAACG,QAAQ,KAAK,OAAO,IAAIF,MAAM,CAACG,iBAAiB,EACtDJ,KAAK,CAACG,QAAQ,KAAK,KAAK,IAAIF,MAAM,CAACI,eAAe,EAClDL,KAAK,CAACJ,IAAI,CAACM,SAAS,CACrB;EACD,OAAOF,KAAK;AACd,CAAC;AAVYL,uCAA+B","names":["exports","root","useStyles","react_1","useDialogActionsStyles_unstable","state","styles","className","position","gridPositionStart","gridPositionEnd"],"sourceRoot":"../src/","sources":["packages/react-components/react-dialog/src/components/DialogActions/useDialogActionsStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { DialogActionsSlots, DialogActionsState } from './DialogActions.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport {\n  DIALOG_GAP,\n  ACTIONS_END_GRID_AREA,\n  ACTIONS_START_GRID_AREA,\n  MEDIA_QUERY_BREAKPOINT_SELECTOR,\n} from '../../contexts/constants';\n\nexport const dialogActionsClassNames: SlotClassNames<DialogActionsSlots> = {\n  root: 'fui-DialogActions',\n};\n\nconst useStyles = makeStyles({\n  root: {\n    height: 'fit-content',\n    boxSizing: 'border-box',\n    display: 'flex',\n    ...shorthands.gap(DIALOG_GAP),\n    [MEDIA_QUERY_BREAKPOINT_SELECTOR]: {\n      flexDirection: 'column',\n      justifySelf: 'stretch',\n    },\n  },\n  gridPositionEnd: {\n    justifySelf: 'end',\n    ...shorthands.gridArea(ACTIONS_END_GRID_AREA),\n  },\n  gridPositionStart: {\n    justifySelf: 'start',\n    ...shorthands.gridArea(ACTIONS_START_GRID_AREA),\n  },\n});\n\n/**\n * Apply styling to the DialogActions slots based on the state\n */\nexport const useDialogActionsStyles_unstable = (state: DialogActionsState): DialogActionsState => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(\n    dialogActionsClassNames.root,\n    styles.root,\n    state.position === 'start' && styles.gridPositionStart,\n    state.position === 'end' && styles.gridPositionEnd,\n    state.root.className,\n  );\n  return state;\n};\n"]}
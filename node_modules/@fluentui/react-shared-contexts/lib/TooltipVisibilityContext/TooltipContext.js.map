{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAe9B;;;;AAIA,MAAMC,wBAAwB,gBAAGD,KAAK,CAACE,aAAa,CAClDC,SAAS,CACsC;AAEjD,MAAMC,oCAAoC,GAAkC,EAAE;AAE9E;;;AAGA,OAAO,MAAMC,yBAAyB,GAAGJ,wBAAwB,CAACK,QAAQ;AAE1E,OAAM,SAAUC,oBAAoB;;EAClC,OAAO,WAAK,CAACC,UAAU,CAACP,wBAAwB,CAAC,mCAAIG,oCAAoC;AAC3F","names":["React","TooltipVisibilityContext","createContext","undefined","tooltipVisibilityContextDefaultValue","TooltipVisibilityProvider","Provider","useTooltipVisibility","useContext"],"sourceRoot":"../src/","sources":["packages/react-components/react-shared-contexts/src/TooltipVisibilityContext/TooltipContext.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * The context provided by TooltipProvider\n */\nexport type TooltipVisibilityContextValue = {\n  /**\n   * When a tooltip is shown, it sets itself as the visibleTooltip.\n   * The next tooltip to become visible can use it to hide the previous tooltip immediately.\n   */\n  visibleTooltip?: {\n    hide: () => void;\n  };\n};\n\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */\nconst TooltipVisibilityContext = React.createContext<TooltipVisibilityContextValue | undefined>(\n  undefined,\n) as React.Context<TooltipVisibilityContextValue>;\n\nconst tooltipVisibilityContextDefaultValue: TooltipVisibilityContextValue = {};\n\n/**\n * @internal\n */\nexport const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\n\nexport function useTooltipVisibility(): TooltipVisibilityContextValue {\n  return React.useContext(TooltipVisibilityContext) ?? tooltipVisibilityContextDefaultValue;\n}\n"]}
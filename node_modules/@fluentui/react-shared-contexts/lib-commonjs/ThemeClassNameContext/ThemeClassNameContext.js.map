{"version":3,"mappings":";;;;;;AAAA;AAIA;;;;;;AAMA,MAAMA,qBAAqB,gBAAGC,KAAK,CAACC,aAAa,CAC/CC,SAAS,CACmC;AAE9C,MAAMC,gCAAgC,GAAG,EAAE;AAE9BC,8BAAsB,GAAGL,qBAAqB,CAACM,QAAQ;AAEpE;;;AAGA,SAAgBC,iBAAiB;;EAC/B,OAAO,WAAK,CAACC,UAAU,CAACR,qBAAqB,CAAC,mCAAII,gCAAgC;AACpF;AAFAC","names":["ThemeClassNameContext","React","createContext","undefined","themeClassNameContextDefaultVaue","exports","Provider","useThemeClassName","useContext"],"sourceRoot":"../src/","sources":["packages/react-components/react-shared-contexts/src/ThemeClassNameContext/ThemeClassNameContext.ts"],"sourcesContent":["import * as React from 'react';\n\nexport type ThemeClassNameContextValue = string;\n\n/**\n * @internal\n * Used to provide a CSS class that applies theme css variables\n *\n * Useful for elements in the React tree (can read context) but not in the DOM Tree. E.g. Portals\n */\nconst ThemeClassNameContext = React.createContext<ThemeClassNameContextValue | undefined>(\n  undefined,\n) as React.Context<ThemeClassNameContextValue>;\n\nconst themeClassNameContextDefaultVaue = '';\n\nexport const ThemeClassNameProvider = ThemeClassNameContext.Provider;\n\n/**\n * @returns CSS class that applies css variables\n */\nexport function useThemeClassName(): ThemeClassNameContextValue {\n  return React.useContext(ThemeClassNameContext) ?? themeClassNameContextDefaultVaue;\n}\n"]}
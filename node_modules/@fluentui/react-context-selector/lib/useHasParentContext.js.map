{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B;;;;;;;;AAQA,OAAM,SAAUC,mBAAmB,CAAQC,OAAuB;EAChE,MAAMC,YAAY,GAAGH,KAAK,CAACI,UAAU,CAAEF,OAAmD,CAAC;EAE3F,IAAIC,YAAY,CAACE,OAAO,EAAE;IACxB,OAAOF,YAAY,CAACE,OAAO,CAACC,OAAO,KAAK,CAAC,CAAC;;EAG5C,OAAO,KAAK;AACd","names":["React","useHasParentContext","context","contextValue","useContext","version","current"],"sourceRoot":"../src/","sources":["packages/react-components/react-context-selector/src/useHasParentContext.ts"],"sourcesContent":["import * as React from 'react';\nimport { Context, ContextValue } from './types';\n\n/**\n * @internal\n * Utility hook for contexts created by react-context-selector to determine if a parent context exists\n * WARNING: This hook will not work for native React contexts\n *\n * @param context - context created by react-context-selector\n * @returns whether the hook is wrapped by a parent context\n */\nexport function useHasParentContext<Value>(context: Context<Value>) {\n  const contextValue = React.useContext((context as unknown) as Context<ContextValue<Value>>);\n\n  if (contextValue.version) {\n    return contextValue.version.current !== -1;\n  }\n\n  return false;\n}\n"]}
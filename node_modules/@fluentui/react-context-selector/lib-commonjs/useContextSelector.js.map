{"version":3,"mappings":";;;;;;AAAA;AACA;AAaA;;;;;;AAMO,MAAMA,kBAAkB,GAAG,CAChCC,OAAuB,EACvBC,QAA+C,KAC9B;EACjB,MAAMC,YAAY,GAAGC,KAAK,CAACC,UAAU,CAAEJ,OAAmD,CAAC;EAE3F,MAAM;IACJK,KAAK,EAAE;MAAEC,OAAO,EAAED;IAAK,CAAE;IACzBE,OAAO,EAAE;MAAED,OAAO,EAAEC;IAAO,CAAE;IAC7BC;EAAS,CACV,GAAGN,YAAY;EAChB,MAAMO,QAAQ,GAAGR,QAAQ,CAACI,KAAK,CAAC;EAEhC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,UAAU,CACxC,CACEC,SAAmF,EACnFC,OAEoC,KACD;IACnC,IAAI,CAACA,OAAO,EAAE;MACZ;MACA,OAAO,CAACT,KAAK,EAAEI,QAAQ,CAAU;;IAGnC,IAAIK,OAAO,CAAC,CAAC,CAAC,IAAIP,OAAO,EAAE;MACzB,IAAIQ,QAAQ,CAACF,SAAS,CAAC,CAAC,CAAC,EAAEJ,QAAQ,CAAC,EAAE;QACpC,OAAOI,SAAS,CAAC,CAAC;;;MAGpB,OAAO,CAACR,KAAK,EAAEI,QAAQ,CAAU;;IAGnC,IAAI;MACF,IAAIM,QAAQ,CAACF,SAAS,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;QACtC,OAAOD,SAAS,CAAC,CAAC;;;MAGpB,MAAMG,YAAY,GAAGf,QAAQ,CAACa,OAAO,CAAC,CAAC,CAAC,CAAC;MAEzC,IAAIC,QAAQ,CAACF,SAAS,CAAC,CAAC,CAAC,EAAEG,YAAY,CAAC,EAAE;QACxC,OAAOH,SAAS,CAAC,CAAC;;;MAGpB,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,EAAEE,YAAY,CAAU;KAC3C,CAAC,OAAOC,CAAC,EAAE;MACV;IAAA;IAGF;IACA,OAAO,CAACJ,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAU,CAAC,CAAC;EAChD,CAAC,EACD,CAACR,KAAK,EAAEI,QAAQ,CAAU,CAC3B;EAED,IAAI,CAACM,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,EAAED,QAAQ,CAAC,EAAE;IACjC;IACA;IACAE,QAAQ,CAACO,SAAS,CAAC;;EAGrBC,2CAAyB,CAAC,MAAK;IAC7BX,SAAS,CAACY,IAAI,CAACT,QAAQ,CAAC;IAExB,OAAO,MAAK;MACV,MAAMU,KAAK,GAAGb,SAAS,CAACc,OAAO,CAACX,QAAQ,CAAC;MACzCH,SAAS,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,OAAOE,KAAK,CAAC,CAAC,CAAkB;AAClC,CAAC;AAvEYc,0BAAkB;AAyE/B;;;;AAIA;AACA,SAASC,EAAE,CAACC,CAAM,EAAEC,CAAM;EACxB,OACGD,CAAC,KAAKC,CAAC,KAAKD,CAAC,KAAK,CAAC,IAAI,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAGC,CAAC,CAAC,IAAMD,CAAC,KAAKA,CAAC,IAAIC,CAAC,KAAKA,CAAE,CAAC;EAAA;AAEtE;AAEA;AACA,MAAMZ,QAAQ;AACZ;AACA;AACA,OAAOa,MAAM,CAACH,EAAE,KAAK,UAAU,GAAGG,MAAM,CAACH,EAAE,GAAGA,EAAE","names":["useContextSelector","context","selector","contextValue","React","useContext","value","current","version","listeners","selected","state","dispatch","useReducer","prevState","payload","objectIs","nextSelected","e","undefined","react_utilities_1","push","index","indexOf","splice","exports","is","x","y","Object"],"sourceRoot":"../src/","sources":["packages/react-components/react-context-selector/src/useContextSelector.ts"],"sourcesContent":["import { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { Context, ContextSelector, ContextValue, ContextVersion } from './types';\n\n/**\n * Narrowing React.Reducer type to be more easily usable below.\n * No need to export this as it's for internal reducer usage.\n */\ntype ContextReducer<Value, SelectedValue> = React.Reducer<\n  readonly [Value, SelectedValue],\n  undefined | readonly [ContextVersion, Value]\n>;\n\n/**\n * @internal\n * This hook returns context selected value by selector.\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n */\nexport const useContextSelector = <Value, SelectedValue>(\n  context: Context<Value>,\n  selector: ContextSelector<Value, SelectedValue>,\n): SelectedValue => {\n  const contextValue = React.useContext((context as unknown) as Context<ContextValue<Value>>);\n\n  const {\n    value: { current: value },\n    version: { current: version },\n    listeners,\n  } = contextValue;\n  const selected = selector(value);\n\n  const [state, dispatch] = React.useReducer<ContextReducer<Value, SelectedValue>>(\n    (\n      prevState: readonly [Value /* contextValue */, SelectedValue /* selector(value) */],\n      payload:\n        | undefined // undefined from render below\n        | readonly [ContextVersion, Value], // from provider effect\n    ): readonly [Value, SelectedValue] => {\n      if (!payload) {\n        // early bail out when is dispatched during render\n        return [value, selected] as const;\n      }\n\n      if (payload[0] <= version) {\n        if (objectIs(prevState[1], selected)) {\n          return prevState; // bail out\n        }\n\n        return [value, selected] as const;\n      }\n\n      try {\n        if (objectIs(prevState[0], payload[1])) {\n          return prevState; // do not update\n        }\n\n        const nextSelected = selector(payload[1]);\n\n        if (objectIs(prevState[1], nextSelected)) {\n          return prevState; // do not update\n        }\n\n        return [payload[1], nextSelected] as const;\n      } catch (e) {\n        // ignored (stale props or some other reason)\n      }\n\n      // explicitly spread to enforce typing\n      return [prevState[0], prevState[1]] as const; // schedule update\n    },\n    [value, selected] as const,\n  );\n\n  if (!objectIs(state[1], selected)) {\n    // schedule re-render\n    // this is safe because it's self contained\n    dispatch(undefined);\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    listeners.push(dispatch);\n\n    return () => {\n      const index = listeners.indexOf(dispatch);\n      listeners.splice(index, 1);\n    };\n  }, [listeners]);\n\n  return state[1] as SelectedValue;\n};\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst objectIs: (x: any, y: any) => boolean =\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore fallback to native if it exists (not in IE11)\n  typeof Object.is === 'function' ? Object.is : is;\n"]}
define(["require", "exports", "tslib", "@floating-ui/dom", "../utils/getBoundary"], function (require, exports, tslib_1, dom_1, getBoundary_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.maxSize = void 0;
    function maxSize(autoSize, options) {
        var container = options.container, overflowBoundary = options.overflowBoundary;
        return dom_1.size(tslib_1.__assign(tslib_1.__assign({}, (overflowBoundary && { altBoundary: true, boundary: getBoundary_1.getBoundary(container, overflowBoundary) })), { apply: function (_a) {
                var availableHeight = _a.availableHeight, availableWidth = _a.availableWidth, elements = _a.elements, rects = _a.rects;
                var applyMaxWidth = autoSize === 'always' ||
                    autoSize === 'width-always' ||
                    (rects.floating.width > availableWidth && (autoSize === true || autoSize === 'width'));
                var applyMaxHeight = autoSize === 'always' ||
                    autoSize === 'height-always' ||
                    (rects.floating.height > availableHeight && (autoSize === true || autoSize === 'height'));
                if (applyMaxHeight) {
                    Object.assign(elements.floating.style, {
                        maxHeight: availableHeight + "px",
                        boxSizing: 'border-box',
                        overflowY: 'auto',
                    });
                }
                if (applyMaxWidth) {
                    Object.assign(elements.floating.style, {
                        maxWidth: availableWidth + "px",
                        boxSizing: 'border-box',
                        overflowX: 'auto',
                    });
                }
            } }));
    }
    exports.maxSize = maxSize;
});
//# sourceMappingURL=maxSize.js.map
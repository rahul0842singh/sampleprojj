{"version":3,"mappings":"AAGA,OAAM,SAAUA,mBAAmB,CACjCC,OAAmE,EACnEC,KAAc;EAEd,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/B,OAAOA,OAAO;;EAGhB,MAAM;IAAEE,KAAK;IAAEC,GAAG;IAAE,GAAGC;EAAe,CAAE,GAAGJ,OAAO;EAElD,MAAMK,aAAa,GAAwBD,eAAe;EAE1D,MAAME,IAAI,GAAGL,KAAK,GAAG,KAAK,GAAG,OAAO;EACpC,MAAMM,KAAK,GAAGN,KAAK,GAAG,OAAO,GAAG,KAAK;EAErC;EACA;EACA,IAAID,OAAO,CAACM,IAAI,CAAC,EAAE;IACjBD,aAAa,CAACC,IAAI,GAAGN,OAAO,CAACM,IAAI,CAAC;;EAGpC,IAAIN,OAAO,CAACO,KAAK,CAAC,EAAE;IAClBF,aAAa,CAACE,KAAK,GAAGP,OAAO,CAACO,KAAK,CAAC;;EAGtC,OAAOF,aAAa;AACtB","names":["toFloatingUIPadding","padding","isRtl","start","end","verticalPadding","paddingObject","left","right"],"sourceRoot":"../src/","sources":["packages/react-components/react-positioning/src/utils/toFloatingUIPadding.ts"],"sourcesContent":["import type { SideObject } from '@floating-ui/dom';\nimport { PositioningOptions } from '../types';\n\nexport function toFloatingUIPadding(\n  padding: NonNullable<PositioningOptions['overflowBoundaryPadding']>,\n  isRtl: boolean,\n): number | Partial<SideObject> {\n  if (typeof padding === 'number') {\n    return padding;\n  }\n\n  const { start, end, ...verticalPadding } = padding;\n\n  const paddingObject: Partial<SideObject> = verticalPadding;\n\n  const left = isRtl ? 'end' : 'start';\n  const right = isRtl ? 'start' : 'end';\n\n  // assign properties explicitly since undefined values are actually handled by floating UI\n  // TODO create floating UI issue\n  if (padding[left]) {\n    paddingObject.left = padding[left];\n  }\n\n  if (padding[right]) {\n    paddingObject.right = padding[right];\n  }\n\n  return paddingObject;\n}\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAGA,MAAMA,aAAa,gBAAGC,gBAAU;EAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAI9B;AAEF;;;AAGO,MAAMC,qCAAqC,GAAIC,KAA+B,IAAI;EACvFC,6CAA8B,CAACD,KAAK,CAAC;EACrC,MAAME,kBAAkB,GAAGL,aAAa,EAAE;EAE1CG,KAAK,CAACG,IAAI,CAACC,SAAS,GAAGN,oBAAY,CAACE,KAAK,CAACG,IAAI,CAACC,SAAS,EAAEJ,KAAK,CAACK,OAAO,IAAIH,kBAAkB,CAACI,QAAQ,CAAC;AACzG,CAAC;AALYC,6CAAqC","names":["useBaseStyles","react_1","useToolbarToggleButtonStyles_unstable","state","react_button_1","toggleButtonStyles","root","className","checked","selected","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-toolbar/src/components/ToolbarToggleButton/useToolbarToggleButtonStyles.ts"],"sourcesContent":["import { tokens } from '@fluentui/react-theme';\nimport { makeStyles, mergeClasses } from '@griffel/react';\nimport { useToggleButtonStyles_unstable } from '@fluentui/react-button';\nimport { ToolbarToggleButtonState } from './ToolbarToggleButton.types';\n\nconst useBaseStyles = makeStyles({\n  selected: {\n    color: tokens.colorBrandForeground1,\n  },\n});\n\n/**\n * Apply styling to the ToolbarToggleButton slots based on the state\n */\nexport const useToolbarToggleButtonStyles_unstable = (state: ToolbarToggleButtonState) => {\n  useToggleButtonStyles_unstable(state);\n  const toggleButtonStyles = useBaseStyles();\n\n  state.root.className = mergeClasses(state.root.className, state.checked && toggleButtonStyles.selected);\n};\n"]}
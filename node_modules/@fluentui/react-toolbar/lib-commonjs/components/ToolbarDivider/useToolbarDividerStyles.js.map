{"version":3,"mappings":";;;;;;AAAA;AACA;AAGA,MAAMA,aAAa,gBAAGC,gBAAU;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAS9B;AAEF;;;AAGO,MAAMC,gCAAgC,GAAIC,KAA0B,IAAyB;EAClGC,yCAAyB,CAACD,KAAK,CAAC;EAChC,MAAM;IAAEE;EAAQ,CAAE,GAAGF,KAAK;EAC1B,MAAMG,oBAAoB,GAAGN,aAAa,EAAE;EAC5CG,KAAK,CAACI,IAAI,CAACC,SAAS,GAAGP,oBAAY,CACjCE,KAAK,CAACI,IAAI,CAACC,SAAS,EACpBF,oBAAoB,CAACC,IAAI,EACzB,CAACF,QAAQ,IAAIC,oBAAoB,CAACD,QAAQ,CAC3C;EACD,OAAOF,KAAK;AACd,CAAC;AAVYM,wCAAgC","names":["useBaseStyles","react_1","useToolbarDividerStyles_unstable","state","react_divider_1","vertical","toolbarDividerStyles","root","className","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-toolbar/src/components/ToolbarDivider/useToolbarDividerStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useDividerStyles_unstable } from '@fluentui/react-divider';\nimport type { ToolbarDividerState } from './ToolbarDivider.types';\n\nconst useBaseStyles = makeStyles({\n  // Base styles\n  root: {\n    display: 'inline-flex',\n    maxWidth: '1px',\n  },\n  vertical: {\n    maxWidth: 'initial',\n  },\n});\n\n/**\n * Apply styling to the ToolbarDivider slots based on the state\n */\nexport const useToolbarDividerStyles_unstable = (state: ToolbarDividerState): ToolbarDividerState => {\n  useDividerStyles_unstable(state);\n  const { vertical } = state;\n  const toolbarDividerStyles = useBaseStyles();\n  state.root.className = mergeClasses(\n    state.root.className,\n    toolbarDividerStyles.root,\n    !vertical && toolbarDividerStyles.vertical,\n  );\n  return state;\n};\n"]}
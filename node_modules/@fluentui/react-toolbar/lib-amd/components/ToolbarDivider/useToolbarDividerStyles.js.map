{"version":3,"file":"useToolbarDividerStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-toolbar/src/components/ToolbarDivider/useToolbarDividerStyles.ts"],"names":[],"mappings":";;;;IAIA,IAAM,aAAa,GAAG,kBAAU,CAAC;QAC/B,cAAc;QACd,IAAI,EAAE;YACJ,OAAO,EAAE,aAAa;YACtB,QAAQ,EAAE,KAAK;SAChB;QACD,QAAQ,EAAE;YACR,QAAQ,EAAE,SAAS;SACpB;KACF,CAAC,CAAC;IAEH;;OAEG;IACI,IAAM,gCAAgC,GAAG,UAAC,KAA0B;QACzE,yCAAyB,CAAC,KAAK,CAAC,CAAC;QACzB,IAAA,QAAQ,GAAK,KAAK,SAAV,CAAW;QAC3B,IAAM,oBAAoB,GAAG,aAAa,EAAE,CAAC;QAC7C,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAY,CACjC,KAAK,CAAC,IAAI,CAAC,SAAS,EACpB,oBAAoB,CAAC,IAAI,EACzB,CAAC,QAAQ,IAAI,oBAAoB,CAAC,QAAQ,CAC3C,CAAC;QACF,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAVW,QAAA,gCAAgC,oCAU3C","sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useDividerStyles_unstable } from '@fluentui/react-divider';\nimport type { ToolbarDividerState } from './ToolbarDivider.types';\n\nconst useBaseStyles = makeStyles({\n  // Base styles\n  root: {\n    display: 'inline-flex',\n    maxWidth: '1px',\n  },\n  vertical: {\n    maxWidth: 'initial',\n  },\n});\n\n/**\n * Apply styling to the ToolbarDivider slots based on the state\n */\nexport const useToolbarDividerStyles_unstable = (state: ToolbarDividerState): ToolbarDividerState => {\n  useDividerStyles_unstable(state);\n  const { vertical } = state;\n  const toolbarDividerStyles = useBaseStyles();\n  state.root.className = mergeClasses(\n    state.root.className,\n    toolbarDividerStyles.root,\n    !vertical && toolbarDividerStyles.vertical,\n  );\n  return state;\n};\n"]}
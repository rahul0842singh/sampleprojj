define(["require", "exports", "tslib", "@fluentui/react-button", "../Toolbar/ToolbarContext"], function (require, exports, tslib_1, react_button_1, ToolbarContext_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useToolbarToggleButton_unstable = void 0;
    /**
     * Given user props, defines default props for the ToggleButton, calls useButtonState and useChecked, and returns
     * processed state.
     * @param props - User provided props to the ToggleButton component.
     * @param ref - User provided ref to be passed to the ToggleButton component.
     */
    var useToolbarToggleButton_unstable = function (props, ref) {
        var handleToggleButton = ToolbarContext_1.useToolbarContext_unstable(function (ctx) { return ctx.handleToggleButton; });
        var checked = ToolbarContext_1.useToolbarContext_unstable(function (ctx) { var _a; return !!((_a = ctx.checkedValues[props.name]) === null || _a === void 0 ? void 0 : _a.includes(props.value)); });
        var size = ToolbarContext_1.useToolbarContext_unstable(function (ctx) { return ctx.size; });
        var onClickOriginal = props.onClick;
        var toggleButtonState = react_button_1.useToggleButton_unstable(tslib_1.__assign({ size: size, checked: checked }, props), ref);
        var state = tslib_1.__assign(tslib_1.__assign({}, toggleButtonState), { name: props.name, value: props.value });
        var handleOnClick = function (e) {
            if (state.disabled) {
                e.preventDefault();
                e.stopPropagation();
                return;
            }
            handleToggleButton === null || handleToggleButton === void 0 ? void 0 : handleToggleButton(e, state.name, state.value, state.checked);
            onClickOriginal === null || onClickOriginal === void 0 ? void 0 : onClickOriginal(e);
        };
        state.root.onClick = handleOnClick;
        return state;
    };
    exports.useToolbarToggleButton_unstable = useToolbarToggleButton_unstable;
});
//# sourceMappingURL=useToolbarToggleButton.js.map
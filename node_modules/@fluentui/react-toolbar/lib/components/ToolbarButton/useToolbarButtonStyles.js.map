{"version":3,"mappings":"AAAA,mBAAqBA,YAAY,QAAQ,gBAAgB;AACzD,SAASC,wBAAwB,QAAQ,wBAAwB;AAGjE,MAAMC,aAAa,gBAAG;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAOpB;AAEF;;;AAGA,OAAO,MAAMC,+BAA+B,GAAIC,KAAyB,IAAI;EAC3EH,wBAAwB,CAACG,KAAK,CAAC;EAC/B,MAAMC,YAAY,GAAGH,aAAa,EAAE;EAEpCE,KAAK,CAACE,IAAI,CAACC,SAAS,GAAGP,YAAY,CAACI,KAAK,CAACE,IAAI,CAACC,SAAS,EAAEH,KAAK,CAACI,QAAQ,IAAIH,YAAY,CAACG,QAAQ,CAAC;EAClG,IAAIJ,KAAK,CAACK,IAAI,EAAE;IACdL,KAAK,CAACK,IAAI,CAACF,SAAS,GAAGP,YAAY,CAACI,KAAK,CAACK,IAAI,CAACF,SAAS,EAAEH,KAAK,CAACI,QAAQ,IAAIH,YAAY,CAACK,YAAY,CAAC;;AAE1G,CAAC","names":["mergeClasses","useButtonStyles_unstable","useBaseStyles","useToolbarButtonStyles_unstable","state","buttonStyles","root","className","vertical","icon","verticalIcon"],"sourceRoot":"../src/","sources":["packages/react-components/react-toolbar/src/components/ToolbarButton/useToolbarButtonStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nimport { ToolbarButtonState } from './ToolbarButton.types';\n\nconst useBaseStyles = makeStyles({\n  vertical: {\n    flexDirection: 'column',\n  },\n  verticalIcon: {\n    fontSize: '24px',\n  },\n});\n\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */\nexport const useToolbarButtonStyles_unstable = (state: ToolbarButtonState) => {\n  useButtonStyles_unstable(state);\n  const buttonStyles = useBaseStyles();\n\n  state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n  if (state.icon) {\n    state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n  }\n};\n"]}
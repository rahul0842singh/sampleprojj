{"version":3,"mappings":";;;;;;AACA;AACA;AAIA;;;AAGO,MAAMA,cAAc,GAAkCC,KAAK,IAAG;EACnE,MAAMC,KAAK,GAAGC,8CAA0B,CAACF,KAAK,CAAC;EAE/C,OAAOG,oDAA6B,CAACF,KAAK,CAAC;AAC7C,CAAC;AAJYG,sBAAc;AAM3BA,sBAAc,CAACC,WAAW,GAAG,gBAAgB;AAC7C;AACCD,sBAAyC,CAACE,wBAAwB,GAAG,IAAI","names":["PopoverTrigger","props","state","usePopoverTrigger_1","renderPopoverTrigger_1","exports","displayName","isFluentTriggerComponent"],"sourceRoot":"../src/","sources":["packages/react-components/react-popover/src/components/PopoverTrigger/PopoverTrigger.tsx"],"sourcesContent":["import * as React from 'react';\nimport { usePopoverTrigger_unstable } from './usePopoverTrigger';\nimport { renderPopoverTrigger_unstable } from './renderPopoverTrigger';\nimport type { FluentTriggerComponent } from '@fluentui/react-utilities';\nimport type { PopoverTriggerProps } from './PopoverTrigger.types';\n\n/**\n * Wraps a trigger element as an only child and adds the necessary event handling to open a popover.\n */\nexport const PopoverTrigger: React.FC<PopoverTriggerProps> = props => {\n  const state = usePopoverTrigger_unstable(props);\n\n  return renderPopoverTrigger_unstable(state);\n};\n\nPopoverTrigger.displayName = 'PopoverTrigger';\n// type casting here is required to ensure internal type FluentTriggerComponent is not leaked\n(PopoverTrigger as FluentTriggerComponent).isFluentTriggerComponent = true;\n"]}
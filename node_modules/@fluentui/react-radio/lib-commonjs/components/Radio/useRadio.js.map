{"version":3,"mappings":"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","names":["useRadio_unstable","props","ref","nameGroup","RadioGroupContext_1","ctx","name","value","defaultValue","disabledGroup","disabled","layout","requiredGroup","required","checked","undefined","defaultChecked","labelPosition","onChange","nativeProps","react_utilities_1","primarySlotTagName","excludedPropNames","root","defaultProps","react_tabster_1","input","type","id","primary","ev","currentTarget","label","htmlFor","indicator","children","React","react_icons_1","components","react_label_1","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-radio/src/components/Radio/useRadio.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { getPartitionedNativeProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { useRadioGroupContext_unstable } from '../../contexts/RadioGroupContext';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport type { RadioProps, RadioState } from './Radio.types';\n\n/**\n * Create the state required to render Radio.\n *\n * The returned state can be modified with hooks such as useRadioStyles_unstable,\n * before being passed to renderRadio_unstable.\n *\n * @param props - props from this instance of Radio\n * @param ref - reference to `<input>` element of Radio\n */\nexport const useRadio_unstable = (props: RadioProps, ref: React.Ref<HTMLInputElement>): RadioState => {\n  const nameGroup = useRadioGroupContext_unstable(ctx => ctx.name);\n  const value = useRadioGroupContext_unstable(ctx => ctx.value);\n  const defaultValue = useRadioGroupContext_unstable(ctx => ctx.defaultValue);\n  const disabledGroup = useRadioGroupContext_unstable(ctx => ctx.disabled);\n  const layout = useRadioGroupContext_unstable(ctx => ctx.layout);\n  const requiredGroup = useRadioGroupContext_unstable(ctx => ctx.required);\n\n  const {\n    name = nameGroup,\n    checked = value !== undefined ? value === props.value : undefined,\n    defaultChecked = defaultValue !== undefined ? defaultValue === props.value : undefined,\n    labelPosition = layout === 'horizontal-stacked' ? 'below' : 'after',\n    disabled = disabledGroup,\n    required = requiredGroup,\n    onChange,\n  } = props;\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'onChange'],\n  });\n\n  const root = resolveShorthand(props.root, {\n    required: true,\n    defaultProps: {\n      ref: useFocusWithin<HTMLSpanElement>(),\n      ...nativeProps.root,\n    },\n  });\n\n  const input = resolveShorthand(props.input, {\n    required: true,\n    defaultProps: {\n      ref,\n      type: 'radio',\n      id: useId('radio-', nativeProps.primary.id),\n      name,\n      checked,\n      defaultChecked,\n      disabled,\n      required,\n      ...nativeProps.primary,\n    },\n  });\n\n  input.onChange = mergeCallbacks(input.onChange, ev => onChange?.(ev, { value: ev.currentTarget.value }));\n\n  const label = resolveShorthand(props.label, {\n    defaultProps: {\n      htmlFor: input.id,\n      disabled,\n    },\n  });\n\n  const indicator = resolveShorthand(props.indicator, {\n    required: true,\n    defaultProps: {\n      'aria-hidden': true,\n      children: <CircleFilled />,\n    },\n  });\n\n  return {\n    labelPosition,\n    components: {\n      root: 'span',\n      input: 'input',\n      label: Label,\n      indicator: 'div',\n    },\n    root,\n    input,\n    label,\n    indicator,\n  };\n};\n"]}
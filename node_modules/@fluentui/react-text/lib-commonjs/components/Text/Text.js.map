{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAIA;;;AAGaA,YAAI,gBAAmCC,KAAK,CAACC,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAI;EAClF,MAAMC,KAAK,GAAGC,0BAAgB,CAACH,KAAK,EAAEC,GAAG,CAAC;EAE1CG,sCAAsB,CAACF,KAAK,CAAC;EAE7B,OAAOG,gCAAmB,CAACH,KAAK,CAAC;EACjC;AACF,CAAC,CAAmC;;AAEpCL,YAAI,CAACS,WAAW,GAAG,MAAM","names":["exports","React","forwardRef","props","ref","state","useText_1","useTextStyles_1","renderText_1","displayName"],"sourceRoot":"../src/","sources":["packages/react-components/react-text/src/components/Text/Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useText_unstable } from './useText';\nimport { renderText_unstable } from './renderText';\nimport { useTextStyles_unstable } from './useTextStyles';\nimport type { TextProps } from './Text.types';\nimport type { ForwardRefComponent } from '@fluentui/react-utilities';\n\n/**\n * Typography and styling abstraction component used to ensure consistency of text.\n */\nexport const Text: ForwardRefComponent<TextProps> = React.forwardRef((props, ref) => {\n  const state = useText_unstable(props, ref);\n\n  useTextStyles_unstable(state);\n\n  return renderText_unstable(state);\n  // Work around some small mismatches in inferred types which don't matter in practice\n}) as ForwardRefComponent<TextProps>;\n\nText.displayName = 'Text';\n"]}
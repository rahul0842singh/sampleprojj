{"version":3,"mappings":"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","names":["mergeClasses","shorthands","tokens","textClassNames","root","useStyles","useTextStyles_unstable","state","styles","className","wrap","nowrap","truncate","block","italic","underline","strikethrough","strikethroughUnderline","size","base100","base200","base400","base500","base600","hero700","hero800","hero900","hero1000","font","monospace","numeric","weight","weightMedium","weightSemibold","weightBold","align","alignCenter","alignEnd","alignJustify"],"sourceRoot":"../src/","sources":["packages/react-components/react-text/src/components/Text/useTextStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { TextSlots, TextState } from './Text.types';\nimport { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const textClassNames: SlotClassNames<TextSlots> = {\n  root: 'fui-Text',\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: tokens.fontFamilyBase,\n    fontSize: tokens.fontSizeBase300,\n    lineHeight: tokens.lineHeightBase300,\n    fontWeight: tokens.fontWeightRegular,\n    textAlign: 'start',\n    display: 'inline',\n    whiteSpace: 'normal',\n    ...shorthands.overflow('visible'),\n    textOverflow: 'clip',\n  },\n  nowrap: {\n    whiteSpace: 'nowrap',\n    ...shorthands.overflow('hidden'),\n  },\n  truncate: {\n    textOverflow: 'ellipsis',\n  },\n  block: {\n    display: 'block',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n  underline: {\n    textDecorationLine: 'underline',\n  },\n  strikethrough: {\n    textDecorationLine: 'line-through',\n  },\n  strikethroughUnderline: {\n    textDecorationLine: 'line-through underline',\n  },\n  base100: {\n    fontSize: tokens.fontSizeBase100,\n    lineHeight: tokens.lineHeightBase100,\n  },\n  base200: {\n    fontSize: tokens.fontSizeBase200,\n    lineHeight: tokens.lineHeightBase200,\n  },\n  base400: {\n    fontSize: tokens.fontSizeBase400,\n    lineHeight: tokens.lineHeightBase400,\n  },\n  base500: {\n    fontSize: tokens.fontSizeBase500,\n    lineHeight: tokens.lineHeightBase500,\n  },\n  base600: {\n    fontSize: tokens.fontSizeBase600,\n    lineHeight: tokens.lineHeightBase600,\n  },\n  hero700: {\n    fontSize: tokens.fontSizeHero700,\n    lineHeight: tokens.lineHeightHero700,\n  },\n  hero800: {\n    fontSize: tokens.fontSizeHero800,\n    lineHeight: tokens.lineHeightHero800,\n  },\n  hero900: {\n    fontSize: tokens.fontSizeHero900,\n    lineHeight: tokens.lineHeightHero900,\n  },\n  hero1000: {\n    fontSize: tokens.fontSizeHero1000,\n    lineHeight: tokens.lineHeightHero1000,\n  },\n  monospace: {\n    fontFamily: tokens.fontFamilyMonospace,\n  },\n  numeric: {\n    fontFamily: tokens.fontFamilyNumeric,\n  },\n  weightMedium: {\n    fontWeight: tokens.fontWeightMedium,\n  },\n  weightSemibold: {\n    fontWeight: tokens.fontWeightSemibold,\n  },\n  weightBold: {\n    fontWeight: tokens.fontWeightBold,\n  },\n  alignCenter: {\n    textAlign: 'center',\n  },\n  alignEnd: {\n    textAlign: 'end',\n  },\n  alignJustify: {\n    textAlign: 'justify',\n  },\n});\n\n/**\n * Apply styling to the Text slots based on the state\n */\nexport const useTextStyles_unstable = (state: TextState): TextState => {\n  const styles = useStyles();\n\n  state.root.className = mergeClasses(\n    textClassNames.root,\n    styles.root,\n    state.wrap === false && styles.nowrap,\n    state.truncate && styles.truncate,\n    state.block && styles.block,\n    state.italic && styles.italic,\n    state.underline && styles.underline,\n    state.strikethrough && styles.strikethrough,\n    state.underline && state.strikethrough && styles.strikethroughUnderline,\n    state.size === 100 && styles.base100,\n    state.size === 200 && styles.base200,\n    state.size === 400 && styles.base400,\n    state.size === 500 && styles.base500,\n    state.size === 600 && styles.base600,\n    state.size === 700 && styles.hero700,\n    state.size === 800 && styles.hero800,\n    state.size === 900 && styles.hero900,\n    state.size === 1000 && styles.hero1000,\n    state.font === 'monospace' && styles.monospace,\n    state.font === 'numeric' && styles.numeric,\n    state.weight === 'medium' && styles.weightMedium,\n    state.weight === 'semibold' && styles.weightSemibold,\n    state.weight === 'bold' && styles.weightBold,\n    state.align === 'center' && styles.alignCenter,\n    state.align === 'end' && styles.alignEnd,\n    state.align === 'justify' && styles.alignJustify,\n    state.root.className,\n  );\n\n  return state;\n};\n"]}
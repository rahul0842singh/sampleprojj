{"version":3,"mappings":"AAEA,SAASA,qBAAqB,QAAQ,2BAA2B;AACjE,SAASC,2BAA2B,QAAQ,gCAAgC;AAC5E,SAASC,eAAe,QAAQ,6BAA6B;AAE7D;;;;;;;;;AASA,OAAO,MAAMC,wBAAwB,GAAG,CAACC,KAAwB,EAAEC,GAA2B,KAAuB;EACnH,MAAM;IAAEC;EAAQ,CAAE,GAAGJ,eAAe,EAAE;EACtC,MAAMK,OAAO,GAAGN,2BAA2B,CAACO,GAAG,IAAIA,GAAG,CAACD,OAAO,CAAC;EAC/D,MAAME,IAAI,GAAGR,2BAA2B,CAACO,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;EAC9D,MAAMC,IAAI,GAAGJ,QAAQ,GAAGG,IAAI,CAACF,OAAO,EAAE,CAAC,GAAGA,OAAO,EAAE;EAEnD,MAAMI,SAAS,GAAGX,qBAAqB,CAAC;IAAE,GAAGI,KAAK;IAAEQ,QAAQ,EAAE,IAAI;IAAEC,EAAE,EAAE;EAAK,CAAE,EAAER,GAAG,CAAC;EACrF,OAAO;IACL,GAAGM,SAAS;IACZD,IAAI;IACJI,SAAS,EAAEV,KAAK,CAACQ;GAClB;AACH,CAAC","names":["useTableBody_unstable","useDataGridContext_unstable","useTableContext","useDataGridBody_unstable","props","ref","sortable","getRows","ctx","sort","rows","baseState","children","as","renderRow"],"sourceRoot":"../src/","sources":["packages/react-components/react-table/src/components/DataGridBody/useDataGridBody.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { DataGridBodyProps, DataGridBodyState } from './DataGridBody.types';\nimport { useTableBody_unstable } from '../TableBody/useTableBody';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render DataGridBody.\n *\n * The returned state can be modified with hooks such as useDataGridBodyStyles_unstable,\n * before being passed to renderDataGridBody_unstable.\n *\n * @param props - props from this instance of DataGridBody\n * @param ref - reference to root HTMLElement of DataGridBody\n */\nexport const useDataGridBody_unstable = (props: DataGridBodyProps, ref: React.Ref<HTMLElement>): DataGridBodyState => {\n  const { sortable } = useTableContext();\n  const getRows = useDataGridContext_unstable(ctx => ctx.getRows);\n  const sort = useDataGridContext_unstable(ctx => ctx.sort.sort);\n  const rows = sortable ? sort(getRows()) : getRows();\n\n  const baseState = useTableBody_unstable({ ...props, children: null, as: 'div' }, ref);\n  return {\n    ...baseState,\n    rows,\n    renderRow: props.children,\n  };\n};\n"]}
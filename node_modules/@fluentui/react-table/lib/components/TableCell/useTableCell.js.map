{"version":3,"mappings":"AACA,SAASA,qBAAqB,QAAQ,2BAA2B;AAEjE,SAASC,eAAe,QAAQ,6BAA6B;AAE7D;;;;;;;;;AASA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,KAAqB,EAAEC,GAA2B,KAAoB;;EAC1G,MAAM;IAAEC,gBAAgB;IAAEC;EAAI,CAAE,GAAGL,eAAe,EAAE;EAEpD,MAAMM,aAAa,GAAG,YAAK,CAACC,EAAE,mCAAIH,gBAAgB,IAAG,KAAK,GAAG,IAAI;EAEjE,OAAO;IACLI,UAAU,EAAE;MACVC,IAAI,EAAEH;KACP;IACDG,IAAI,EAAEV,qBAAqB,CAACO,aAAa,EAAE;MACzCH,GAAG;MACHO,IAAI,EAAEJ,aAAa,KAAK,KAAK,GAAG,MAAM,GAAGK,SAAS;MAClD,GAAGT;KACJ,CAAC;IACFE,gBAAgB;IAChBC;GACD;AACH,CAAC","names":["getNativeElementProps","useTableContext","useTableCell_unstable","props","ref","noNativeElements","size","rootComponent","as","components","root","role","undefined"],"sourceRoot":"../src/","sources":["packages/react-components/react-table/src/components/TableCell/useTableCell.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { TableCellProps, TableCellState } from './TableCell.types';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableCell.\n *\n * The returned state can be modified with hooks such as useTableCellStyles_unstable,\n * before being passed to renderTableCell_unstable.\n *\n * @param props - props from this instance of TableCell\n * @param ref - reference to root HTMLElement of TableCell\n */\nexport const useTableCell_unstable = (props: TableCellProps, ref: React.Ref<HTMLElement>): TableCellState => {\n  const { noNativeElements, size } = useTableContext();\n\n  const rootComponent = props.as ?? noNativeElements ? 'div' : 'td';\n\n  return {\n    components: {\n      root: rootComponent,\n    },\n    root: getNativeElementProps(rootComponent, {\n      ref,\n      role: rootComponent === 'div' ? 'cell' : undefined,\n      ...props,\n    }),\n    noNativeElements,\n    size,\n  };\n};\n"]}
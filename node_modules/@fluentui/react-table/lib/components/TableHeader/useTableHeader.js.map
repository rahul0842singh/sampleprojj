{"version":3,"mappings":"AACA,SAASA,qBAAqB,QAAQ,2BAA2B;AAEjE,SAASC,eAAe,QAAQ,6BAA6B;AAE7D;;;;;;;;;AASA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAuB,EAAEC,GAA2B,KAAsB;;EAChH,MAAM;IAAEC;EAAgB,CAAE,GAAGJ,eAAe,EAAE;EAE9C,MAAMK,aAAa,GAAG,YAAK,CAACC,EAAE,mCAAIF,gBAAgB,IAAG,KAAK,GAAG,OAAO;EACpE,OAAO;IACLG,UAAU,EAAE;MACVC,IAAI,EAAEH;KACP;IACDG,IAAI,EAAET,qBAAqB,CAACM,aAAa,EAAE;MACzCF,GAAG;MACHM,IAAI,EAAEJ,aAAa,KAAK,KAAK,GAAG,UAAU,GAAGK,SAAS;MACtD,GAAGR;KACJ,CAAC;IACFE;GACD;AACH,CAAC","names":["getNativeElementProps","useTableContext","useTableHeader_unstable","props","ref","noNativeElements","rootComponent","as","components","root","role","undefined"],"sourceRoot":"../src/","sources":["packages/react-components/react-table/src/components/TableHeader/useTableHeader.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { TableHeaderProps, TableHeaderState } from './TableHeader.types';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableHeader.\n *\n * The returned state can be modified with hooks such as useTableHeaderStyles_unstable,\n * before being passed to renderTableHeader_unstable.\n *\n * @param props - props from this instance of TableHeader\n * @param ref - reference to root HTMLElement of TableHeader\n */\nexport const useTableHeader_unstable = (props: TableHeaderProps, ref: React.Ref<HTMLElement>): TableHeaderState => {\n  const { noNativeElements } = useTableContext();\n\n  const rootComponent = props.as ?? noNativeElements ? 'div' : 'thead';\n  return {\n    components: {\n      root: rootComponent,\n    },\n    root: getNativeElementProps(rootComponent, {\n      ref,\n      role: rootComponent === 'div' ? 'rowgroup' : undefined,\n      ...props,\n    }),\n    noNativeElements,\n  };\n};\n"]}
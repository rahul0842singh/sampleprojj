{"version":3,"file":"useTableSelectionCell.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-table/src/components/TableSelectionCell/useTableSelectionCell.tsx"],"names":[],"mappings":";;;;IAQA;;;;;;;;OAQG;IACI,IAAM,8BAA8B,GAAG,UAC5C,KAA8B,EAC9B,GAA2B;QAE3B,IAAM,cAAc,GAAG,oCAAqB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACjD,IAAA,gBAAgB,GAAK,8BAAe,EAAE,iBAAtB,CAAuB;QACvC,IAAA,KAAuE,KAAK,KAA3D,EAAjB,IAAI,mBAAG,UAAU,KAAA,EAAE,KAAoD,KAAK,QAA1C,EAAf,OAAO,mBAAG,KAAK,KAAA,EAAE,KAAmC,KAAK,OAA1B,EAAd,MAAM,mBAAG,KAAK,KAAA,EAAE,KAAmB,KAAK,OAAV,EAAd,MAAM,mBAAG,KAAK,KAAA,CAAW;QAErF,6CACK,cAAc,KACjB,UAAU,wCACL,cAAc,CAAC,UAAU,KAC5B,iBAAiB,EAAE,yBAAQ,EAC3B,cAAc,EAAE,mBAAK,KAEvB,iBAAiB,EAAE,kCAAgB,CAAC,KAAK,CAAC,iBAAiB,EAAE;gBAC3D,QAAQ,EAAE,IAAI,KAAK,UAAU;gBAC7B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE;aACzC,CAAC,EACF,cAAc,EAAE,kCAAgB,CAAC,KAAK,CAAC,cAAc,EAAE;gBACrD,QAAQ,EAAE,IAAI,KAAK,OAAO;gBAC1B,YAAY,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,uBAAK,CAAC,uBAAuB,CAAC,EAAE,EAAE;aACtF,CAAC,EACF,IAAI,MAAA,EACJ,OAAO,SAAA,EACP,gBAAgB,kBAAA,EAChB,MAAM,QAAA,EACN,MAAM,QAAA,IACN;IACJ,CAAC,CAAC;IA7BW,QAAA,8BAA8B,kCA6BzC","sourcesContent":["import * as React from 'react';\nimport { resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport type { TableSelectionCellProps, TableSelectionCellState } from './TableSelectionCell.types';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableSelectionCell.\n *\n * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,\n * before being passed to renderTableSelectionCell_unstable.\n *\n * @param props - props from this instance of TableSelectionCell\n * @param ref - reference to root HTMLElement of TableSelectionCell\n */\nexport const useTableSelectionCell_unstable = (\n  props: TableSelectionCellProps,\n  ref: React.Ref<HTMLElement>,\n): TableSelectionCellState => {\n  const tableCellState = useTableCell_unstable(props, ref);\n  const { noNativeElements } = useTableContext();\n  const { type = 'checkbox', checked = false, subtle = false, hidden = false } = props;\n\n  return {\n    ...tableCellState,\n    components: {\n      ...tableCellState.components,\n      checkboxIndicator: Checkbox,\n      radioIndicator: Radio,\n    },\n    checkboxIndicator: resolveShorthand(props.checkboxIndicator, {\n      required: type === 'checkbox',\n      defaultProps: { checked: props.checked },\n    }),\n    radioIndicator: resolveShorthand(props.radioIndicator, {\n      required: type === 'radio',\n      defaultProps: { checked: !!checked, input: { name: useId('table-selection-radio') } },\n    }),\n    type,\n    checked,\n    noNativeElements,\n    subtle,\n    hidden,\n  };\n};\n"]}
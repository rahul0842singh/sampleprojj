{"version":3,"file":"useDataGrid.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-table/src/components/DataGrid/useDataGrid.ts"],"names":[],"mappings":";;;;IAQA;;;;;;;;OAQG;IACI,IAAM,oBAAoB,GAAG,UAAC,KAAoB,EAAE,GAA2B;QAElF,IAAA,KAAK,GAgBH,KAAK,MAhBF,EACL,OAAO,GAeL,KAAK,QAfA,EACP,KAcE,KAAK,UAdW,EAAlB,SAAS,mBAAG,MAAM,KAAA,EAClB,aAAa,GAaX,KAAK,cAbM,EACb,YAAY,GAYV,KAAK,aAZK,EACZ,iBAAiB,GAWf,KAAK,kBAXU,EACjB,gBAAgB,GAUd,KAAK,iBAVS,EAChB,SAAS,GASP,KAAK,UATE,EACT,aAAa,GAQX,KAAK,cARM,EACb,oBAAoB,GAOlB,KAAK,qBAPa,EACpB,KAME,KAAK,gBANgB,EAAvB,eAAe,mBAAG,KAAK,KAAA,EACvB,KAKE,KAAK,oBALsB,EAA7B,mBAAmB,mBAAG,OAAO,KAAA,EAC7B,QAAQ,GAIN,KAAK,SAJC,EACR,gBAAgB,GAGd,KAAK,iBAHS,EAChB,mBAAmB,GAEjB,KAAK,oBAFY,EACnB,cAAc,GACZ,KAAK,eADO,CACN;QAEV,IAAM,SAAS,GAAG,SAAS,KAAK,MAAM,CAAC;QACvC,IAAM,eAAe,GAAG,uCAAuB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAElE,IAAM,UAAU,GAAG,wBAAgB,CAAC,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,EAAE;YAChE,oBAAY,CAAC;gBACX,gBAAgB,kBAAA;gBAChB,SAAS,WAAA;gBACT,YAAY,cAAA;aACb,CAAC;YACF,yBAAiB,CAAC;gBAChB,oBAAoB,sBAAA;gBACpB,aAAa,eAAA;gBACb,iBAAiB,mBAAA;gBACjB,aAAa,EAAE,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,aAAa;aAC9C,CAAC;YACF,qCAA6B,CAAC;gBAC5B,cAAc,gBAAA;gBACd,mBAAmB,qBAAA;gBACnB,4FAA4F;gBAC5F,wEAAwE;gBACxE,oBAAoB,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,+BAAU,CAAC,CAAC,CAAC,CAAC;aACtD,CAAC;SACH,CAAC,CAAC;QAEH,IAAM,cAAc,GAAG,4BAAiB,qCAEpC,IAAI,EAAE,MAAM,EACZ,EAAE,EAAE,KAAK,EACT,gBAAgB,EAAE,IAAI,IACnB,CAAC,SAAS,IAAI,eAAe,CAAC,GAC9B,KAAK,GAEV,+BAAa,CAAC,GAAG,EAAE,UAAU,CAAC,QAAQ,CAAC,CACxC,CAAC;QAEF,6CACK,cAAc,KACjB,SAAS,WAAA,EACT,UAAU,YAAA,EACV,cAAc,EAAE,CAAC,CAAC,aAAa,EAC/B,eAAe,iBAAA,EACf,mBAAmB,qBAAA,EACnB,gBAAgB,kBAAA,IAChB;IACJ,CAAC,CAAC;IAhEW,QAAA,oBAAoB,wBAgE/B","sourcesContent":["import * as React from 'react';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport type { DataGridProps, DataGridState } from './DataGrid.types';\nimport { useTable_unstable } from '../Table/useTable';\nimport { useTableFeatures, useTableSort, useTableSelection, useTableColumnSizing_unstable } from '../../hooks';\nimport { CELL_WIDTH } from '../TableSelectionCell';\nimport { useMergedRefs } from '@fluentui/react-utilities';\n\n/**\n * Create the state required to render DataGrid.\n *\n * The returned state can be modified with hooks such as useDataGridStyles_unstable,\n * before being passed to renderDataGrid_unstable.\n *\n * @param props - props from this instance of DataGrid\n * @param ref - reference to root HTMLElement of DataGrid\n */\nexport const useDataGrid_unstable = (props: DataGridProps, ref: React.Ref<HTMLElement>): DataGridState => {\n  const {\n    items,\n    columns,\n    focusMode = 'cell',\n    selectionMode,\n    onSortChange,\n    onSelectionChange,\n    defaultSortState,\n    sortState,\n    selectedItems,\n    defaultSelectedItems,\n    subtleSelection = false,\n    selectionAppearance = 'brand',\n    getRowId,\n    resizableColumns,\n    columnSizingOptions,\n    onColumnResize,\n  } = props;\n\n  const navigable = focusMode !== 'none';\n  const keyboardNavAttr = useArrowNavigationGroup({ axis: 'grid' });\n\n  const tableState = useTableFeatures({ items, columns, getRowId }, [\n    useTableSort({\n      defaultSortState,\n      sortState,\n      onSortChange,\n    }),\n    useTableSelection({\n      defaultSelectedItems,\n      selectedItems,\n      onSelectionChange,\n      selectionMode: selectionMode ?? 'multiselect',\n    }),\n    useTableColumnSizing_unstable({\n      onColumnResize,\n      columnSizingOptions,\n      // The selection cell is not part of the columns, therefore its width needs to be subtracted\n      // from the container to make sure the columns don't overflow the table.\n      containerWidthOffset: selectionMode ? -CELL_WIDTH : 0,\n    }),\n  ]);\n\n  const baseTableState = useTable_unstable(\n    {\n      role: 'grid',\n      as: 'div',\n      noNativeElements: true,\n      ...(navigable && keyboardNavAttr),\n      ...props,\n    },\n    useMergedRefs(ref, tableState.tableRef),\n  );\n\n  return {\n    ...baseTableState,\n    focusMode,\n    tableState,\n    selectableRows: !!selectionMode,\n    subtleSelection,\n    selectionAppearance,\n    resizableColumns,\n  };\n};\n"]}
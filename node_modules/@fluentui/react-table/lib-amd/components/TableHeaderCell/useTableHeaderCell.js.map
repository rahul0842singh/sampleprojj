{"version":3,"file":"useTableHeaderCell.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-table/src/components/TableHeaderCell/useTableHeaderCell.tsx"],"names":[],"mappings":";;;;IAQA,IAAM,SAAS,GAAG;QAChB,SAAS,EAAE,oBAAC,4BAAc,IAAC,QAAQ,EAAE,EAAE,GAAI;QAC3C,UAAU,EAAE,oBAAC,8BAAgB,IAAC,QAAQ,EAAE,EAAE,GAAI;KAC/C,CAAC;IAEF;;;;;;;;OAQG;IACI,IAAM,2BAA2B,GAAG,UACzC,KAA2B,EAC3B,GAA2B;;QAErB,IAAA,KAAiC,8BAAe,EAAE,EAAhD,gBAAgB,sBAAA,EAAE,QAAQ,cAAsB,CAAC;QAEzD,IAAM,aAAa,GAAG,CAAA,MAAA,KAAK,CAAC,EAAE,mCAAI,gBAAgB,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAClE,OAAO;YACL,UAAU,EAAE;gBACV,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,QAAQ;gBAChB,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,MAAM;aACd;YACD,IAAI,EAAE,uCAAqB,CAAC,aAAa,qBACvC,GAAG,EAAE,+BAAa,CAAC,GAAG,EAAE,8BAAc,EAAE,CAAC,EACzC,IAAI,EAAE,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,EAC1D,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAA,KAAK,CAAC,aAAa,mCAAI,MAAM,CAAC,CAAC,CAAC,SAAS,IAC9D,KAAK,EACR;YACF,KAAK,EAAE,kCAAgB,CAAC,KAAK,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,kCAAgB,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACzC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa;gBAC/B,YAAY,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;aAC7F,CAAC;YACF,MAAM,EAAE,mCAAsB,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC3C,QAAQ,EAAE,IAAI;gBACd,YAAY,qBACV,IAAI,EAAE,cAAc,EACpB,QAAQ,EAAE,CAAC,CAAC,EACZ,IAAI,EAAE,QAAQ,IACX,CAAC,QAAQ,IAAI;oBACd,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,SAAS;iBACpB,CAAC,CACH;aACF,CAAC;YACF,QAAQ,UAAA;YACR,gBAAgB,kBAAA;SACjB,CAAC;IACJ,CAAC,CAAC;IAxCW,QAAA,2BAA2B,+BAwCtC","sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useMergedRefs } from '@fluentui/react-utilities';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport { ArrowUpRegular, ArrowDownRegular } from '@fluentui/react-icons';\nimport type { TableHeaderCellProps, TableHeaderCellState } from './TableHeaderCell.types';\nimport { useTableContext } from '../../contexts/tableContext';\nimport { useARIAButtonShorthand } from '@fluentui/react-aria';\n\nconst sortIcons = {\n  ascending: <ArrowUpRegular fontSize={12} />,\n  descending: <ArrowDownRegular fontSize={12} />,\n};\n\n/**\n * Create the state required to render TableHeaderCell.\n *\n * The returned state can be modified with hooks such as useTableHeaderCellStyles_unstable,\n * before being passed to renderTableHeaderCell_unstable.\n *\n * @param props - props from this instance of TableHeaderCell\n * @param ref - reference to root HTMLElement of TableHeaderCell\n */\nexport const useTableHeaderCell_unstable = (\n  props: TableHeaderCellProps,\n  ref: React.Ref<HTMLElement>,\n): TableHeaderCellState => {\n  const { noNativeElements, sortable } = useTableContext();\n\n  const rootComponent = props.as ?? noNativeElements ? 'div' : 'th';\n  return {\n    components: {\n      root: rootComponent,\n      button: 'button',\n      sortIcon: 'span',\n      aside: 'span',\n    },\n    root: getNativeElementProps(rootComponent, {\n      ref: useMergedRefs(ref, useFocusWithin()),\n      role: rootComponent === 'div' ? 'columnheader' : undefined,\n      'aria-sort': sortable ? props.sortDirection ?? 'none' : undefined,\n      ...props,\n    }),\n    aside: resolveShorthand(props.aside),\n    sortIcon: resolveShorthand(props.sortIcon, {\n      required: !!props.sortDirection,\n      defaultProps: { children: props.sortDirection ? sortIcons[props.sortDirection] : undefined },\n    }),\n    button: useARIAButtonShorthand(props.button, {\n      required: true,\n      defaultProps: {\n        role: 'presentation',\n        tabIndex: -1,\n        type: 'button',\n        ...(sortable && {\n          role: undefined,\n          tabIndex: undefined,\n        }),\n      },\n    }),\n    sortable,\n    noNativeElements,\n  };\n};\n"]}
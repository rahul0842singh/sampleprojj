define(["require", "exports", "tslib", "@fluentui/react-utilities", "@fluentui/react-tabster", "../../contexts/tableContext", "../../contexts/tableHeaderContext"], function (require, exports, tslib_1, react_utilities_1, react_tabster_1, tableContext_1, tableHeaderContext_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useTableRow_unstable = void 0;
    /**
     * Create the state required to render TableRow.
     *
     * The returned state can be modified with hooks such as useTableRowStyles_unstable,
     * before being passed to renderTableRow_unstable.
     *
     * @param props - props from this instance of TableRow
     * @param ref - reference to root HTMLElement of TableRow
     */
    var useTableRow_unstable = function (props, ref) {
        var _a, _b;
        var _c = tableContext_1.useTableContext(), noNativeElements = _c.noNativeElements, size = _c.size;
        var rootComponent = ((_a = props.as) !== null && _a !== void 0 ? _a : noNativeElements) ? 'div' : 'tr';
        var focusVisibleRef = react_tabster_1.useFocusVisible();
        var focusWithinRef = react_tabster_1.useFocusWithin();
        var isHeaderRow = tableHeaderContext_1.useIsInTableHeader();
        return {
            components: {
                root: rootComponent,
            },
            root: react_utilities_1.getNativeElementProps(rootComponent, tslib_1.__assign({ ref: react_utilities_1.useMergedRefs(ref, focusVisibleRef, focusWithinRef), role: rootComponent === 'div' ? 'row' : undefined }, props)),
            size: size,
            noNativeElements: noNativeElements,
            appearance: (_b = props.appearance) !== null && _b !== void 0 ? _b : 'none',
            isHeaderRow: isHeaderRow,
        };
    };
    exports.useTableRow_unstable = useTableRow_unstable;
});
//# sourceMappingURL=useTableRow.js.map
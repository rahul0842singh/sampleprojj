{"version":3,"file":"useTableResizeHandleStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-table/src/components/TableResizeHandle/useTableResizeHandleStyles.ts"],"names":[],"mappings":";;;;IAKa,QAAA,2BAA2B,GAA2C;QACjF,IAAI,EAAE,uBAAuB;QAC7B,iEAAiE;QACjE,yEAAyE;KAC1E,CAAC;IAEF;;OAEG;IACH,IAAM,SAAS,GAAG,kBAAU,CAAC;QAC3B,IAAI,sCACF,QAAQ,EAAE,UAAU,EACpB,KAAK,EAAE,CAAC,EACR,GAAG,EAAE,CAAC,EACN,MAAM,EAAE,CAAC,EACT,KAAK,EAAE,MAAM,IACV,kBAAU,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,KAC/B,MAAM,EAAE,YAAY,EACpB,OAAO,EAAE,CAAC,EACV,kBAAkB,EAAE,SAAS,EAC7B,kBAAkB,EAAE,KAAK,EACzB,MAAM,EAAE,CAAC,EAET,QAAQ,EAAE;gBACR,OAAO,EAAE,CAAC;aACX,EAED,QAAQ,EAAE;gBACR,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,UAAU;gBACpB,IAAI,EAAE,KAAK;gBACX,GAAG,EAAE,CAAC;gBACN,MAAM,EAAE,CAAC;gBACT,eAAe,EAAE,oBAAM,CAAC,mBAAmB;aAC5C,GACF;KACF,CAAC,CAAC;IAEH;;OAEG;IACI,IAAM,mCAAmC,GAAG,UAAC,KAA6B;QAC/E,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,oBAAY,CAAC,mCAA2B,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzG,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAJW,QAAA,mCAAmC,uCAI9C","sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { TableResizeHandleSlots, TableResizeHandleState } from './TableResizeHandle.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\n\nexport const tableResizeHandleClassNames: SlotClassNames<TableResizeHandleSlots> = {\n  root: 'fui-TableResizeHandle',\n  // TODO: add class names for all slots on TableResizeHandleSlots.\n  // Should be of the form `<slotName>: 'fui-TableResizeHandle__<slotName>`\n};\n\n/**\n * Styles for the root slot\n */\nconst useStyles = makeStyles({\n  root: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    width: '16px',\n    ...shorthands.margin(0, '-8px'),\n    cursor: 'col-resize',\n    opacity: 0,\n    transitionProperty: 'opacity',\n    transitionDuration: '.2s',\n    zIndex: 1,\n\n    ':hover': {\n      opacity: 1,\n    },\n\n    ':after': {\n      content: '\" \"',\n      display: 'block',\n      width: '1px',\n      position: 'absolute',\n      left: '50%',\n      top: 0,\n      bottom: 0,\n      backgroundColor: tokens.colorNeutralStroke1,\n    },\n  },\n});\n\n/**\n * Apply styling to the TableResizeHandle slots based on the state\n */\nexport const useTableResizeHandleStyles_unstable = (state: TableResizeHandleState): TableResizeHandleState => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(tableResizeHandleClassNames.root, styles.root, state.root.className);\n  return state;\n};\n"]}
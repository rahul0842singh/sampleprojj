{"version":3,"file":"selectionManager.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-table/src/hooks/selectionManager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { SelectionMode } from './types';\n\ntype OnSelectionChangeCallback = (e: React.SyntheticEvent, selectedItems: Set<SelectionItemId>) => void;\n\nexport interface SelectionManager {\n  toggleItem(e: React.SyntheticEvent, id: SelectionItemId, selectedItems: Set<SelectionItemId>): void;\n  selectItem(e: React.SyntheticEvent, id: SelectionItemId, selectedItems: Set<SelectionItemId>): void;\n  deselectItem(e: React.SyntheticEvent, id: SelectionItemId, selectedItems: Set<SelectionItemId>): void;\n  clearItems(e: React.SyntheticEvent): void;\n  isSelected(id: SelectionItemId, selectedItems: Set<SelectionItemId>): boolean;\n  toggleAllItems(e: React.SyntheticEvent, itemIds: SelectionItemId[], selectedItems: Set<SelectionItemId>): void;\n}\n\nexport type SelectionItemId = string | number;\n\nexport function createSelectionManager(\n  mode: SelectionMode,\n  onSelectionChange: OnSelectionChangeCallback = () => undefined,\n): SelectionManager {\n  const managerFactory = mode === 'multiselect' ? createMultipleSelectionManager : createSingleSelectionManager;\n\n  return managerFactory(onSelectionChange);\n}\n\nfunction createMultipleSelectionManager(onSelectionChange: OnSelectionChangeCallback): SelectionManager {\n  const toggleAllItems: SelectionManager['toggleAllItems'] = (e, itemIds, selectedItems) => {\n    const allItemsSelected = itemIds.every(itemId => selectedItems.has(itemId));\n\n    if (allItemsSelected) {\n      selectedItems.clear();\n    } else {\n      itemIds.forEach(itemId => selectedItems.add(itemId));\n    }\n\n    onSelectionChange(e, new Set(selectedItems));\n  };\n\n  const toggleItem: SelectionManager['toggleItem'] = (e, itemId, selectedItems) => {\n    if (selectedItems.has(itemId)) {\n      selectedItems.delete(itemId);\n    } else {\n      selectedItems.add(itemId);\n    }\n\n    onSelectionChange(e, new Set(selectedItems));\n  };\n\n  const selectItem: SelectionManager['selectItem'] = (e, itemId, selectedItems) => {\n    selectedItems.add(itemId);\n    onSelectionChange(e, new Set(selectedItems));\n  };\n\n  const deselectItem: SelectionManager['deselectItem'] = (e, itemId, selectedItems) => {\n    selectedItems.delete(itemId);\n    onSelectionChange(e, new Set(selectedItems));\n  };\n\n  const clearItems: SelectionManager['clearItems'] = e => {\n    onSelectionChange(e, new Set());\n  };\n\n  const isSelected = (itemId: SelectionItemId, selectedItems: Set<SelectionItemId>) => {\n    return selectedItems.has(itemId);\n  };\n\n  return {\n    toggleItem,\n    selectItem,\n    deselectItem,\n    clearItems,\n    isSelected,\n    toggleAllItems,\n  };\n}\n\nfunction createSingleSelectionManager(onSelectionChange: OnSelectionChangeCallback): SelectionManager {\n  const toggleItem: SelectionManager['toggleItem'] = (e, itemId) => {\n    onSelectionChange(e, new Set([itemId]));\n  };\n\n  const clearItems: SelectionManager['clearItems'] = e => {\n    onSelectionChange(e, new Set<SelectionItemId>());\n  };\n\n  const isSelected = (itemId: SelectionItemId, selectedItems: Set<SelectionItemId>) => {\n    return selectedItems.has(itemId);\n  };\n\n  const selectItem: SelectionManager['selectItem'] = (e, itemId) => {\n    onSelectionChange(e, new Set([itemId]));\n  };\n\n  return {\n    deselectItem: clearItems,\n    selectItem,\n    toggleAllItems: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('[react-table]: `toggleAllItems` should not be used in single selection mode');\n      }\n\n      return undefined;\n    },\n    toggleItem,\n    clearItems,\n    isSelected,\n  };\n}\n"]}
{"version":3,"mappings":";;;;;;AAAA;AASA;AACA;AACA;AAEA,MAAMA,kBAAkB,GAAgDC,GAAG,IAAIA,GAAG;AAErEC,yBAAiB,GAAgC;EAC5DC,SAAS,EAAEC,8CAA0B;EACrCC,IAAI,EAAEC,oCAAqB;EAC3BC,OAAO,EAAE,MAAM,EAAE;EACjBC,QAAQ,EAAE,MAAM,EAAE;EAClBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACX;EACAC,qBAAqB,EAAEC,+CAAwB;EAC/CC,QAAQ,eAAEC,KAAK,CAACC,SAAS;CAC1B;AAED,SAAgBC,gBAAgB,CAC9BC,OAAuC,EACvCC,UAAgC,EAAE;EAElC,MAAM;IAAET,KAAK;IAAED,QAAQ;IAAEE;EAAO,CAAE,GAAGO,OAAO;EAE5C,MAAMV,OAAO,GAAG,CACdY,cAAcnB,kBAAmD,KAC9DS,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAI;IAAA;IAAC,kBAAW,CAAC;MAAED,IAAI;MAAEE,KAAK,EAAE,cAAQ,aAARf,QAAQ,uBAARA,QAAQ,CAAGa,IAAI,CAAC,mCAAIC;IAAC,CAAE,CAAC;EAAA,EAAC;EAEhF,MAAME,YAAY,GAA8B;IAC9ChB,QAAQ;IACRC,KAAK;IACLC,OAAO;IACPH,OAAO;IACPJ,SAAS,EAAEC,8CAA0B;IACrCC,IAAI,EAAEC,oCAA8C;IACpD;IACAK,qBAAqB,EAAEC,+CAAwB;IAC/CC,QAAQ,EAAEC,KAAK,CAACC,SAAS;GAC1B;EAED,OAAOG,OAAO,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACD,KAAK,CAAC,EAAEF,YAAY,CAAC;AACvE;AAvBAtB","names":["defaultRowEnhancer","row","exports","selection","useTableSelection_1","sort","useTableSort_1","getRows","getRowId","items","columns","columnSizing_unstable","useTableColumnSizing_1","tableRef","React","createRef","useTableFeatures","options","plugins","rowEnhancer","map","item","i","rowId","initialState","reduce","state","plugin"],"sourceRoot":"../src/","sources":["packages/react-components/react-table/src/hooks/useTableFeatures.ts"],"sourcesContent":["import * as React from 'react';\nimport type {\n  UseTableFeaturesOptions,\n  TableFeaturesState,\n  TableRowData,\n  RowEnhancer,\n  TableFeaturePlugin,\n  TableSortState,\n} from './types';\nimport { defaultTableSelectionState } from './useTableSelection';\nimport { defaultTableSortState } from './useTableSort';\nimport { defaultColumnSizingState } from './useTableColumnSizing';\n\nconst defaultRowEnhancer: RowEnhancer<unknown, TableRowData<unknown>> = row => row;\n\nexport const defaultTableState: TableFeaturesState<unknown> = {\n  selection: defaultTableSelectionState,\n  sort: defaultTableSortState,\n  getRows: () => [],\n  getRowId: () => '',\n  items: [],\n  columns: [],\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  columnSizing_unstable: defaultColumnSizingState,\n  tableRef: React.createRef<HTMLDivElement>(),\n};\n\nexport function useTableFeatures<TItem>(\n  options: UseTableFeaturesOptions<TItem>,\n  plugins: TableFeaturePlugin[] = [],\n): TableFeaturesState<TItem> {\n  const { items, getRowId, columns } = options;\n\n  const getRows = <TRowState extends TableRowData<TItem>>(\n    rowEnhancer = defaultRowEnhancer as RowEnhancer<TItem, TRowState>,\n  ) => items.map((item, i) => rowEnhancer({ item, rowId: getRowId?.(item) ?? i }));\n\n  const initialState: TableFeaturesState<TItem> = {\n    getRowId,\n    items,\n    columns,\n    getRows,\n    selection: defaultTableSelectionState,\n    sort: defaultTableSortState as TableSortState<TItem>,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    columnSizing_unstable: defaultColumnSizingState,\n    tableRef: React.createRef(),\n  };\n\n  return plugins.reduce((state, plugin) => plugin(state), initialState);\n}\n"]}
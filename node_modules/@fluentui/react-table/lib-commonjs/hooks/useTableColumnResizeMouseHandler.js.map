{"version":3,"mappings":"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","names":["useTableColumnResizeMouseHandler","columnResizeState","mouseX","React","useRef","currentWidth","colId","undefined","targetDocument","react_shared_contexts_1","globalWin","defaultView","recalculatePosition","useCallback","e","clientX","react_utilities_1","dx","current","setColumnWidth","columnId","width","onDrag","requestAnimationFrame","onDragEnd","event","removeEventListener","getOnMouseDown","getColumnWidth","target","currentTarget","button","addEventListener","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-table/src/hooks/useTableColumnResizeMouseHandler.ts"],"sourcesContent":["import * as React from 'react';\nimport { TableColumnId, ColumnResizeState } from './types';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport {\n  NativeTouchOrMouseEvent,\n  ReactTouchOrMouseEvent,\n  getEventClientCoords,\n  isMouseEvent,\n  isTouchEvent,\n} from '@fluentui/react-utilities';\n\nexport function useTableColumnResizeMouseHandler(columnResizeState: ColumnResizeState) {\n  const mouseX = React.useRef(0);\n  const currentWidth = React.useRef(0);\n  const colId = React.useRef<TableColumnId | undefined>(undefined);\n\n  const { targetDocument } = useFluent();\n  const globalWin = targetDocument?.defaultView;\n\n  const recalculatePosition = React.useCallback(\n    (e: NativeTouchOrMouseEvent) => {\n      const { clientX } = getEventClientCoords(e);\n      const dx = clientX - mouseX.current;\n\n      // Update the local width for the column and set it\n      currentWidth.current += dx;\n      colId.current && columnResizeState.setColumnWidth(e, { columnId: colId.current, width: currentWidth.current });\n      mouseX.current = clientX;\n    },\n    [columnResizeState],\n  );\n\n  const onDrag = React.useCallback(\n    (e: NativeTouchOrMouseEvent) => {\n      // Using requestAnimationFrame here drastically improves resizing experience on slower CPUs\n      if (typeof globalWin?.requestAnimationFrame === 'function') {\n        requestAnimationFrame(() => recalculatePosition(e));\n      } else {\n        recalculatePosition(e);\n      }\n    },\n    [globalWin?.requestAnimationFrame, recalculatePosition],\n  );\n\n  const onDragEnd = React.useCallback(\n    (event: NativeTouchOrMouseEvent) => {\n      if (isMouseEvent(event)) {\n        targetDocument?.removeEventListener('mouseup', onDragEnd);\n        targetDocument?.removeEventListener('mousemove', onDrag);\n      }\n      if (isTouchEvent(event)) {\n        targetDocument?.removeEventListener('touchend', onDragEnd);\n        targetDocument?.removeEventListener('touchmove', onDrag);\n      }\n    },\n    [onDrag, targetDocument],\n  );\n\n  const getOnMouseDown = (columnId: TableColumnId) => (event: ReactTouchOrMouseEvent) => {\n    // Keep the width locally so that we decouple the calculation of the next with from rendering.\n    // This makes the whole experience much faster and more precise\n    currentWidth.current = columnResizeState.getColumnWidth(columnId);\n    mouseX.current = getEventClientCoords(event).clientX;\n    colId.current = columnId;\n\n    if (isMouseEvent(event)) {\n      // ignore other buttons than primary mouse button\n      if (event.target !== event.currentTarget || event.button !== 0) {\n        return;\n      }\n      targetDocument?.addEventListener('mouseup', onDragEnd);\n      targetDocument?.addEventListener('mousemove', onDrag);\n    }\n\n    if (isTouchEvent(event)) {\n      targetDocument?.addEventListener('touchend', onDragEnd);\n      targetDocument?.addEventListener('touchmove', onDrag);\n    }\n  };\n\n  return {\n    getOnMouseDown: (columnId: TableColumnId) => getOnMouseDown(columnId),\n  };\n}\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AAGA;;;AAGO,MAAMA,iCAAiC,GAAIC,KAA8B,IAAI;EAClF,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAE,GAAGC,0BAAQ,CAA0BH,KAAK,CAAC;EAErE,OACEI,oBAACH,KAAK,CAACI,IAAI;IAAA,GAAKH,SAAS,CAACG;EAAI,GAC3BL,KAAK,CAACM,IAAI,KAAK,UAAU,IAAIL,KAAK,CAACM,iBAAiB,IACnDH,oBAACH,KAAK,CAACM,iBAAiB;IAAA,GAAKL,SAAS,CAACK;EAAiB,EACzD,EACAP,KAAK,CAACM,IAAI,KAAK,OAAO,IAAIL,KAAK,CAACO,cAAc,IAAIJ,oBAACH,KAAK,CAACO,cAAc;IAAA,GAAKN,SAAS,CAACM;EAAc,EAAI,CAC9F;AAEjB,CAAC;AAXYC,yCAAiC","names":["renderTableSelectionCell_unstable","state","slots","slotProps","react_utilities_1","React","root","type","checkboxIndicator","radioIndicator","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-table/src/components/TableSelectionCell/renderTableSelectionCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { TableSelectionCellState, TableSelectionCellSlots } from './TableSelectionCell.types';\n\n/**\n * Render the final JSX of TableSelectionCell\n */\nexport const renderTableSelectionCell_unstable = (state: TableSelectionCellState) => {\n  const { slots, slotProps } = getSlots<TableSelectionCellSlots>(state);\n\n  return (\n    <slots.root {...slotProps.root}>\n      {state.type === 'checkbox' && slots.checkboxIndicator && (\n        <slots.checkboxIndicator {...slotProps.checkboxIndicator} />\n      )}\n      {state.type === 'radio' && slots.radioIndicator && <slots.radioIndicator {...slotProps.radioIndicator} />}\n    </slots.root>\n  );\n};\n"]}
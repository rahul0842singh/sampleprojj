{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AAEA;;;;;;;;;AASO,MAAMA,sBAAsB,GAAG,CAACC,KAAsB,EAAEC,GAA2B,KAAqB;EAC7G,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAM,CAAE,GAAGL,KAAK;EAEpD,MAAM;IACJM,mBAAmB,EAAE;MAAEC,WAAW;MAAEC;IAAc;EAAE,CACrD,GAAGC,qCAAuB,EAAE;EAC7B,MAAMC,SAAS,GAAGC,KAAK,CAACC,MAAM,CAAiB,IAAI,CAAC;EAEpD,MAAMC,WAAW,GAAGC,uBAAK,CAACC,0CAAoB,CAACZ,MAAM,EAAEI,WAAW,CAAC;EAEnEI,KAAK,CAACK,SAAS,CAAC,MAAK;IACnB,IAAIb,MAAM,IAAIO,SAAS,CAACO,OAAO,EAAE;MAC/B,MAAM;QAAEC;MAAE,CAAE,GAAGR,SAAS,CAACO,OAAO;MAEhCT,cAAc,CAACU,EAAE,GAAGA,EAAE,GAAGL,WAAW,CAAC;;EAEzC,CAAC,EAAE,CAACV,MAAM,EAAEK,cAAc,EAAEK,WAAW,CAAC,CAAC;EAEzC,OAAO;IACLM,UAAU,EAAE;MACVC,IAAI,EAAE,KAAK;MACXlB,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,KAAK;MAClBC,MAAM,EAAE;KACT;IAEDe,IAAI,EAAEN,uCAAqB,CAAC,KAAK,EAAE;MACjCb,GAAG;MACH,GAAGD;KACJ,CAAC;IACFE,KAAK,EAAEY,kCAAgB,CAACZ,KAAK,CAAC;IAC9BC,MAAM,EAAEW,kCAAgB,CAACX,MAAM,EAAE;MAC/BkB,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;QACZrB,GAAG,EAAES,SAAS;QACdQ,EAAE,EAAEX;;KAEP,CAAC;IACFH,WAAW,EAAEU,kCAAgB,CAACV,WAAW,CAAC;IAC1CC,MAAM,EAAES,kCAAgB,CAACT,MAAM;GAChC;AACH,CAAC;AA1CYkB,8BAAsB","names":["useCardHeader_unstable","props","ref","image","header","description","action","selectableA11yProps","referenceId","setReferenceId","CardContext_1","headerRef","React","useRef","generatedId","react_utilities_1","useCardHeaderStyles_1","useEffect","current","id","components","root","required","defaultProps","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-card/src/components/CardHeader/useCardHeader.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport type { CardHeaderProps, CardHeaderState } from './CardHeader.types';\nimport { useCardContext_unstable } from '../Card/CardContext';\nimport { cardHeaderClassNames } from './useCardHeaderStyles';\n\n/**\n * Create the state required to render CardHeader.\n *\n * The returned state can be modified with hooks such as useCardHeaderStyles_unstable,\n * before being passed to renderCardHeader_unstable.\n *\n * @param props - props from this instance of CardHeader\n * @param ref - reference to root HTMLElement of CardHeader\n */\nexport const useCardHeader_unstable = (props: CardHeaderProps, ref: React.Ref<HTMLElement>): CardHeaderState => {\n  const { image, header, description, action } = props;\n\n  const {\n    selectableA11yProps: { referenceId, setReferenceId },\n  } = useCardContext_unstable();\n  const headerRef = React.useRef<HTMLDivElement>(null);\n\n  const generatedId = useId(cardHeaderClassNames.header, referenceId);\n\n  React.useEffect(() => {\n    if (header && headerRef.current) {\n      const { id } = headerRef.current;\n\n      setReferenceId(id ? id : generatedId);\n    }\n  }, [header, setReferenceId, generatedId]);\n\n  return {\n    components: {\n      root: 'div',\n      image: 'div',\n      header: 'div',\n      description: 'div',\n      action: 'div',\n    },\n\n    root: getNativeElementProps('div', {\n      ref,\n      ...props,\n    }),\n    image: resolveShorthand(image),\n    header: resolveShorthand(header, {\n      required: true,\n      defaultProps: {\n        ref: headerRef,\n        id: referenceId,\n      },\n    }),\n    description: resolveShorthand(description),\n    action: resolveShorthand(action),\n  };\n};\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AAIaA,uBAAe,GAA+B;EACzDC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;CACX;AAED;;;AAGA,MAAMC,SAAS,gBAAGC,gBAAU;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA;EAAA;AAAA,EAsC1B;AAEF;;;AAGO,MAAMC,uBAAuB,GAAIC,KAAiB,IAAgB;EACvE,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1BG,KAAK,CAACL,IAAI,CAACO,SAAS,GAAGJ,oBAAY,CACjCJ,uBAAe,CAACC,IAAI,EACpBM,MAAM,CAACN,IAAI,EACXK,KAAK,CAACG,QAAQ,IAAIF,MAAM,CAACE,QAAQ,EACjCF,MAAM,CAACD,KAAK,CAACI,IAAI,CAAC,EAClBJ,KAAK,CAACK,MAAM,KAAK,UAAU,IAAIJ,MAAM,CAACK,QAAQ,EAC9CN,KAAK,CAACL,IAAI,CAACO,SAAS,CACrB;EAED,IAAIF,KAAK,CAACJ,QAAQ,EAAE;IAClBI,KAAK,CAACJ,QAAQ,CAACM,SAAS,GAAGJ,oBAAY,CACrCJ,uBAAe,CAACE,QAAQ,EACxBK,MAAM,CAACL,QAAQ,EACfI,KAAK,CAACG,QAAQ,IAAIF,MAAM,CAACM,gBAAgB,EACzCP,KAAK,CAACJ,QAAQ,CAACM,SAAS,CACzB;;EAGH,OAAOF,KAAK;AACd,CAAC;AArBYN,+BAAuB","names":["exports","root","required","useStyles","react_1","useLabelStyles_unstable","state","styles","className","disabled","size","weight","semibold","requiredDisabled"],"sourceRoot":"../src/","sources":["packages/react-components/react-label/src/components/Label/useLabelStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { LabelSlots, LabelState } from './Label.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\n\nexport const labelClassNames: SlotClassNames<LabelSlots> = {\n  root: 'fui-Label',\n  required: 'fui-Label__required',\n};\n\n/**\n * Styles for the label\n */\nconst useStyles = makeStyles({\n  root: {\n    fontFamily: tokens.fontFamilyBase,\n    color: tokens.colorNeutralForeground1,\n  },\n\n  disabled: {\n    color: tokens.colorNeutralForegroundDisabled,\n  },\n\n  required: {\n    color: tokens.colorPaletteRedForeground3,\n    paddingLeft: '4px', // TODO: Once spacing tokens are added, change this to Horizontal XS\n  },\n\n  requiredDisabled: {\n    color: tokens.colorNeutralForegroundDisabled,\n  },\n\n  small: {\n    fontSize: tokens.fontSizeBase200,\n    lineHeight: tokens.lineHeightBase200,\n  },\n\n  medium: {\n    fontSize: tokens.fontSizeBase300,\n    lineHeight: tokens.lineHeightBase300,\n  },\n\n  large: {\n    fontSize: tokens.fontSizeBase400,\n    lineHeight: tokens.lineHeightBase400,\n    fontWeight: tokens.fontWeightSemibold,\n  },\n\n  semibold: {\n    fontWeight: tokens.fontWeightSemibold,\n  },\n});\n\n/**\n * Apply styling to the Label slots based on the state\n */\nexport const useLabelStyles_unstable = (state: LabelState): LabelState => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(\n    labelClassNames.root,\n    styles.root,\n    state.disabled && styles.disabled,\n    styles[state.size],\n    state.weight === 'semibold' && styles.semibold,\n    state.root.className,\n  );\n\n  if (state.required) {\n    state.required.className = mergeClasses(\n      labelClassNames.required,\n      styles.required,\n      state.disabled && styles.requiredDisabled,\n      state.required.className,\n    );\n  }\n\n  return state;\n};\n"]}
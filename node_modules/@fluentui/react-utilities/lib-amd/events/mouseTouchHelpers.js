define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getEventClientCoords = exports.isMouseEvent = exports.isTouchEvent = void 0;
    /**
     * Returns true if event is a touch event. Useful when sharing logic between touch and mouse interactions.
     */
    function isTouchEvent(event) {
        return event.type.startsWith('touch');
    }
    exports.isTouchEvent = isTouchEvent;
    /**
     * Returns true if event is a mouse event. Useful when sharing logic between touch and mouse interactions.
     */
    function isMouseEvent(event) {
        return event.type.startsWith('mouse') || ['click', 'contextmenu', 'dblclick'].indexOf(event.type) > -1;
    }
    exports.isMouseEvent = isMouseEvent;
    /**
     * Returns an object with clientX, clientY for TouchOrMouseEvent.
     * Returns zeros in case the event is not a mouse or a touch event.
     */
    function getEventClientCoords(event) {
        if (isMouseEvent(event)) {
            return { clientX: event.clientX, clientY: event.clientY };
        }
        else if (isTouchEvent(event)) {
            return { clientX: event.touches[0].clientX, clientY: event.touches[0].clientY };
        }
        else {
            if (process.env.NODE_ENV !== 'production') {
                throw new Error('@fluentui/react-utilities]: Unable to get clientX. Unknown event type.');
            }
            return { clientX: 0, clientY: 0 };
        }
    }
    exports.getEventClientCoords = getEventClientCoords;
});
//# sourceMappingURL=mouseTouchHelpers.js.map
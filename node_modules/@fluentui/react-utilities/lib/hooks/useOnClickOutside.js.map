{"version":3,"mappings":"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","names":["React","useEventCallback","useOnClickOutside","options","refs","callback","element","disabled","contains","containsProp","timeoutId","useRef","undefined","useIFrameFocus","listener","ev","parent","child","isOutside","every","ref","current","target","useEffect","currentEvent","getWindowEvent","window","conditionalHandler","event","addEventListener","setTimeout","removeEventListener","clearTimeout","ownerDocument","defaultView","FUI_FRAME_EVENT","targetDocument","pollDuration","timeoutRef","e","setInterval","activeElement","tagName","CustomEvent","bubbles","dispatchEvent"],"sourceRoot":"../src/","sources":["packages/react-components/react-utilities/src/hooks/useOnClickOutside.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from './useEventCallback';\n\n/**\n * @internal\n */\nexport type UseOnClickOrScrollOutsideOptions = {\n  /**\n   * The element to listen for the click event\n   */\n  element: Document | undefined;\n  /**\n   * Refs to elements that check if the click is outside\n   */\n  refs: React.MutableRefObject<HTMLElement | undefined | null>[];\n\n  /**\n   * By default uses element.contains, but custom contain function can be provided\n   * @param parentRef - provided parent ref\n   * @param child - event target element\n   */\n  contains?(parent: HTMLElement | null, child: HTMLElement): boolean;\n\n  /**\n   * Disables event listeners\n   */\n  disabled?: boolean;\n\n  /**\n   * Called if the click is outside the element refs\n   */\n  callback: (ev: MouseEvent | TouchEvent) => void;\n};\n\n/**\n * @internal\n * Utility to perform checks where a click/touch event was made outside a component\n */\nexport const useOnClickOutside = (options: UseOnClickOrScrollOutsideOptions) => {\n  const { refs, callback, element, disabled, contains: containsProp } = options;\n  const timeoutId = React.useRef<number | undefined>(undefined);\n  useIFrameFocus(options);\n\n  const listener = useEventCallback((ev: MouseEvent | TouchEvent) => {\n    const contains: UseOnClickOrScrollOutsideOptions['contains'] =\n      containsProp || ((parent, child) => !!parent?.contains(child));\n\n    const isOutside = refs.every(ref => !contains(ref.current || null, ev.target as HTMLElement));\n    if (isOutside && !disabled) {\n      callback(ev);\n    }\n  });\n\n  React.useEffect(() => {\n    // Store the current event to avoid triggering handlers immediately\n    // Note this depends on a deprecated but extremely well supported quirk of the web platform\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = getWindowEvent(window);\n\n    const conditionalHandler = (event: MouseEvent | TouchEvent) => {\n      // Skip if this event is the same as the one running when we added the handlers\n      if (event === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      listener(event);\n    };\n\n    if (!disabled) {\n      // use capture phase because React can update DOM before the event bubbles to the document\n      element?.addEventListener('click', conditionalHandler, true);\n      element?.addEventListener('touchstart', conditionalHandler, true);\n      element?.addEventListener('contextmenu', conditionalHandler, true);\n    }\n\n    // Garbage collect this event after it's no longer useful to avoid memory leaks\n    timeoutId.current = window.setTimeout(() => {\n      currentEvent = undefined;\n    }, 1);\n\n    return () => {\n      element?.removeEventListener('click', conditionalHandler, true);\n      element?.removeEventListener('touchstart', conditionalHandler, true);\n      element?.removeEventListener('contextmenu', conditionalHandler, true);\n\n      clearTimeout(timeoutId.current);\n      currentEvent = undefined;\n    };\n  }, [listener, element, disabled]);\n};\n\nconst getWindowEvent = (target: Node | Window): Event | undefined => {\n  if (target) {\n    if (typeof (target as Window).window === 'object' && (target as Window).window === target) {\n      // eslint-disable-next-line deprecation/deprecation\n      return target.event;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return (target as Node).ownerDocument?.defaultView?.event ?? undefined;\n  }\n\n  return undefined;\n};\n\nconst FUI_FRAME_EVENT = 'fuiframefocus';\n\ninterface UseIFrameFocusOptions extends UseOnClickOrScrollOutsideOptions {\n  /**\n   * Millisecond duration to poll\n   */\n  pollDuration?: number;\n}\n\n/**\n * Since click events do not propagate past iframes, we use focus to detect if a\n * click has happened inside an iframe, since the only ways of focusing inside an\n * iframe are:\n *   - clicking inside\n *   - tabbing inside\n *\n * Polls the value of `document.activeElement`. If it is an iframe, then dispatch\n * a custom DOM event. When the custom event is received call the provided callback\n */\nconst useIFrameFocus = (options: UseIFrameFocusOptions) => {\n  const {\n    disabled,\n    element: targetDocument,\n    callback,\n    contains: containsProp = (parent, child) => !!parent?.contains(child),\n    pollDuration = 1000,\n    refs,\n  } = options;\n  const timeoutRef = React.useRef<number>();\n\n  const listener = useEventCallback((e: Event) => {\n    const contains = containsProp || ((parent, child) => !!parent?.contains(child));\n\n    const isOutside = refs.every(ref => !contains(ref.current || null, e.target as HTMLElement));\n    if (isOutside && !disabled) {\n      callback(e as MouseEvent);\n    }\n  });\n\n  // Adds listener to the custom iframe focus event\n  React.useEffect(() => {\n    if (!disabled) {\n      targetDocument?.addEventListener(FUI_FRAME_EVENT, listener, true);\n      return () => {\n        targetDocument?.removeEventListener(FUI_FRAME_EVENT, listener, true);\n      };\n    }\n  }, [targetDocument, disabled, listener]);\n\n  // Starts polling for the active element\n  React.useEffect(() => {\n    if (!disabled) {\n      timeoutRef.current = targetDocument?.defaultView?.setInterval(() => {\n        const activeElement = targetDocument?.activeElement;\n        if (activeElement?.tagName === 'IFRAME' || activeElement?.tagName === 'WEBVIEW') {\n          const event = new CustomEvent(FUI_FRAME_EVENT, { bubbles: true });\n          activeElement.dispatchEvent(event);\n        }\n      }, pollDuration);\n    }\n    return () => {\n      targetDocument?.defaultView?.clearTimeout(timeoutRef.current);\n    };\n  }, [targetDocument, disabled, pollDuration]);\n};\n"]}
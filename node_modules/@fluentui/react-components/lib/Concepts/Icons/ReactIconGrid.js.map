{"version":3,"mappings":"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","names":["React","ReactIcons","Input","shorthands","useStyles","reactIcons","Object","keys","map","iconName","filter","icon","displayName","ReactIconGrid","search","setSearch","useState","size","setSize","styles","_onSearchQueryChanged","ev","currentTarget","value","_filterBySize","newSize","_renderIcon","Icon","key","filteredIcons","useMemo","test","toLowerCase","indexOf","String","type","placeholder","onChange","className","searchBox","option","id","defaultChecked","name","htmlFor","radio","grid"],"sourceRoot":"../src/","sources":["packages/react-components/react-components/src/Concepts/Icons/ReactIconGrid.tsx"],"sourcesContent":["import * as React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FluentIconsProps } from '@fluentui/react-icons';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as ReactIcons from '@fluentui/react-icons';\nimport { Input } from '@fluentui/react-input';\nimport { makeStyles, shorthands } from '@griffel/react';\n\nconst useStyles = makeStyles({\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto auto auto',\n    gridGap: '10px',\n    backgroundColor: '#F7F7F7',\n\n    '> div': {\n      alignItems: 'center',\n      backgroundColor: '#FFFFFF',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-around',\n      ...shorthands.padding('8px'),\n      ...shorthands.overflow('hidden'),\n\n      '> code': {\n        fontSize: '8px',\n        display: 'inline-block',\n        height: 'auto',\n        ...shorthands.padding('0px 8px'),\n      },\n    },\n  },\n\n  searchBox: {\n    backgroundColor: '#F7F7F7',\n    maxWidth: '320px',\n    marginBottom: '10px',\n  },\n\n  radio: {\n    backgroundColor: '#F7F7F7',\n    fontSize: '11px',\n  },\n});\n\nconst reactIcons: React.FC<ReactIcons.FluentIconsProps>[] = Object.keys(ReactIcons)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  .map(iconName => (ReactIcons as any)[iconName])\n  .filter(icon => !!icon && !!icon.displayName);\n\nconst ReactIconGrid = () => {\n  const [search, setSearch] = React.useState('');\n  const [size, setSize] = React.useState<string | number>(24);\n  const styles = useStyles();\n\n  const _onSearchQueryChanged = (ev?: React.FormEvent<HTMLInputElement>) => {\n    setSearch(ev ? ev.currentTarget.value : '');\n  };\n\n  const _filterBySize = (ev?: React.FormEvent<HTMLElement | HTMLInputElement>) => {\n    const newSize = ev ? (ev.currentTarget as HTMLInputElement).value : '';\n    if (newSize === 'All') {\n      setSize('');\n    } else if (newSize === 'Unsized') {\n      setSize('Unsized');\n    } else {\n      setSize(newSize);\n    }\n  };\n\n  const _renderIcon = (Icon: React.FC<FluentIconsProps>): JSX.Element => {\n    return (\n      <div key={Icon.displayName} aria-label={Icon.displayName}>\n        <Icon />\n        <br />\n        <code>{Icon.displayName}</code>\n      </div>\n    );\n  };\n\n  const filteredIcons = React.useMemo(\n    () =>\n      reactIcons.filter(icon => {\n        if (size === 'Unsized') {\n          return (\n            icon.displayName! &&\n            !/\\d/.test(icon.displayName.toLowerCase()) &&\n            icon.displayName?.toLowerCase().indexOf(search.toLowerCase()) !== -1\n          );\n        }\n\n        return (\n          icon.displayName?.toLowerCase().indexOf(search.toLowerCase()) !== -1 &&\n          icon.displayName?.indexOf(String(size)) !== -1\n        );\n      }),\n    [search, size],\n  );\n\n  return (\n    <div>\n      <Input\n        type=\"search\"\n        placeholder=\"Search icons\"\n        value={search}\n        aria-label=\"search\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={_onSearchQueryChanged}\n        className={styles.searchBox}\n      />\n      {[16, 20, 24, 28, 32, 48, 'Unsized', 'All'].map(option => (\n        <>\n          <input\n            id={`option-${option}`}\n            defaultChecked={option === 24}\n            type=\"radio\"\n            value={option}\n            name=\"size\"\n            onChange={_filterBySize}\n          />\n          <label htmlFor={`option-${option}`} className={styles.radio}>\n            {option}\n          </label>\n        </>\n      ))}\n      <div className={styles.grid}>{filteredIcons.map(_renderIcon)}</div>\n    </div>\n  );\n};\n\nexport default ReactIconGrid;\n"]}
define(["require", "exports", "tslib", "react", "@fluentui/react-utilities", "@fluentui/react-icons", "@fluentui/react-shared-contexts"], function (require, exports, tslib_1, React, react_utilities_1, react_icons_1, react_shared_contexts_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useSelect_unstable = void 0;
    /**
     * Create the state required to render Select.
     *
     * The returned state can be modified with hooks such as useSelectStyles,
     * before being passed to renderSelect.
     *
     * @param props - props from this instance of Select
     * @param ref - reference to the `<select>` element in Select
     */
    var useSelect_unstable = function (props, ref) {
        var _a;
        var overrides = react_shared_contexts_1.useOverrides_unstable();
        var defaultValue = props.defaultValue, value = props.value, select = props.select, icon = props.icon, root = props.root, _b = props.appearance, appearance = _b === void 0 ? (_a = overrides.inputDefaultAppearance) !== null && _a !== void 0 ? _a : 'outline' : _b, onChange = props.onChange, _c = props.size, size = _c === void 0 ? 'medium' : _c;
        var nativeProps = react_utilities_1.getPartitionedNativeProps({
            props: props,
            primarySlotTagName: 'select',
            excludedPropNames: ['appearance', 'defaultValue', 'onChange', 'size', 'value'],
        });
        var state = {
            size: size,
            appearance: appearance,
            components: {
                root: 'span',
                select: 'select',
                icon: 'span',
            },
            select: react_utilities_1.resolveShorthand(select, {
                required: true,
                defaultProps: tslib_1.__assign({ defaultValue: defaultValue, value: value, ref: ref }, nativeProps.primary),
            }),
            icon: react_utilities_1.resolveShorthand(icon, {
                required: true,
                defaultProps: { children: React.createElement(react_icons_1.ChevronDownRegular, null) },
            }),
            root: react_utilities_1.resolveShorthand(root, {
                required: true,
                defaultProps: nativeProps.root,
            }),
        };
        state.select.onChange = react_utilities_1.useEventCallback(function (event) {
            onChange === null || onChange === void 0 ? void 0 : onChange(event, { value: event.target.value });
        });
        return state;
    };
    exports.useSelect_unstable = useSelect_unstable;
});
//# sourceMappingURL=useSelect.js.map
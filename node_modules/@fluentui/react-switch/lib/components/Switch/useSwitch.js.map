{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,yBAAyB,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,2BAA2B;AAG9G;;;;;;;;;AASA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAkB,EAAEC,GAAgC,KAAiB;EACtG,MAAM;IAAEC,OAAO;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,aAAa,GAAG,OAAO;IAAEC,QAAQ;IAAEC;EAAQ,CAAE,GAAGP,KAAK;EAEhG,MAAMQ,WAAW,GAAGb,yBAAyB,CAAC;IAC5CK,KAAK;IACLS,kBAAkB,EAAE,OAAO;IAC3BC,iBAAiB,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,UAAU;GAC5D,CAAC;EAEF,MAAMC,EAAE,GAAGb,KAAK,CAAC,SAAS,EAAEU,WAAW,CAACI,OAAO,CAACD,EAAE,CAAC;EAEnD,MAAME,IAAI,GAAGhB,gBAAgB,CAACG,KAAK,CAACa,IAAI,EAAE;IACxCC,YAAY,EAAE;MAAEb,GAAG,EAAEP,cAAc,EAAkB;MAAE,GAAGc,WAAW,CAACK;IAAI,CAAE;IAC5EN,QAAQ,EAAE;GACX,CAAC;EAEF,MAAMQ,SAAS,GAAGlB,gBAAgB,CAACG,KAAK,CAACe,SAAS,EAAE;IAClDD,YAAY,EAAE;MACZ,aAAa,EAAE,IAAI;MACnBE,QAAQ,eAAEzB,oBAACC,YAAY;KACxB;IACDe,QAAQ,EAAE;GACX,CAAC;EAEF,MAAMU,KAAK,GAAGpB,gBAAgB,CAACG,KAAK,CAACiB,KAAK,EAAE;IAC1CH,YAAY,EAAE;MACZZ,OAAO;MACPC,cAAc;MACdQ,EAAE;MACFV,GAAG;MACHiB,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,UAAU;MAChB,GAAGX,WAAW,CAACI;KAChB;IACDL,QAAQ,EAAE;GACX,CAAC;EACFU,KAAK,CAACX,QAAQ,GAAGV,cAAc,CAACqB,KAAK,CAACX,QAAQ,EAAEc,EAAE,IAAId,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGc,EAAE,EAAE;IAAElB,OAAO,EAAEkB,EAAE,CAACC,aAAa,CAACnB;EAAO,CAAE,CAAC,CAAC;EAE5G,MAAMoB,KAAK,GAAGzB,gBAAgB,CAACG,KAAK,CAACsB,KAAK,EAAE;IAC1CR,YAAY,EAAE;MACZV,QAAQ;MACRmB,OAAO,EAAEZ,EAAE;MACXJ,QAAQ;MACRiB,IAAI,EAAE;;GAET,CAAC;EAEF,OAAO;IACLnB,aAAa;IAEb;IACAoB,UAAU,EAAE;MACVZ,IAAI,EAAE,KAAK;MACXE,SAAS,EAAE,KAAK;MAChBE,KAAK,EAAE,OAAO;MACdK,KAAK,EAAE7B;KACR;IAEDoB,IAAI;IACJE,SAAS;IACTE,KAAK;IACLK;GACD;AACH,CAAC","names":["React","CircleFilled","Label","useFocusWithin","getPartitionedNativeProps","mergeCallbacks","resolveShorthand","useId","useSwitch_unstable","props","ref","checked","defaultChecked","disabled","labelPosition","onChange","required","nativeProps","primarySlotTagName","excludedPropNames","id","primary","root","defaultProps","indicator","children","input","role","type","ev","currentTarget","label","htmlFor","size","components"],"sourceRoot":"../src/","sources":["packages/react-components/react-switch/src/components/Switch/useSwitch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport { getPartitionedNativeProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport type { SwitchProps, SwitchState } from './Switch.types';\n\n/**\n * Create the state required to render Switch.\n *\n * The returned state can be modified with hooks such as useSwitchStyles_unstable,\n * before being passed to renderSwitch_unstable.\n *\n * @param props - props from this instance of Switch\n * @param ref - reference to `<input>` element of Switch\n */\nexport const useSwitch_unstable = (props: SwitchProps, ref: React.Ref<HTMLInputElement>): SwitchState => {\n  const { checked, defaultChecked, disabled, labelPosition = 'after', onChange, required } = props;\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'onChange'],\n  });\n\n  const id = useId('switch-', nativeProps.primary.id);\n\n  const root = resolveShorthand(props.root, {\n    defaultProps: { ref: useFocusWithin<HTMLDivElement>(), ...nativeProps.root },\n    required: true,\n  });\n\n  const indicator = resolveShorthand(props.indicator, {\n    defaultProps: {\n      'aria-hidden': true,\n      children: <CircleFilled />,\n    },\n    required: true,\n  });\n\n  const input = resolveShorthand(props.input, {\n    defaultProps: {\n      checked,\n      defaultChecked,\n      id,\n      ref,\n      role: 'switch',\n      type: 'checkbox',\n      ...nativeProps.primary,\n    },\n    required: true,\n  });\n  input.onChange = mergeCallbacks(input.onChange, ev => onChange?.(ev, { checked: ev.currentTarget.checked }));\n\n  const label = resolveShorthand(props.label, {\n    defaultProps: {\n      disabled,\n      htmlFor: id,\n      required,\n      size: 'medium',\n    },\n  });\n\n  return {\n    labelPosition,\n\n    //Slots definition\n    components: {\n      root: 'div',\n      indicator: 'div',\n      input: 'input',\n      label: Label,\n    },\n\n    root,\n    indicator,\n    input,\n    label,\n  };\n};\n"]}
{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;AASO,MAAMA,kBAAkB,GAAG,CAACC,KAAkB,EAAEC,GAAgC,KAAiB;EACtG,MAAM;IAAEC,OAAO;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,aAAa,GAAG,OAAO;IAAEC,QAAQ;IAAEC;EAAQ,CAAE,GAAGP,KAAK;EAEhG,MAAMQ,WAAW,GAAGC,2CAAyB,CAAC;IAC5CT,KAAK;IACLU,kBAAkB,EAAE,OAAO;IAC3BC,iBAAiB,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,UAAU;GAC5D,CAAC;EAEF,MAAMC,EAAE,GAAGH,uBAAK,CAAC,SAAS,EAAED,WAAW,CAACK,OAAO,CAACD,EAAE,CAAC;EAEnD,MAAME,IAAI,GAAGL,kCAAgB,CAACT,KAAK,CAACc,IAAI,EAAE;IACxCC,YAAY,EAAE;MAAEd,GAAG,EAAEe,8BAAc,EAAkB;MAAE,GAAGR,WAAW,CAACM;IAAI,CAAE;IAC5EP,QAAQ,EAAE;GACX,CAAC;EAEF,MAAMU,SAAS,GAAGR,kCAAgB,CAACT,KAAK,CAACiB,SAAS,EAAE;IAClDF,YAAY,EAAE;MACZ,aAAa,EAAE,IAAI;MACnBG,QAAQ,EAAEC,oBAACC,0BAAY;KACxB;IACDb,QAAQ,EAAE;GACX,CAAC;EAEF,MAAMc,KAAK,GAAGZ,kCAAgB,CAACT,KAAK,CAACqB,KAAK,EAAE;IAC1CN,YAAY,EAAE;MACZb,OAAO;MACPC,cAAc;MACdS,EAAE;MACFX,GAAG;MACHqB,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,UAAU;MAChB,GAAGf,WAAW,CAACK;KAChB;IACDN,QAAQ,EAAE;GACX,CAAC;EACFc,KAAK,CAACf,QAAQ,GAAGG,gCAAc,CAACY,KAAK,CAACf,QAAQ,EAAEkB,EAAE,IAAIlB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGkB,EAAE,EAAE;IAAEtB,OAAO,EAAEsB,EAAE,CAACC,aAAa,CAACvB;EAAO,CAAE,CAAC,CAAC;EAE5G,MAAMwB,KAAK,GAAGjB,kCAAgB,CAACT,KAAK,CAAC0B,KAAK,EAAE;IAC1CX,YAAY,EAAE;MACZX,QAAQ;MACRuB,OAAO,EAAEf,EAAE;MACXL,QAAQ;MACRqB,IAAI,EAAE;;GAET,CAAC;EAEF,OAAO;IACLvB,aAAa;IAEb;IACAwB,UAAU,EAAE;MACVf,IAAI,EAAE,KAAK;MACXG,SAAS,EAAE,KAAK;MAChBI,KAAK,EAAE,OAAO;MACdK,KAAK,EAAEI;KACR;IAEDhB,IAAI;IACJG,SAAS;IACTI,KAAK;IACLK;GACD;AACH,CAAC;AA/DYK,0BAAkB","names":["useSwitch_unstable","props","ref","checked","defaultChecked","disabled","labelPosition","onChange","required","nativeProps","react_utilities_1","primarySlotTagName","excludedPropNames","id","primary","root","defaultProps","react_tabster_1","indicator","children","React","react_icons_1","input","role","type","ev","currentTarget","label","htmlFor","size","components","react_label_1","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-switch/src/components/Switch/useSwitch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CircleFilled } from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nimport { getPartitionedNativeProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport type { SwitchProps, SwitchState } from './Switch.types';\n\n/**\n * Create the state required to render Switch.\n *\n * The returned state can be modified with hooks such as useSwitchStyles_unstable,\n * before being passed to renderSwitch_unstable.\n *\n * @param props - props from this instance of Switch\n * @param ref - reference to `<input>` element of Switch\n */\nexport const useSwitch_unstable = (props: SwitchProps, ref: React.Ref<HTMLInputElement>): SwitchState => {\n  const { checked, defaultChecked, disabled, labelPosition = 'after', onChange, required } = props;\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'onChange'],\n  });\n\n  const id = useId('switch-', nativeProps.primary.id);\n\n  const root = resolveShorthand(props.root, {\n    defaultProps: { ref: useFocusWithin<HTMLDivElement>(), ...nativeProps.root },\n    required: true,\n  });\n\n  const indicator = resolveShorthand(props.indicator, {\n    defaultProps: {\n      'aria-hidden': true,\n      children: <CircleFilled />,\n    },\n    required: true,\n  });\n\n  const input = resolveShorthand(props.input, {\n    defaultProps: {\n      checked,\n      defaultChecked,\n      id,\n      ref,\n      role: 'switch',\n      type: 'checkbox',\n      ...nativeProps.primary,\n    },\n    required: true,\n  });\n  input.onChange = mergeCallbacks(input.onChange, ev => onChange?.(ev, { checked: ev.currentTarget.checked }));\n\n  const label = resolveShorthand(props.label, {\n    defaultProps: {\n      disabled,\n      htmlFor: id,\n      required,\n      size: 'medium',\n    },\n  });\n\n  return {\n    labelPosition,\n\n    //Slots definition\n    components: {\n      root: 'div',\n      indicator: 'div',\n      input: 'input',\n      label: Label,\n    },\n\n    root,\n    indicator,\n    input,\n    label,\n  };\n};\n"]}
{"version":3,"mappings":";;;;;;AAWA;;;;;;;AAOO,MAAMA,yBAAyB,GACpCC,OAA4C,IACZ;;EAChC,MAAM;IAAEC;EAAK,CAAE,GAAGD,OAAO;EACzB,MAAME,KAAK,GAAGF,OAAO,CAACG,MAAM,KAAK,KAAK;EAEtC,IAAID,KAAK,EAAE;IACT,OAAO;MACLE,WAAW,EAAEH,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9BC,aAAa,EAAEL,KAAK,CAACM,MAAM,GAAG,CAAC,GAAGN,KAAK,GAAGO;KAC3C;;EAGH,MAAMC,cAAc,GAAG,aAAO,CAACA,cAAc,mCAAI,CAAC;EAClD,MAAMC,WAAW,GAAG,EAAED,cAAc,IAAIR,KAAK,CAACM,MAAM,GAAGE,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/E,MAAMH,aAAa,GAAGL,KAAK,CAACI,KAAK,CAAC,CAAC,EAAEK,WAAW,CAAC;EAEjD,OAAO;IACLN,WAAW,EAAEH,KAAK,CAACI,KAAK,CAACK,WAAW,CAAC;IACrCJ,aAAa,EAAEA,aAAa,CAACC,MAAM,GAAG,CAAC,GAAGD,aAAa,GAAGE;GAC3D;AACH,CAAC;AArBYG,iCAAyB","names":["partitionAvatarGroupItems","options","items","isPie","layout","inlineItems","slice","overflowItems","length","undefined","maxInlineItems","inlineCount","exports"],"sourceRoot":"../src/","sources":["packages/react-components/react-avatar/src/utils/partitionAvatarGroupItems.ts"],"sourcesContent":["export type PartitionAvatarGroupItemsOptions<T> = {\n  items: readonly T[];\n  layout?: 'spread' | 'stack' | 'pie';\n  maxInlineItems?: number;\n};\n\nexport type PartitionAvatarGroupItems<T> = {\n  inlineItems: readonly T[];\n  overflowItems?: readonly T[];\n};\n\n/**\n * Get the inline items and overflowing items based on the array of AvatarGroupItems needed for AvatarGroup.\n *\n * @param options - Configure the partition options\n *\n * @returns Two arrays split into inline items and overflow items based on maxInlineItems.\n */\nexport const partitionAvatarGroupItems = <T>(\n  options: PartitionAvatarGroupItemsOptions<T>,\n): PartitionAvatarGroupItems<T> => {\n  const { items } = options;\n  const isPie = options.layout === 'pie';\n\n  if (isPie) {\n    return {\n      inlineItems: items.slice(0, 3),\n      overflowItems: items.length > 0 ? items : undefined,\n    };\n  }\n\n  const maxInlineItems = options.maxInlineItems ?? 5;\n  const inlineCount = -(maxInlineItems - (items.length > maxInlineItems ? 1 : 0));\n  const overflowItems = items.slice(0, inlineCount);\n\n  return {\n    inlineItems: items.slice(inlineCount),\n    overflowItems: overflowItems.length > 0 ? overflowItems : undefined,\n  };\n};\n"]}